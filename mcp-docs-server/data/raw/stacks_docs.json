{
  "source": "https://docs.stacks.co/",
  "crawled_at": "2025-10-10T07:29:33.209209Z",
  "total_pages": 164,
  "total_words": 238946,
  "pages": [
    {
      "url": "https://docs.stacks.co/",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Start Here](https://docs.stacks.co/#start-here)\n  * [Stacks: The TL;DR](https://docs.stacks.co/#stacks-the-tl-dr)\n\n\nWas this helpful?\nCopy\n# Start Here\n[![License](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2Fimg.shields.io%2Fgithub%2Flicense%2Fstacks-network%2Fdocs&width=300&dpr=4&quality=100&sign=5c6632a0&sv=2)](https://github.com/stacks-network/docs/blob/master/LICENSE/README.md)\n## \n[](https://docs.stacks.co/#start-here)\nStart Here\n### \n[](https://docs.stacks.co/#stacks-the-tl-dr)\nStacks: The TL;DR\n**Stacks is the leading Bitcoin L2, bringing smart contract functionality to Bitcoin, without modifying Bitcoin itself.**\nWant to get a guided introduction to everything you need to know to become a Stacks developer? The Stacks Primer is a 5-day email course designed to take you from brand new to building your first contract, and even how to get paid for building out your own project.\n[Take the Course](https://stacks.org/dev)\nIt does so through three key components, that we'll dig into in more detail in the rest of the docs:\n**Proof of Transfer**\nProof of Transfer (PoX) is the block production mechanism of the Stacks chain. Essentially, it attempts to recreate the block production patterns of PoW programmatically. Stacks miners spend BTC for a chance to mine new Stacks blocks. Under the hood, this block production mechanism anchors Stacks blocks to Bitcoin blocks, making it as hard to reverse a Stacks block as it is to reverse a Bitcoin block. That's a big claim, and we unpack it in further detail in the sections on Nakamoto block production.\n**Clarity**\nClarity is the smart contract language that Stacks uses. it has been designed from the ground up to make it easier for developers to write safe, secure smart contracts. Additionally, since it has been purpose-built for Stacks and Bitcoin, there are built-in functions for reading Bitcoin state, which means you can use Bitcoin state to perform actions in Clarity. For example, you could set up a check to make sure a particular Bitcoin transaction has occurred before executing a mint function in Clarity, which just so happens to be what happens with the third component: sBTC.\n**sBTC**\nsBTC is the trust-minimized 2-way Bitcoin peg on the Stacks layer. sBTC is the key to making Bitcoin programmable and bringing full smart contract functionality to Bitcoin via Stacks. sBTC is not a federation, but operates as an open-network, decentralized 2-way peg solution to bring smart contract functionality to Bitcoin with as little counterparty risk as possible. There is an entire section of these docs dedicated to explaining[ sBTC](https://docs.stacks.co/concepts/sbtc).\n#### \n[](https://docs.stacks.co/#how-to-use-these-docs)\nHow to Use These Docs\n#### \n[](https://docs.stacks.co/#ai-powered-semantic-search)\nAI-Powered Semantic Search\nLooking for something specific? These docs are integrated with AI-powered semantic search, hit `Cmd/Ctrl + K` to open up the search box and ask the docs whatever you like.\n#### \n[](https://docs.stacks.co/#what-next)\nWhat Next?\n**Learn About Stacks**\nLooking to learn more about exactly how Stacks works? The \"[Concepts](https://github.com/stacks-network/docs/blob/master/broken-reference/README.md)\" section in the left navigation is where you'll want to go. The \"[What is Stacks](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\" page is the best place to start your learning journey. This is where you can dive deep into exactly how Stacks works and learn about all the different building blocks.\n**Build a Stacks Dapp**\nAre you a developer itching to get building? The [Quickstart tutorial](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial) is the best place to start. It will introduce you to the essential things you need to know to build on Stacks in just 30 minutes. After that, check the rest of the Guides & Tutorials to learn how to build things like DeFi apps, crowdfunding, and collectibles, among other use cases.\n**Run a Stacks Node**\nLooking to run a Stacks node? You can either run a follower node or a miner node. We have guides for how to do both on testnet and mainnet in the \"[Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\" section of the Guides.\n**Run a Signer**\nSigners are a critical component of the Stacks ecosystem and are in charge of validating and appending new Stacks blocks and sBTC transactions. We have an entire section dedicated to [running a signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer).\n**Stack Your STX**\nStacking is one of the key components behind Stacks and the Proof of Transfer consensus mechanism. There are many different ways you can stack depending on if you are stacking solo, stacking in a pool, and running a signer or not. We have a [section on stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx) to walk you through the process no matter your situation.\n**Get More Involved**\nLooking to grow your career in the Stacks ecosystem? Be sure to start working on your own project and submit it to the [Code for STX](https://stacks.org/code-for-stx) program to earn STX every month just for working on your project. And, if you're feeling up to the challenge, apply to the Clarity Collective, an exclusive community of proven, committed Stacks builders all dedicated to becoming exceptional Stacks developers.\nNext up, dig into exactly what Stacks is and how it works üëáüèª\n[NextStacks 101](https://docs.stacks.co/concepts/stacks-101)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 1297,
      "title": "Start Here | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/stacks-101",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Stacks 101\nStacks has a very unique technical model in the blockchain world. This section will help you get a high-level overview of the essential components to understand how Stacks works.\nWe'll cover the basics of what Stacks is and how it works from both a philosophical and technical level, and you can dive into the further sections for more details.\nFirst up, let's get an overview of exactly what Stacks is.\n[PreviousStart Here](https://docs.stacks.co/)[NextWhat Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 620,
      "title": "Stacks 101 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/stacks-101/what-is-stacks",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [What is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks#what-is-stacks)\n  * [Stacks and the Purpose of Blockchain Technology](https://docs.stacks.co/concepts/stacks-101/what-is-stacks#stacks-and-the-purpose-of-blockchain-technology)\n  * [The Stacks Way](https://docs.stacks.co/concepts/stacks-101/what-is-stacks#the-stacks-way)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n\n\n# What Is Stacks?\n## \n[](https://docs.stacks.co/concepts/stacks-101/what-is-stacks#what-is-stacks)\nWhat is Stacks?\nWe can get an idea of the goal and ethos behind Stacks by looking at [how Satoshi envisioned generalizing Bitcoin](https://satoshi.nakamotoinstitute.org/posts/bitcointalk/threads/244/#222) back in 2010:\n> \"...to be a completely separate network and separate block chain, yet share CPU power with Bitcoin...all networks in the world would share combined CPU power, increasing the total strength.\"\nThis is major theme in the design decisions for Stacks. A bit of a contradiction in the Bitcoin world, the Stacks network is a Bitcoin L2, but it does have its own token.\nThis is an intentional and critical design decision primarily for the purpose of maintaining decentralization, rather than needing to rely on a federation.\nIf that's confusing or you are skeptical, that's understandable, we'll be diving deeper into these ideas as we go through the docs.\n### \n[](https://docs.stacks.co/concepts/stacks-101/what-is-stacks#stacks-and-the-purpose-of-blockchain-technology)\nStacks and the Purpose of Blockchain Technology\nWhen evaluating new blockchain technologies, it's important to keep the original intent and purpose of them intact. If we go back to Bitcoin, it was originally designed to be:\n  * Decentralized\n  * Immutable\n  * Secure\n\n\nYou've likely heard of the blockchain trilemma, the problem of trying to balance the decentralization, scalability, and security of a blockchain network.\nStacks takes the approach of solving this trilemma by separating out chains into layers.\nSo at the bottom, you have the foundational layer: Bitcoin.\nBitcoin is the most decentralized, most secure, and most immutable blockchain network. However, that comes with a few tradeoffs.\nBitcoin is very slow compared to other networks. Bitcoin only has a new block written once every 10 minutes or so, making its throughput negligible compared to networks designed for speed like Solana.\nBitcoin is also \"boring\". Ethereum came along after Bitcoin and sought to do the same thing for software that Bitcoin did for money. Ethereum's goal is to be a decentralized supercomputer of sorts, serving as a global compute environment for smart contracts (code that is written to a blockchain).\nBitcoin is also not scalable. Because every new block must propagate to every node on the network, Bitcoin can only run as fast as the slowest node in the network. Now we are seeing the rise of modular blockchain networks like Cosmos that are designed to make it easy for people to spin up their own blockchain networks.\nWhile most new blockchain protocols popping up these days see these properties as negatives and seek to eliminate them, the Stacks community sees things differently.\n### \n[](https://docs.stacks.co/concepts/stacks-101/what-is-stacks#the-stacks-way)\nThe Stacks Way\nStacks takes a layered approach, where you have the foundational settlement layer at the bottom (Bitcoin), and then you add scalability and functionality on top of that using layers.\nThere are many different types of L2s and different ways they can be built. They all come with [different tradeoffs](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers) and have their own way of accomplishing the goals of scalability or functionality.\nBy taking this layered approach, we are able to have all of the same functionality as chains like Ethereum, but built on Bitcoin.\nSo Stacks is a Bitcoin layer 2 with some unique properties, like having its own token, that acts as an incentive mechanism to maintain a historical ledger of all of its transactions and operate with its own security budget (in addition to Bitcoin's security budget, more on this in the next section).\nThis is one of the things that separates Stacks from other Bitcoin layers like Lightning.\nLightning doesn't add any additional functionality to Bitcoin, it simply helps to scale functionality Bitcoin already has and help it operate faster. Lightning is also ephemeral, it has no permanent state that it keeps track of, and so is unsuitable for things like smart contracts that need to keep track of data and maintain state.\nContrast this to Stacks, which adds additional functionality to Bitcoin but still ultimately settles down to Bitcoin (we'll cover this next in the section as well).\nThe benefit we get here is that we can maintain a separation of concerns and keep Bitcoin simple and sturdy, chugging along producing blocks, and add additional layers for functionality and speed. But if those other layers were to be compromised, that would not affect the foundational layer at all.\nThis is an important property when we are talking about building blockchains that are designed to be a global decentralized money (Bitcoin) and a decentralized economy built on top of that money (Stacks).\nThe STX token is a separate token used to incentivize honest block production. It does not represent pegged Bitcoin (there is a separate Bitcoin peg called [sBTC](https://docs.stacks.co/concepts/sbtc) for that purpose). While this may ruffle some feathers among some people in the Bitcoin community, it has several advantages.\nBy implementing a token into the Stacks chain, we provide additional economic incentive for miners to produce Stacks blocks honestly.\nThis token provides additional incentive in the form of serving as a way to grow the chain. Rather than relying on altruism in order to produce blocks and grow the chain, we can incentivize builders, token-holders, and investors all at the same time by having a token.\nThe ICO scams of 2017 put a bad taste in a lot of peoples' mouths, which has justifiably made a lot of people skeptical of every new blockchain project that pops up with a new token.\nBut the problem with all of these projects is that they had no actual value, they weren't anchored to anything else of value and provided no real utility.\nWith a project like Stacks, we have real utility in the sense of serving as a way to utilize Bitcoin and make it a productive asset **in a decentralized way.** This is a key point, Currently the only way to make Bitcoin productive is by giving it to a custodial service or transferring it off the Bitcoin chain by way of something like wBTC on Ethereum.\nStacks allows us to do this while ultimately still settling to the Bitcoin chain.\nIn addition, Stacks allows us to build decentralized and censorship-resistant software utilizing Bitcoin as the foundational settlement layer. Eventually, the goal is to build a network of financial systems and decentralized software products that all utilize Bitcoin as their money.\nWith that context, let's dive into exactly how Stacks is connected to Bitcoin.\n[PreviousStacks 101](https://docs.stacks.co/concepts/stacks-101)[NextBitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1611,
      "title": "What Is Stacks? | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/stacks-101/bitcoin-connection",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Is Stacks a Bitcoin L2?](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#is-stacks-a-bitcoin-l2)\n  * [Why Does Stacks Need a Token?](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#why-does-stacks-need-a-token)\n  * [The Symbiotic Relationship Between Stacks and Bitcoin](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#the-symbiotic-relationship-between-stacks-and-bitcoin)\n  * [Reading from Bitcoin State](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#reading-from-bitcoin-state)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n\n\n# Bitcoin Connection\nIn the previous section, we described Stacks as bringing smart contract functionality to Bitcoin, without modifying Bitcoin itself, and explained a bit about how the chain works.\nThat's a big promise, but how does Stacks actually deliver on it? And what makes Stacks unique among other Bitcoin layers and other blockchains like Ethereum?\nBefore we get into the technical details of how Stacks works, it's important to get a high-level overview of the problem its solving and how it actually does that. We'll dive deeper into some of these topics as we go through the docs, but it's good to get a high-level picture to bring everything together.\nThis topic is a bit of a rabbit hole, and this section is pretty long, but it will give you an in-depth understanding of exactly the problem Stacks is looking to solve, and how it solves it.\nLet's get into it.\n### \n[](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#is-stacks-a-bitcoin-l2)\nIs Stacks a Bitcoin L2?\nStacks is a Bitcoin layer for smart contracts. The classification as a layer-1 (L1) or layer-2 (L2) or sidechain really depends on the definition used. With that said, generally speaking L1 chains are sovereign meaning that (a) they have their own security budget, and (b) they can survive without the need for any other L1 chain. L2 chains typically do not have their own security budget and share the security of the underlying L1 chain, and they cannot live without the underlying L1 chain. There are many different design mechanisms that L2s can use, and we cover several of them and how Stacks compares in the [Stacks Among Other Bitcoin Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers) section.\nThe initial release of Stacks in early 2021 had a separate security budget from Bitcoin L1. Even though the Stacks layer could not function without Bitcoin L1, the developers working on the project described it as a different system that does not fit neatly into existing classifications, sometimes using the term layer 1.5 (see [this Decrypt article](https://decrypt.co/82019/bitcoin-defi-thing-says-stacks-founder-muneeb-ali) for example).\nThe upcoming planned release of Stacks, called the Nakamoto release, will no longer have a separate security budget from Bitcoin. Instead, a 100% of Bitcoin hashpower will determine finality on Stacks layer. After the next upgrade, to reorg Stacks blocks/transactions the attacker will need to reorg Bitcoin L1 itself (which is very hard to do and therefore a great security property for a Bitcoin layer to have). More details in the [Stacks paper](https://stacks.co/stacks.pdf).\nThe definition of [L2 used in Ethereum](https://ethereum.org/en/layer-2/) and other newer ecosystems is different and focuses on the ability to withdraw assets using only L1 security and L1 miners. According to that definition Stacks layer is not a clear L2, given the set of peg-out signers determine if users can withdraw sBTC. Bitcoin cannot support such verification without changes to Bitcoin L1 (which may happen in the future). The Ethereum L2 definition also does not apply that cleanly to Bitcoin L2s, given new assets are issued on L2s when it comes to Bitcoin and not issued on L1 (only BTC is the L1 asset). Therefore, using the definition of security of withdrawing assets is not directly applicable given assets are defined and used on L2s and not withdrawn out to Bitcoin L1 anyway (with the exception of BTC itself). Rather, what becomes more important is \"settlement on Bitcoin\" i.e., is contract data and state secured by 100% of Bitcoin's hashpower or not.\nRemember that L2s on Bitcoin also have to serve the additional purpose of expanding both functionality and scalability, which means L2s accomplish fundamentally different goals depending on the functionality of the L1.\nUsers and developers organically call Stacks a Bitcoin L2, since it is a simpler concept to understand. There are certain properties of Stacks layer that also help the concept of Stacks as a Bitcoin L2:\n  1. Bitcoin finality, as discussed above, where 100% of the Bitcoin hashpower decides block ordering and transaction finality.\n  2. Stacks consensus runs on Bitcoin L1, and Stacks L2 cannot operate or survive without Bitcoin L1.\n  3. With the upcoming decentralized Bitcoin peg, called sBTC, most of economy on Stacks layer will likely use BTC as the unit of economy. It is expected that most users will simply use Bitcoin in wallets and apps and then peg out their BTC to Bitcoin L1.\n  4. All data and transactions on Stacks are automatically hashed and permanently stored on Bitcoin L1 on every Bitcoin block. Anyone can verify that some data on Stacks is valid by checking the corresponding hash on Bitcoin L1. This compact storage of hashes on L1 is somewhat similar to rollups (although there are other differences). You can read more about this process in the [Block Production](https://docs.stacks.co/concepts/block-production) section.\n  5. Contracts on Stacks layer can read Bitcoin L1 transactions and respond to them. Assets on Stacks layer can be moved simply through Bitcoin L1 transactions.\n\n\nGiven all the details above, why would some people think that Stacks is not a Bitcoin L2? There are a couple of reasons why this question comes up often:\n  1. The initial version of Stacks (released early 2021) had a separate security budget which changed to following 100% Bitcoin hashpower with the Nakamoto release. There is old material and blog posts floating around that still talk about the initial Stacks version. The old materials will likely get updated with time.\n  2. According to the Ethereum definition of L2s a user should be able to withdraw their base-layer assets purely by doing a L1 transaction and relying only on L1 security (this is true for Lightning for example). This definition does not apply cleanly to Bitcoin L2s because assets are not defined at Bitcoin L1 but are defined in L2s instead. The only asset where this matters is the pegged BTC asset from Bitcoin L1, given all other assets are native to L2s anyway. In the upcoming Stacks release, users can withdraw their BTC by sending just a Bitcoin L1 transaction but Bitcoin L1 cannot validate that complex transaction and a majority of peg-out signers will need to sign on the peg-out request. In an ideal world Bitcoin miners can validate such transactions but that would require a change to Bitcoin L1. Therefore, Stacks design optimizes for a method that is decentralized and can be deployed without any changes to Bitcoin L1. If in the future it is possible to make changes to Bitcoin L1 then Stacks layer security can benefit from that as well.\n  3. Bitcoin community members are generally skeptical of claims and on a look out for people making any false marketing claims. This is generally a healthy thing for the Bitcoin ecosystem and builds up the immune system. Some such community members might be skeptical about Stacks as a Bitcoin layer or L2 until they fully read the technical details and reasoning. There is a good [Twitter thread](https://twitter.com/lopp/status/1623756872976158722?s=20) about this topic as well.\n\n\nWhy don't we use the term 'sidechain' for Stacks then? Sidechains in Bitcoin typically have a different security budget from Bitcoin L1, typically as a subset of Bitcoin miners who participate in the sidechain (they don't follow 100% Bitcoin finality), their consensus runs on the sidechain (vs running on Bitcoin L1), and they don't publish their data/hashes on Bitcoin L1. The Stacks layer does not fit that definition cleanly given the consensus runs on Bitcoin L1, it follows Bitcoin finality, and publishes data/hashes on L1.\n**Can Stacks layer work with rollups?**\nYes! There is already an active R&D effort to integrate rollups with the Stacks layer. Both with the Stacks layer and sovereign rollups the technically challenging part is how to get BTC in and out of the Stacks layer or the sovereign rollup. The decentralized BTC peg, [sBTC](https://docs.stacks.co/concepts/sbtc), applies to both the Stacks layer and sovereign rollups. Without modifying Bitcoin L1, an sBTC-like design with a decentralized open-membership group of signers is the most trust-minimized way to move BTC in and out of Bitcoin layers. Once the necessary upgrades to Bitcoin L1 can be made to enable validity rollups i.e., Bitcoin L1 can enforce BTC withdrawal from a layer, then the Stacks layer can also upgrade to benefit from it.\nGiven a trust-minimized asset like sBTC is needed for sovereign rollups, with the launch of sBTC such sovereign rollups become even more interesting to deploy. The Stacks layer can potentially provide the decentralized group of signers for a trust-minimized BTC asset that can be used in a sovereign rollup, and DA comes directly from Bitcoin L1 e.g., with Ordinals.\n### \n[](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#why-does-stacks-need-a-token)\nWhy Does Stacks Need a Token?\nThis brings us to a central philosophical conversation in the world of crypto and Bitcoin, whether or not blockchains need tokens.\nLet's start by looking at the fundamental reason why tokens exist: to fund the maintenance and forward progress of a blockchain.\nBitcoin is a token. It is a cryptocurrency that is used to incentivize miners to add new blocks to the chain. In Bitcoin's case, mining rewards are set on a predefined schedule, and once those mining rewards run out, the chain will need to survive on transaction fees alone.\nThe purpose of a blockchain is to have a permanent historical record of every transaction that has ever occurred on the chain. Blockchains are basically ledgers. The token aspect is used as an incentive mechanism to secure and maintain the chain.\nThis is why networks like Lightning and other P2P networks don't need tokens, they don't need to maintain a historical record. Channel-based solutions like Lightning rely on users opening 2-of-2 multisigs with each other. Once those channels are closed, the state disappears. When we are talking about a system that is supposed to maintain a global financial system, it is important for the maintenance of that system to be incentivized correctly.\nLet's look at this concept in the context of Stacks and its goals. Stacks seeks to provide smart contract functionality to Bitcoin, to serve as the programming rails for building a decentralized economy on top of Bitcoin.\nMany Bitcoin community members are skeptical of new tokens and rightly so. There are countless projects out there that force the use of a token on their project and in many cases a token is actually not needed. The Stacks project was started by Bitcoin builders who have a long history of building apps & protocols on Bitcoin L1 without any token (e.g., BNS launched in 2015 on Bitcoin L1 which was one of the largest protocols using OP_RETURN on Bitcoin L1). So why did a bunch of Bitcoin builders decide to have a separate token for Stacks L2? Great question! Let's dig into the details.\nThe Stacks token (STX) is primarily meant to be used for two things (details in [Stacks paper](https://stacks-network.github.io/stacks/stacks.pdf)):\n  1. Incentives for Stacks L2 miners\n  2. Incentives for peg-out signers\n\n\nThe only way to remove the token is to build Stacks as a federated network like Liquid. In a federation the pre-selected group of companies control the mining and block production and a pre-selected group of companies need to be trusted for peg-out transactions.\nStacks developers wanted to design an open and permissionless system. The only way to have a decentralized mining process is through incentives. As mentioned above, this is how Bitcoin works as well, where newly minted BTC are used as incentives to mine new blocks and anyone in the world can decide to become a miner. Anyone with BTC can mine the Stacks L2 chain, it is open and permissionless.\nSimilarly, the way sBTC is designed is that the group of signers is open and permissionless (unlike a federation). These signers have economic incentives to correctly follow the protocol for peg-out requests. In a federation, users need to blindly trust the pre-set federation members to get their BTC out of the federation and back on Bitcoin L1. Stacks developers wanted to have an open, permissionless, and decentralized way to move BTC from Bitcoin L1 to Stacks L2 and back. This is made possible through economic incentives i.e., need for a token.\nWith more and more Bitcoin layers emerging, there is some nuance in this federated vs open network design. Some protocols like Botanix's Spiderchain offer an open network but have different incentive mechanisms. We dig into these in detail in the [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers) section.\nOther than these two reasons, STX is also used to pay gas fees for transactions. However, once the upcoming sBTC peg is live most of the economy of Stacks L2 is expected to follow a Bitcoin standard and work using BTC as the economic unit. It is expected that users will mostly interact just with Bitcoin and use BTC in wallets and apps (gas fees can be paid with BTC using atomic swaps in the background). It is important to note that BTC cannot be used for mining incentives on Stacks L2 because the only way to incentivize decentralized block production is through newly minted assets by the protocol (similar to how Bitcoin works itself) i.e., need for a token.\n### \n[](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#the-symbiotic-relationship-between-stacks-and-bitcoin)\nThe Symbiotic Relationship Between Stacks and Bitcoin\nStacks and Bitcoin complement each other. Stacks leverages the extreme decentralization of Bitcoin, its PoW consensus mechanism, and its value as a cryptocurrency.\nBut Stacks also complements Bitcoin by unlocking additional use cases, thereby increasing its value over time. This also helps to solve the additional problem of the future maintainability of Bitcoin after the coinbase rewards are gone and Bitcoin has to function on transaction fees alone.\nIf Bitcoin is seen as only a store of value, the economic density, meaning how much value is being exchanged, of each transaction will be minimal. But if Bitcoin is the underlying foundation for an entire decentralized economy, those [transactions become much more valuable](https://twitter.com/muneeb/status/1506976317618728963), increasing transaction fees. This is a crucial incentive for miners to continue securing the network as coinbase rewards drop.\n### \n[](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection#reading-from-bitcoin-state)\nReading from Bitcoin State\nOne of the things that gives the Stacks chain its superpowers in connecting with Bitcoin is not only how it connects to Bitcoin at a protocol level, discussed above, but also how we can utilize that Bitcoin at a programmatic level.\nThat's where Clarity comes in. Clarity is the smart contract language for Stacks, and is how we actually build out a lot of the functionality we are talking about here.\nOne of the often-touted features of Clarity is that it has access to the state of the Bitcoin chain built in, but how does it actually do that? Because of Stacks' PoX mechanism, every Stacks block is connected to a Bitcoin block, and can query Bitcoin block header hashes with the [`get-burn-block-info?` function](https://github.com/stacksgov/sips/blob/feat/sip-015/sips/sip-015/sip-015-network-upgrade.md#new-method-get-burn-block-info).\nThis function allows us to pass in a Bitcoin block height and get back the header hash. The [`burn-block-height` Clarity keyword](https://docs.stacks.co/docs/write-smart-contracts/clarity-language/language-keywords#burn-block-height) will give us the current block height of the Bitcoin chain.\nHowever, `get-burn-block-info?` only returns data of the Bitcoin block at that height if it has already been processed and was created after the launch of the Stacks chain. So if we want to evaluate whether or not something happened on Bitcoin, we have to wait at least one block later to do so.\nThis is step 1 of Clarity contracts being able to serve as the programming layer for Bitcoin, when a BTC transaction is initiated, the first thing that needs to happen is that a Clarity contract needs to become aware of it. This can happen manually by utilizing Clarity functions discussed above with the [BTC library](https://explorer.stacks.co/txid/0x8b112f2b50c1fa864997b7496aaad1e3940700309a3fdcc6c07f1c6f8b9cfb7b?chain=mainnet), as [Catamaran Swaps](https://docs.catamaranswaps.org/en/latest/catamaran.html) do.\nNote that this process is made easier by the additional Clarity functions added in 2.1, like the `get-burn-block-info?` function we looked at above.\nOr we can automate (albeit at a cost of some centralization in our dapp) using an event-based architecture using something like Hiro's [chainhooks](https://www.hiro.so/blog/meet-4-new-features-in-clarinet#setting-up-trigger-actions-with-chainhooks), which will allow us to automatically trigger a Clarity contract call when a certain BTC transaction is initiated.\nThis is the first component of using Stacks to build Bitcoin dapps, the read access to Bitcoin chain.\nNext up, let's dig a bit deeper into how exactly Stacks is \"built on Bitcoin\" by taking a look at Stacks' block production mechanism, Proof of Transfer.\n[PreviousWhat Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)[NextProof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\nLast updated 4 months ago\nWas this helpful?\n",
      "wordCount": 3263,
      "title": "Bitcoin Connection | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/stacks-101/proof-of-transfer",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Why Bitcoin?](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer#why-bitcoin)\n  * [Unlocking Bitcoin capital](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer#unlocking-bitcoin-capital)\n  * [Proof of Transfer Contracts and Technical Details](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer#proof-of-transfer-contracts-and-technical-details)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n\n\n# Proof of Transfer\nIn the previous sections, we took a look at the vision and ethos of Stacks and talked a lot about it being connected to Bitcoin and how it enables expanding functionality without modifying Bitcoin itself.\nIn this section, we'll run through the block production mechanism that makes that happen, Proof of Transfer.\nThis section will be a conceptual overview of Proof of Transfer. For more details on exactly how block production happens at a technical level, check out the section on [Block Production](https://docs.stacks.co/concepts/block-production).\nConsensus algorithms for blockchains require compute or financial resources to secure the blockchain. The general practice of decentralized consensus is to make it practically infeasible for any single malicious actor to have enough computing power or ownership stake to attack the network.\nPopular consensus mechanisms in modern blockchains include proof of work, in which nodes dedicate computing resources, and proof of stake, in which nodes dedicate financial resources to secure the network.\nProof of burn is another, less-frequently used consensus mechanism where miners compete by ‚Äòburning‚Äô (destroying) a proof of work cryptocurrency as a proxy for computing resources.\nProof of transfer (PoX) is an extension of the proof of burn mechanism. PoX uses the proof of work cryptocurrency of an established blockchain (Bitcoin in this case) to secure a new blockchain. However, unlike proof of burn, rather than burning the cryptocurrency, miners transfer the committed cryptocurrency to some other participants in the network (Stackers in this case).\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fce8G1UEopL9xMPxUtSSX%252Fimage.png%3Falt%3Dmedia%26token%3D5cc502d4-5f1d-41ab-9320-69869026d531&width=768&dpr=4&quality=100&sign=cc29b54d&sv=2)\nThis allows network participants to secure the PoX cryptocurrency network and earn a reward in the base cryptocurrency (BTC). Thus, PoX blockchains are anchored on their chosen PoW chain. Stacks uses Bitcoin as its anchor chain.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FNasrSfiBGWmZoIQjns1Y%252Fimage.png%3Falt%3Dmedia%26token%3Dc2a80528-5037-458f-bb37-a90248ae7657&width=768&dpr=4&quality=100&sign=15c5da8b&sv=2)\n### \n[](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer#why-bitcoin)\nWhy Bitcoin?\nThere are a number of reasons that Stacks chose Bitcoin as the blockchain to power consensus. It's the oldest blockchain protocol, having launched in 2009, and has become a recognized asset outside of the cryptocurrency community. BTC has held the highest market capitalization of any cryptocurrency for the past decade.\nBitcoin champions simplicity and stability, and has stood the test of time. Influencing or attacking the network is infeasible or impractical for any potential hackers. It's one of the only cryptocurrencies to capture public attention. Bitcoin is a household name, and is recognized as an asset by governments, large corporations, and legacy banking institutions. Lastly, Bitcoin is largely considered a reliable store of value, and provides extensive infrastructure to support the PoX consensus mechanism.\nSIP-001 provides a full [list of reasons why Bitcoin was chosen to secure Stacks](https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md).\nBy the way, SIP stands for Stacks Improvement Proposal, and it's the process by which community members agree on making changes to the network. Reading the SIPs in detail is an excellent way to familiarize yourself with Stacks at the implementation level. All of the SIPs are available in the [SIPs section](https://docs.stacks.co/concepts/network-fundamentals/sips) of the docs.\n### \n[](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer#unlocking-bitcoin-capital)\nUnlocking Bitcoin capital\nIn the previous section we talked about Stacks being able to allow us to build a decentralized economy on top of Bitcoin and that PoX was a key piece of being able to do that.\nThe reason is two-fold. First, as a part of this PoX mining process we have covered here, a hash of each Stacks block is recorded to the OP_RETURN opcode of a Bitcoin transaction. If you aren't familiar, the OP_RETURN opcode allows us to store up to 40 bytes of arbitrary data in a Bitcoin transaction.\nThis [Stack Exchange answer](https://bitcoin.stackexchange.com/questions/29554/explanation-of-what-an-op-return-transaction-looks-like) gives a good overview of the reasoning and history of this opcode.\nThis is the first part of how Stacks inherits Bitcoin's security: it's history is anchored block-by-block to the Bitcoin chain. Anyone can use merkle roots to verify these hashes to determine if the history is correct.\nAdditionally, after the Nakamoto Upgrade, Stacks no longer forks on its own. Miners are required at a protocol level to build atop the last mined Stacks blocks, meaning that **Stacks is secured by both 100% of Bitcoin's hashrate in addition to the Stacks security budget from its miners.** We'll get into this process in more detail in the [Block Production](https://docs.stacks.co/concepts/block-production) section.\nAdditionally, part of this PoX process involves each Stacks block also knowing which Bitcoin block it is anchored to. Clarity, Stacks' smart contract language, has built-in functions for reading this data, such as [`get-block-info`](https://docs.stacks.co/docs/write-smart-contracts/clarity-language/language-functions#get-block-info), which returns, among other things, a field called `burnchain-header-hash`, which gives us the hash of the Bitcoin header corresponding to this Stacks block.\nThis allows us to do really interesting things like trigger certain things to happen in a Clarity contract by watching the chain and verifying whether or not certain transactions occurred. You can see this in action in [Catamaran Swaps](https://docs.catamaranswaps.org/en/latest/catamaran.html), with other interesting projects like [Zest](https://www.zestprotocol.com/) seeking to expand on this functionality.\nThe ultimate goal of all this is to enable the vision of web3, building a decentralized economy and enabling true user ownership of assets and data, on top of Bitcoin as a settlement layer, and using Bitcoin as a base decentralized money.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FZ5eYyMNITWGTBAd8VIFn%252Fimage.png%3Falt%3Dmedia%26token%3Dd3547263-0cf7-4b48-892e-511c39551a44&width=768&dpr=4&quality=100&sign=4c20cf68&sv=2)\n### \n[](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer#proof-of-transfer-contracts-and-technical-details)\nProof of Transfer Contracts and Technical Details\nThe Proof of Transfer functionality is implemented on the Stacks chain via a [Clarity smart contract](https://explorer.hiro.so/txid/0xc6d6e6ec82cabb2d7a9f4b85fcc298778d01186cabaee01685537aca390cdb46?chain=mainnet). An overview of this contract is available in the docs.\nYou can see the original design for stacking and proof of transfer by reading the relevant SIP, [SIP-007](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md). You can also utilize [Hiro's API](https://docs.hiro.so/api#tag/Info/operation/get_pox_info) to get proof of transfer details including the relevant contract address.\n[PreviousBitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)[NextStacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1474,
      "title": "Proof of Transfer | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [What is a Bitcoin Layer?](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#what-is-a-bitcoin-layer)\n  * [Popular Bitcoin Layers Compared](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#popular-bitcoin-layers-compared)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n\n\n# Stacks Among Other Layers\nRecently, we have seen a flurry of new \"Bitcoin layers\" popping up across the ecosystem as the market has finally woken up to the idea.\nHowever, not all Bitcoin layers are made equal. While a large chunk of these projects are vaporware riding the hype train, there are several projects that are making a good faith effort to grow the Bitcoin economy and build on top of Bitcooin using various approaches.\nThe [Bitcoin Layers project](https://www.bitcoinlayers.org/) is an excellent place to begin learning about these different layers. In addition, here we've broken down how Stacks compares to some of the most promising Bitcoin L2 solutions so you can begin to learn about them all and make an educated decision on which to use.\n### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#what-is-a-bitcoin-layer)\nWhat is a Bitcoin Layer?\nIt's important to define terms, especially in a new and evolving ecosystem like web3, and an even newer and more rapidly evolving subecosystem like Bitcoin layers.\nFor the purpose of this document and comparison, we can use the following definition of a Bitcoin layer: A Bitcoin layer is a separate distributed computing system built either alongside or on top of Bitcoin for the purpose of enhancing its scalability, functionality, or both.\nThat definition is intentionally general, and encompasses many different projects like L2s, sidechains, federated, open network, etc.\n#### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#technical-vs-economic-considerations)\nTechnical vs Economic Considerations\nIt's important to understand that when designing blockchains, especially layer 2 systems, we have to consider both technical and economic factors. Since a core component of a blockchain system is money, we need to make sure that our systems are both technically robust and economically efficient. And we need to accomplish both of these things while maintaining decentralization.\nWhile it is trivial to create a trusted bridge to bridge BTC from the L1 to a L2, that defeats the purpose of blockchain technology in general, since the goal should be to create permissionless, trust-minimized systems.\nAt the same time, a great technical solution that doesn't consider the economic incentives of the decentralized actors running the network will not have a sustainable path to long-term adoption and viability.\nThis balance is why Stacks has chosen the design it has, to balance both achieving the technical features of a Bitcoin L2 like security inheritance and a trust-minimized BTC peg with the economic incentives for the participants in the ecosystem to maintain it in the long term.\nAs an example of this, Galaxy recently [conducted research](https://www.galaxy.com/insights/research/exploring-bitcoin-for-data-availability/) on this topic and found that a Bitcoin rollup \"will need to generate approximately between $1.9m and $9.63m in revenue from L2 transaction fees per month.\" That is a significant number and again highlights the need to consider both technical and economic factors when designing Bitcoin layers.\n### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#popular-bitcoin-layers-compared)\nPopular Bitcoin Layers Compared\n#### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#lightning)\nLightning\nLightning is probably the most well-known Bitcoin layer, and is primarily designed to address scalability issues. Lightning functions as a separate P2P network from Bitcoin, allowing participants to move their BTC from the main chain to Lightning, conduct multiple transactions on Lightning, and then send the final result to the BTC chain where it is finalized.\nThis is actually a completely separate problem from what Stacks is trying to address. Where Lightning takes the existing functionality of Bitcoin and makes it much more scalable, Stacks is seeking to expand Bitcoin's functionality to do things you can't do now.\nCrucially, Lightning is ephemeral, meaning it has no state management. There is no continuous record of what has happened on the Lightning network, only current channels. Once users close their channel and their transactions are written back to the Bitcoin chain, they are gone.\nA key component of fully-expressive smart contracts is that they maintain a permanent historical record of all transactions that have happened on the chain.\nBitcoin does this now, but its scripting language is very limited. So where Lightning seeks to make existing Bitcoin functionality happen faster, Stacks seeks to add new functionality.\n#### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#rsk)\nRSK\nLike Stacks, [RSK](https://www.rsk.co/) seeks to add additional functionality to Bitcoin, but it goes about that process differently than Stacks.\nRSK is a merge-mined chain, meaning that it is mined concurrently with Bitcoin. Stacks has its own miners and mining process, and its own economic value and security that is a function of that token value, more on this below.\nThere are multiple perspectives to look at this from. Because RSK is merge-mined, Bitcoin miners are also the ones mining RSK blocks, and RSK does not have its own token.\nRSK can only exist with opt-in from Bitcoin miners and mining rewards are highly dependent on transaction volume.\nThis also opens up a wider discussion on the costs and benefits of having a separate token, which we'll get into below a bit when we discuss rollups.\nRSK is also EVM-compatible, where Stacks uses Clarity and the Clarity VM.\n#### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#liquid)\nLiquid\n[Liquid](https://liquid.net/) is a federated network focused on unlocking more advanced financial capabilities with Bitcoin. Being federated, Liquid is not an open network, and thus not decentralized.\nThe Liquid consensus mechanism is managed by 15 functionaries, who handle the transaction processing and validating. Liquid also does not support general-purpose applications, but is solely focused on financial applications.\nFor another perspective, Hiro wrote an [excellent post](https://www.hiro.so/blog/building-on-bitcoin-project-comparison) comparing Stacks with other Bitcoin projects.\n#### \n[](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers#bitcoin-rollups)\nBitcoin Rollups\nRollups are an exciting development for scaling decentralized applications. There are many different types of rollups; they're broadly divided into ZK rollups and Optimistic rollups, although other classifications are also there (see [this overview](https://era.zksync.io/docs/dev/fundamentals/rollups.html#what-are-rollups)).\nRollups are generally considered layer-2 (L2) technology that runs on top of a layer-1 blockchain like Bitcoin or Ethereum. A critical aspect of rollups is the trustless nature where logic running on the L1 chain can determine whether something that happened on the rollup was valid. This is not true for all types of rollups, and there is some fuzziness around exact definitions. [Sovereign rollups](https://blog.celestia.org/sovereign-rollup-chains/), for example, only use the underlying L1 for data availability (DA) and not for consensus.\nMost of the rollups work on Ethereum uses Ethereum L1 both as a data availability layer, and for consensus, i.e., the validity of rollup transactions is determined by logic running on Ethereum L1. Newer systems, [like Celestia](https://celestia.org/), are taking a more modular approach and are separating DA from consensus. One interesting aspect of separating DA is that more established and durable chains like Bitcoin can be used for DA as well. Below is an interesting comparison of sidechains and two types of rollups possible on Bitcoin (John Light posted this [on Twitter](https://twitter.com/lightcoin/status/1630301411962388481?s=20)):\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FwqL1TQbdLQ0TqFyZpMan%252Fimage.png%3Falt%3Dmedia%26token%3D43c6ef06-5c1e-4c24-9f79-27b847a64d80&width=768&dpr=4&quality=100&sign=4491a6a5&sv=2)\nThis image broadly means developers can build sovereign rollups on Bitcoin today, but you'll need a \"trusted\" setup for moving BTC in and out of the rollup. In fact, people are already doing this -- see the recent [Rollkit announcement](https://rollkit.dev/blog/sovereign-rollups-on-bitcoin/). To build validity rollups, meaning Bitcoin L1 enforces BTC withdrawals from the rollup, you'll need modifications to Bitcoin L1. See [this overview](https://bitcoinrollups.org/) for more details.\nOne important nuance here is the cost required to effectively run a rollup on Bitcoin as discussed in the Galaxy research report linked in the first section.\nNow we have a solid grasp of how Stacks works and how it fits in among other layers. Let's begin to dig into some of the technical implementation details and see how Stacks actually works.\n[PreviousProof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)[NextFinancial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1786,
      "title": "Stacks Among Other Layers | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n\n\n# Financial Incentive and Security Budget\nIn order to reorg the Stacks chain, someone must take control of at least 70% of the STX that are currently Stacked and conduct a 51% attack on Bitcoin itself. If acquired at market prices, then at the time of this writing, that amounts to spending nearly $1 billion USD in only the STX stacked. \nIn addition to this, because of how Stacks achieves Bitcoin finality by not allowing forks, Stacks security budget reaches 51% of Bitcoin's mining power because in order to reverse the chain state you would need to reverse the Bitcoin chain state as well.\nStackers have the new-found power to sign blocks in order to append them to the Stacks chain. However, some of them could refuse to sign, and ensure that no block ever reaches the 70% signature threshold. While this can happen by accident, this is not economically rational behavior -- if they stall the chain for too long, their STX loses their value, and furthermore, they cannot re-stack or liquidate their STX or activate PoX to earn BTC. Also, miners will stop mining if no blocks are getting confirmed, which eliminates their ongoing PoX payouts.\nThe technical details of how this all works are discussed in the [Block Production](https://docs.stacks.co/concepts/block-production) section.\n[PreviousStacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)[NextNetwork Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 764,
      "title": "Financial Incentive and Security Budget | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Network Fundamentals\nNow that you have a high-level understanding of what Stacks is and how it works, let's dive into some more details of all of the components that make up the Stacks Bitcoin L2.\nWe're going to start with the basics of how the network is actually structured and the components that comprise it.\n[PreviousFinancial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)[NextNetwork Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 605,
      "title": "Network Fundamentals | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/network",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Tokens](https://docs.stacks.co/concepts/network-fundamentals/network#tokens)\n  * [Fees](https://docs.stacks.co/concepts/network-fundamentals/network#fees)\n  * [Nonces](https://docs.stacks.co/concepts/network-fundamentals/network#nonces)\n  * [Querying](https://docs.stacks.co/concepts/network-fundamentals/network#querying)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Network Basics\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/network#tokens)\nTokens\nStacks (STX) tokens are the native tokens on the Stacks blockchain. The smallest fraction is one micro-STX. 1,000,000 micro-STX make one Stacks (STX).\nSTX amounts should be stored as integers (8 bytes long), and represent the amount of micro-STX.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/network#fees)\nFees\nFees are used to incentivize miners to confirm transactions on the Stacks blockchain. The fee is calculated based on the estimate fee rate and the size of the raw transaction in bytes. The fee rate is a market determined variable. For the testnet, it is set to 1 micro-STX.\nFee estimates can obtained through the [`GET /v2/fees/transfer`](https://docs.hiro.so/api#operation/get_fee_transfer) endpoint of the API.\nNote that this example uses an external tool, [Hiro's Stacks API](https://www.hiro.so/stacks-api). You can also use the native [Stacks API ](https://docs.stacks.co/reference/api)if you would rather run your own node or connect to one.\nCopy```\n# for mainnet, replace `testnet` with `mainnet`\ncurl'https://api.testnet.hiro.so/v2/fees/transfer'\n```\n\nThe API will respond with the fee rate (as integer):\nCopy```\n1\n```\n\n[The Stacks Transactions JS library](https://github.com/hirosystems/stacks.js/tree/master/packages/transactions) supports fee estimation for:\n  * token transfers (`estimateTransfer`)\n  * contract deploys (`estimateContractDeploy`)\n  * non read-only contract calls (`estimateContractFunctionCall`)\n\n\nFor an implementation using a different language than JavaScript, please review [this reference implementation](https://github.com/hirosystems/stacks.js/blob/master/packages/transactions/src/builders.ts#L97).\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/network#nonces)\nNonces\nEvery account carries a [nonce property](https://en.wikipedia.org/wiki/Cryptographic_nonce) that indicates the number of transactions processed for the given account. Nonces are one-time codes, starting at `0` for new accounts, and incremented by 1 on every transaction.\nNonces are added to all transactions and help identify them in order to ensure transactions are processed in order and to avoid duplicated processing.\nThe consensus mechanism also ensures that transactions aren't \"replayed\" in two ways. First, nodes query its unspent transaction outputs (UTXOs) in order to satisfy their spending conditions in a new transaction. Second, messages sent between nodes review sequence numbers.\nWhen a new token transfer transaction is constructed, the most recent nonce of the account needs to be fetched and set.\nThe API provides an endpoint to [simplify nonce handling](https://docs.hiro.so/get-started/stacks-blockchain-api#nonce-handling).\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/network#querying)\nQuerying\nStacks network details can be queried using the [Stacks Blockchain API](https://docs.hiro.so/get-started/stacks-blockchain-api).\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/network#health-check)\nHealth check\nThe [status checker](https://status.stacks.org) is a service that provides a user interface to quickly review the health of the Stacks blockchain.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/network#network-info)\nNetwork info\nThe network information can be obtained using the [`GET /v2/info`](https://docs.hiro.so/api#operation/get_core_api_info) endpoint:\nCopy```\n# for mainnet, replace `testnet` with `mainnet`\ncurl 'https://api.testnet.hiro.so/v2/info'\n```\n\nSample response:\nCopy```\n{\n    \"peer_version\": 385875968,\n    \"burn_consensus\": \"826401d65cf3671210a3fb135d827d549c0b4d37\",\n    \"burn_block_height\": 1972,\n    \"stable_burn_consensus\": \"e27ea23f199076bc41a729d76a813e125b725f64\",\n    \"stable_burn_block_height\": 1971,\n    \"server_version\": \"blockstack-core 0.0.1 => 23.0.0.0 (master:bdd042242+, release build, linux [x86_64]\",\n    \"network_id\": 2147483648,\n    \"parent_network_id\": 3669344250,\n    \"stacks_tip_height\": 933,\n    \"stacks_tip\": \"1f601823fbcc5b6b2215b2ff59d2818fba61ee4a3cea426d8bc3dbb268005d8f\",\n    \"stacks_tip_burn_block\": \"54c56a9685545c45accf42b5dcb2787c97eda8185a1c794daf9b5a59d4807abc\",\n    \"unanchored_tip\": \"71948ee211dac3b241eb65d881637f649d0d49ac08ee4a41c29217d3026d7aae\",\n    \"exit_at_block_height\": 28160\n}\n```\n\n[PreviousNetwork Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)[NextMainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\nLast updated 5 months ago\nWas this helpful?\n",
      "wordCount": 992,
      "title": "Network Basics | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Mainnet](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#mainnet)\n  * [Primary and Nakamoto Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#primary-and-nakamoto-testnets)\n  * [Important notes on the Primary Testnet:](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#important-notes-on-the-primary-testnet)\n  * [Configuration Files for Signers](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#configuration-files-for-signers)\n  * [About testnet](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#about-testnet)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Mainnet and Testnets\nStacks has both a mainnet and a few different testnets for different purposes. Mainnet and testnet are two completely different networks and tokens cannot be transferred between one or the other.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#mainnet)\nMainnet\nStacks mainnet is directly connected to Bitcoin mainnet and is the network where tokens have actual monetary worth. This is the production network and should be treated as such.\nYou can view mainnet activity using [Hiro's block explorer](https://explorer.hiro.so/).\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#primary-and-nakamoto-testnets)\nPrimary and Nakamoto Testnets\nThere are some notable differences between Primary Testnet and Nakamoto Testnet, this table can guide you in selecting the one most aligned with your needs. \nAttributes\nNakamoto Testnet\nPrimary Testnet\n**Stacking Cycle Length**\n3 days\n1 week \n**Description**\nBleeding edge, more frequent upgrades with Release Candidates.\nStable release updates ONLY, the last step before Mainnet.\n**Usage Recommendations**\n  * Use this if you don‚Äôt mind frequent resets and would like to test the latest features as they‚Äôre released\n  * Use this if you prefer faster feedback loops to test various stacking-signer scenarios\n\n\n  * Use this if you prefer more stable releases and don‚Äôt want frequent resets and updates\n  * Use this if you don't need to be among the first to test new features\n  * Use this if you prefer longer Stacking cycles\n\n\n**Lifespan**\nNakamoto Testnet will remain available until sBTC goes live on Mainnet\nThe Primary Testnet will exist and be maintained forever.\n**Explorer**\n[Nakamoto Explorer](https://explorer.hiro.so/?chain=testnet&api=https://api.nakamoto.testnet.hiro.so)\n[Primary Explorer](https://explorer.hiro.so/?chain=testnet)\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#important-notes-on-the-primary-testnet)\nImportant notes on the Primary Testnet:\n  * Core devs are working on a BTC Regtest Explorer. In the meantime, Wallet, Explorer, and API links to BTC transactions will lead you nowhere. This is expected and will be addressed. All STX transactions are available to track on the [Explorer](https://explorer.hiro.so/?chain=testnet).\n  * You can start onboarding your Signer, deploy contracts and test your Apps. All functionality from the previous testnet is available.\n  * Old testnet data is archived and will remain [available](https://explorer.hiro.so/?chain=testnet&api=https://api.old.testnet.hiro.so) until the end of June 2024\n  * **Faucet and tSTX:**\n    * The [Faucet address](https://explorer.hiro.so/address/ST2QKZ4FKHAH1NQKYKYAYZPY440FEPK7GZ1R5HBP2?chain=testnet) and limits stay the same.\n    * If you need more tSTX than the current daily limit to onboard your Signer on Primary Testnet, please reach out to your main point of contact in the ecosystem.\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#configuration-files-for-signers)\nConfiguration Files for Signers\n  * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n  * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files#primary-testnet-config)\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#about-testnet)\nAbout testnet\nThe testnet is a separate blockchain from the Stacks mainnet analogous to a staging environnement. It's a network used by developers to test their apps, smart contracts, or changes to the protocol in a production-like environment.\nIt produces blocks at roughly the same rate as mainnet; about 1 block every 10 minutes on average. The Stacks testnet is rarely reset.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#faucets)\nFaucets\nTestnet faucets provide you with free Stacks Token (STX) to test with. These are not the same as STX on mainnet and have no value. There are a couple of different options for getting testnet STX.\n**Hiro**\nYou can get STX from the Hiro faucet on the [Hiro Explorer Sandbox](https://explorer.hiro.so/sandbox/faucet?chain=testnet), or using the [API](https://docs.hiro.so/api#tag/Faucets).\nTo get STX tokens from within the Explorer Sandbox, navigate to the \"Faucet\" tab on the left and click \"Request STX\" button.\nYou can also try out Stacking by clicking on `I want to stack`.\nThe Explorer Sandbox requires you to login with a Stacks wallet\n**LearnWeb3**\nAlternatively, you can use the [LearnWeb3 faucet](https://learnweb3.io/faucets).\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FSgkRLnoaRCvTyhpHMAT0%252Fimage.png%3Falt%3Dmedia%26token%3D05eb1bb6-6046-480c-a826-4c46a0973173&width=768&dpr=4&quality=100&sign=41d6e308&sv=2)\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets#testnet-api)\nTestnet API\nThe hosted Stacks Blockchain API for the testnet is available at this base URL:\nCopy```\nhttps://api.testnet.hiro.so/\n```\n\n[PreviousNetwork Basics](https://docs.stacks.co/concepts/network-fundamentals/network)[NextAccounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1149,
      "title": "Mainnet and Testnets | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/accounts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/network-fundamentals/accounts#introduction)\n  * [Creation](https://docs.stacks.co/concepts/network-fundamentals/accounts#creation)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Accounts\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/accounts#introduction)\nIntroduction\nStacks uses an accounts-based model, more similar to Ethereum, rather than a [UTXO](https://learnmeabitcoin.com/technical/transaction/utxo/) model like Bitcoin. In a UTXO model, the network operates as a ledger, with each UTXO being analagous to a cash bill.\nWith an accounts-based model, each account is associated with a balance and that balance can be added to or subtracted from.\nStacks accounts are entities that own assets, like Stacks (STX) tokens. An account has an address, private key, nonce, and one or more asset balances.\nThe cryptographic signature algorithm used in Stacks is [**secp256k1**](https://en.bitcoinwiki.org/wiki/Secp256k1).\nAdditionally, [Ed25519](https://ed25519.cr.yp.to/) is also used just for the VRF (Verifiable Random Function).\nAssets cannot leave an account without an action from the account owner. All changes to assets (and the balances of the account) require a corresponding transaction.\nThe transaction type doesn't need to be a token transfer - contract deploy and contract call transactions can change the balances of an account\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/accounts#creation)\nCreation\nAn account is generated from a 24-word mnemonic phrase. This is often referred to as the **seed phrase**. The seed phrase provides access to Stacks accounts.\nIf the seed phrase is lost, access to the associated account cannot be restored. No person or organization can recover a lost seed phrase.\nThe easiest way to generate a new Stacks account is to use the [Stacks CLI](https://github.com/hirosystems/stacks.js/tree/master/packages/cli):\nCopy```\n# install CLI globally\nnpminstall--global@stacks/cli\n# generate a new account and store details in a new file\n# '-t' option makes this a testnet account\nstxmake_keychain-t>cli_keychain.json\n```\n\n`make_keychain` creates the following file:\nCopy```\n{\n  \"mnemonic\": \"aaa bbb ccc ddd ...\",\n  \"keyInfo\": {\n    \"privateKey\": \"5a3f1f15245bb3fb...\",\n    \"address\": \"STJRM2AMVF90ER6G3RW1QTF85E3HZH37006D5ER1\",\n    \"btcAddress\": \"biwSd6KTEvJcyX2R8oyfgj5REuLzczMYC1\",\n    \"wif\": \"L4HXn7PLmzoNW...\",\n    \"index\": 0\n  }\n}\n```\n\nCheck out the [Stacks CLI reference](https://docs.hiro.so/references/stacks-cli) for more details\nField\nDescription\n`mnemonic`\nA 24-word seed phrase used to access the account, generated using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) with 256 bits of entropy\n`keyInfo.privateKey`\nPrivate key for the account. Required for token transfers and often referred to as `senderKey`\n`keyInfo.address`\nStacks address for the account\n`keyInfo.btcAddress`\nCorresponding BTC address for the account.\n`keyInfo.wif`\nPrivate key of the btcAddress in compressed format.\n`keyInfo.index`\nNonce for the account, starting at 0\nNote that a new account automatically exists for each new private key. There is no need to manually instantiate an account on the Stacks blockchain.\nAddresses are created by generating the [RIPEMD-160 hash](https://en.wikipedia.org/wiki/RIPEMD#RIPEMD-160_hashes) of the [SHA256](https://en.bitcoinwiki.org/wiki/SHA-256) of the public key. BTC addresses are encoded with [Base58Check](https://en.bitcoin.it/wiki/Base58Check_encoding). For Stacks addresses, [c32check](https://github.com/stacks-network/c32check) is used. Deriving an address from a public key can be done without internet access, for instance using the c32check `c32addressDecode` method.\nAlternatively to the CLI creation, the [Stacks Transactions JS](https://github.com/hirosystems/stacks.js/tree/master/packages/transactions) library can be used:\nCopy```\nimport {\n  makeRandomPrivKey,\n  privateKeyToString,\n  getAddressFromPrivateKey,\n  TransactionVersion,\n  getPublicKey,\n} from \"@stacks/transactions\";\nconst privateKey = makeRandomPrivKey();\n// Get public key from private\nconst publicKey = getPublicKey(privateKey);\nconst stacksAddress = getAddressFromPrivateKey(\n  privateKeyToString(privateKey),\n  TransactionVersion.Testnet // remove for Mainnet addresses\n);\n```\n\nFinally, you can generate new account using a Stacks-enabled wallet like [Leather](https://leather.io/), [Xverse](https://www.xverse.app/), or [Asigna](https://asigna.io/).\n[PreviousMainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)[NextAuthentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1047,
      "title": "Accounts | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/authentication",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/network-fundamentals/authentication#introduction)\n  * [Web2 vs Web3 Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication#web2-vs-web3-authentication)\n  * [How it works](https://docs.stacks.co/concepts/network-fundamentals/authentication#how-it-works)\n  * [Key pairs](https://docs.stacks.co/concepts/network-fundamentals/authentication#key-pairs)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Authentication\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#introduction)\nIntroduction\nThis guide explains how authentication is performed on the Stacks blockchain.\nAuthentication provides a way for users to identify themselves to an app while retaining complete control over their credentials and personal details.\nUsers who register for your app can subsequently authenticate to any other app with support for the [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system) and vice versa.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#web2-vs-web3-authentication)\nWeb2 vs Web3 Authentication\nIf you come from the web2 world, you are likely used to authenticating with usernames and passwords, where the user's info is stored in a database. Upon entering the password, it is hashed and compared to the hash stored in the database and, if it matches, the user is logged in.\nWeb3 authentication works a bit differently. One of the core philosophies of web3 is data ownership, which means users are in control of their data, including their authentication.\nAuthentication in the Bitcoin and Stacks world makes use of cryptography to generate private keys, public keys and addresses.\nWe'll go over the basics here, but if you want to dig in, [Learn Me a Bitcoin](https://learnmeabitcoin.com/beginners/guide/keys-addresses/) is a great place to start.\nTo generate a Stacks account, we generate a private key from a 24 word mnemonic phrase, as discussed in the previous section. This private key is then used to generate a public key using a one-way hash function. Meaning you can derive a public key from a private key, but not vice versa.\nA user's private key is their main source of security and is used to authenticate them. Do not lose your private key.\nSo, when I use a wallet app like [Leather](https://leather.io) and I want to use it to authenticate with a dapp like StackingDAO, what I am doing is that I am giving my wallet my private key, proving that I own the corresponding address.\nThe wallet will then pass that information (my address and public key) to the app along with a signature.\nA signature can be thought of as proof that I own the private key without actually revealing the private key. That mechanism is how I can use the same wallet and address to log in to any app that supports Stacks authentication.\nThird Web has a great [conceptual primer](https://blog.thirdweb.com/web3-auth/) on web3 authentication.\nFor a more practical introduction, take a look at the [Quickstart tutorial ](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)and [Hiro's Stacks.js docs](https://docs.hiro.so/stacks/connect/guides/authenticate-users).\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#how-it-works)\nHow it works\nThe authentication flow with Stacks is similar to the typical client-server flow used by centralized sign in services (for example, OAuth). However, with Stacks the authentication flow happens entirely client-side.\nThis explanation is here so you can understand how this process works, but the bulk of this functionality is handled by the wallet and the JS library you use. Take a look at the [Stacks.js docs](https://docs.hiro.so/stacks/stacks.js/concepts/accounts-and-addresses) for more info.\nAn app and authenticator, such as the [Leather wallet](https://leather.io), communicate during the authentication flow by passing back and forth two tokens. The requesting app sends the authenticator an `authRequest` token. Once a user approves authentication, the authenticator responds to the app with an `authResponse` token.\nThese tokens are based on [a JSON Web Token (JWT) standard](https://tools.ietf.org/html/rfc7519) with additional support for the `secp256k1` curve used by Bitcoin and many other cryptocurrencies. They are passed via URL query strings.\nWhen a user chooses to authenticate an app, it sends the `authRequest` token to the authenticator via a URL query string with an equally named parameter:\n`https://wallet.hiro.so/...?authRequest=j902120cn829n1jnvoa...`\nWhen the authenticator receives the request, it generates an `authResponse` token for the app using an _ephemeral transit key_ . The ephemeral transit key is just used for the particular instance of the app, in this case, to sign the `authRequest`.\nThe app stores the ephemeral transit key during request generation. The public portion of the transit key is passed in the `authRequest` token. The authenticator uses the public portion of the key to encrypt an _app private key_ which is returned via the `authResponse`.\nThe authenticator generates the app private key from the user's _identity address private key_ and the app's domain. The app private key serves three functions:\n  1. It is used to create credentials that give the app access to a storage bucket in the user's Gaia hub\n  2. It is used in the end-to-end encryption of files stored for the app in the user's Gaia storage.\n  3. It serves as a cryptographic secret that apps can use to perform other cryptographic functions.\n\n\nFinally, the app private key is deterministic, meaning that the same private key will always be generated for a given Stacks address and domain.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#key-pairs)\nKey pairs\nAuthentication with Stacks makes extensive use of public key cryptography generally and ECDSA with the `secp256k1` curve in particular.\nThe following sections describe the three public-private key pairs used, including how they're generated, where they're used and to whom private keys are disclosed.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#transit-private-key)\nTransit private key\nThe transit private is an ephemeral key that is used to encrypt secrets that need to be passed from the authenticator to the app during the authentication process. It is randomly generated by the app at the beginning of the authentication response.\nThe public key that corresponds to the transit private key is stored in a single element array in the `public_keys` key of the authentication request token. The authenticator encrypts secret data such as the app private key using this public key and sends it back to the app when the user signs in to the app. The transit private key signs the app authentication request.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#identity-address-private-key)\nIdentity address private key\nThe identity address private key is derived from the user's keychain phrase and is the private key of the Stacks username that the user chooses to use to sign in to the app. It is a secret owned by the user and never leaves the user's instance of the authenticator.\nThis private key signs the authentication response token for an app to indicate that the user approves sign in to that app.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/authentication#app-private-key)\nApp private key\nThe app private key is an app-specific private key that is generated from the user's identity address private key using the `domain_name` as input.\nThe app private key is securely shared with the app on each authentication, encrypted by the authenticator with the transit public key. Because the transit key is only stored on the client side, this prevents a man-in-the-middle attack where a server or internet provider could potentially snoop on the app private key.\n[PreviousAccounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)[NextBitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1642,
      "title": "Authentication | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Motivation behind name systems](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#motivation-behind-name-systems)\n  * [Organization of BNS](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#organization-of-bns)\n  * [Namespaces](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#namespaces)\n  * [Subdomains](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#subdomains)\n  * [BNS and DID Standards](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#bns-and-did-standards)\n  * [DID Encoding for Subdomains](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#did-encoding-for-subdomains)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Bitcoin Name System\nBitcoin Name System (BNS) is a network system that binds Stacks usernames to off-chain state without relying on any central points of control.\nThe Stacks V1 blockchain implemented BNS through first-order name operations. In Stacks V2, BNS is instead implemented through a smart-contract loaded during the genesis block.\nNames in BNS have three properties:\n  * **Names are globally unique.** The protocol does not allow name collisions, and all well-behaved nodes resolve a given name to the same state.\n  * **Names are human-meaningful.** Each name is chosen by its creator.\n  * **Names are strongly owned.** Only the name's owner can change the state it resolves to. Specifically, a name is owned by one or more ECDSA private keys.\n\n\nThe Stacks blockchain insures that each node's BNS view is synchronized to all of the other nodes in the world, so queries on one node will be the same on other nodes. Stacks blockchain nodes allow a name's owner to bind up to 40Kb of off-chain state to their name, which will be replicated to all other Stacks blockchain nodes via a P2P network.\nThe biggest consequence for developers is that in BNS, reading name state is fast and cheap but writing name state is slow and expensive. This is because registering and modifying names requires one or more transactions to be sent to the underlying blockchain, and BNS nodes will not process them until they are sufficiently confirmed. Users and developers need to acquire and spend the requisite cryptocurrency (STX) to send BNS transactions.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#motivation-behind-name-systems)\nMotivation behind name systems\nWe rely on name systems in everyday life, and they play a critical role in many different applications. For example, when you look up a friend on social media, you are using the platform's name system to resolve their name to their profile. When you look up a website, you are using the Domain Name Service to resolve the hostname to its host's IP address. When you check out a Git branch, you are using your Git client to resolve the branch name to a commit hash. When you look up someone's PGP key on a keyserver, you are resolving their key ID to their public key.\nWhat kinds of things do we want to be true about names? In BNS, names are globally unique, names are human-meaningful, and names are strongly owned. However, if you look at these examples, you'll see that each of them only guarantees _two_ of these properties. This limits how useful they can be.\n  * In DNS and social media, names are globally unique and human-readable, but not strongly owned. The system operator has the final say as to what each names resolves to.\n    * **Problem** : Clients must trust the system to make the right choice in what a given name resolves to. This includes trusting that no one but the system administrators can make these changes.\n  * In Git, branch names are human-meaningful and strongly owned, but not globally unique. Two different Git nodes may resolve the same branch name to different unrelated repository states.\n    * **Problem** : Since names can refer to conflicting state, developers have to figure out some other mechanism to resolve ambiguities. In Git's case, the user has to manually intervene.\n  * In PGP, names are key IDs. They are globally unique and cryptographically owned, but not human-readable. PGP key IDs are derived from the keys they reference.\n    * **Problem** : These names are difficult for most users to remember since they do not carry semantic information relating to their use in the system.\n\n\nBNS names have all three properties, and none of these problems. This makes it a powerful tool for building all kinds of network applications. With BNS, we can do the following and more:\n  * Build domain name services where hostnames can't be hijacked.\n  * Build social media platforms where user names can't be stolen by phishers.\n  * Build version control systems where repository branches do not conflict.\n  * Build public-key infrastructure where it's easy for users to discover and remember each other's keys.\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#organization-of-bns)\nOrganization of BNS\nBNS names are organized into a global name hierarchy. There are three different layers in this hierarchy related to naming:\n  * **Namespaces**. These are the top-level names in the hierarchy. An analogy to BNS namespaces are DNS top-level domains. Existing BNS namespaces include `.id`, `.podcast`, and `.helloworld`. All other names belong to exactly one namespace. Anyone can create a namespace, but in order for the namespace to be persisted, it must be _launched_ so that anyone can register names in it. Namespaces are not owned by their creators.\n  * **BNS names**. These are names whose records are stored directly on the blockchain. The ownership and state of these names are controlled by sending blockchain transactions. Example names include `verified.podcast` and `muneeb.id`. Anyone can create a BNS name, as long as the namespace that contains it exists already.\n  * **BNS subdomains**. These are names whose records are stored off-chain, but are collectively anchored to the blockchain. The ownership and state for these names lives within the P2P network data. While BNS subdomains are owned by separate private keys, a BNS name owner must broadcast their subdomain state. Example subdomains include `jude.personal.id` and `podsaveamerica.verified.podcast`. Unlike BNS namespaces and names, the state of BNS subdomains is _not_ part of the blockchain consensus rules.\n\n\nA feature comparison matrix summarizing the similarities and differences between these name objects is presented below:\nFeature\n**Namespaces**\n**BNS names**\n**BNS Subdomains**\nGlobally unique\nX\nX\nX\nHuman-meaningful\nX\nX\nX\nOwned by a private key\nX\nX\nAnyone can create\nX\nX\n[1]\nOwner can update\nX\n[1]\nState hosted on-chain\nX\nX\nState hosted off-chain\nX\nX\nBehavior controlled by consensus rules\nX\nX\nMay have an expiration date\nX\n[1] Requires the cooperation of a BNS name owner to broadcast its transactions\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#namespaces)\nNamespaces\nNamespaces are the top-level name objects in BNS.\nThey control a few properties about the names within them:\n  * How expensive they are to register\n  * How long they last before they have to be renewed\n  * Who (if anyone) receives the name registration fees\n  * Who is allowed to seed the namespace with its initial names.\n\n\nAt the time of this writing, by far the largest BNS namespace is the `.id` namespace. Names in the `.id` namespace are meant for resolving user identities. Short names in `.id` are more expensive than long names, and have to be renewed by their owners every two years. Name registration fees are not paid to anyone in particular---they are instead sent to a \"black hole\" where they are rendered non-spendable (the intention is to discourage ID squatters).\nUnlike DNS, _anyone_ can create a namespace and set its properties. Namespaces are created on a first-come first-serve basis, and once created, they last forever.\nHowever, creating a namespace is not free. The namespace creator must _burn_ cryptocurrency to do so. The shorter the namespace, the more cryptocurrency must be burned (that is, short namespaces are more valuable than long namespaces). For example, it cost Blockstack PBC 40 BTC to create the `.id` namespace in 2015 (in transaction `5f00b8e609821edd6f3369ee4ee86e03ea34b890e242236cdb66ef6c9c6a1b281`).\nNamespaces can be between 1 and 19 characters long, and are composed of the characters `a-z`, `0-9`, `-`, and `_`.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#subdomains)\nSubdomains\nBNS names are strongly owned because the owner of its private key can generate valid transactions that update its zone file hash and owner. However, this comes at the cost of requiring a name owner to pay for the underlying transaction in the blockchain. Moreover, this approach limits the rate of BNS name registrations and operations to the underlying blockchain's transaction bandwidth.\nBNS overcomes this with subdomains. A **BNS subdomain** is a type of BNS name whose state and owner are stored outside of the blockchain, but whose existence and operation history are anchored to the blockchain. Like their on-chain counterparts, subdomains are globally unique, strongly owned, and human-readable. BNS gives them their own name state and public keys. Unlike on-chain names, subdomains can be created and managed cheaply, because they are broadcast to the BNS network in batches. A single blockchain transaction can send up to 120 subdomain operations.\nThis is achieved by storing subdomain records in the BNS name zone files. An on-chain name owner broadcasts subdomain operations by encoding them as `TXT` records within a DNS zone file. To broadcast the zone file, the name owner sets the new zone file hash with a `NAME_UPDATE` transaction and replicates the zone file. This, in turn, replicates all subdomain operations it contains, and anchors the set of subdomain operations to an on-chain transaction. The BNS node's consensus rules ensure that only valid subdomain operations from _valid_ `NAME_UPDATE` transactions will ever be stored.\nFor example, the name `verified.podcast` once wrote the zone file hash `247121450ca0e9af45e85a82e61cd525cd7ba023`, which is the hash of the following zone file:\nCopy```\n$TTL 3600\n1yeardaily TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAxeWVhcmRhaWx5CiRUVEwgMzYwMApfaHR0cC5fdGNwIFVSSSAxMCAxICJodHRwczovL3BoLmRvdHBvZGNhc3QuY28vMXllYXJkYWlseS9oZWFkLmpzb24iCg==\"\n2dopequeens TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAyZG9wZXF1ZWVucwokVFRMIDM2MDAKX2h0dHAuX3RjcCBVUkkgMTAgMSAiaHR0cHM6Ly9waC5kb3Rwb2RjYXN0LmNvLzJkb3BlcXVlZW5zL2hlYWQuanNvbiIK\"\n10happier TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAxMGhhcHBpZXIKJFRUTCAzNjAwCl9odHRwLl90Y3AgVVJJIDEwIDEgImh0dHBzOi8vcGguZG90cG9kY2FzdC5jby8xMGhhcHBpZXIvaGVhZC5qc29uIgo=\"\n31thoughts TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAzMXRob3VnaHRzCiRUVEwgMzYwMApfaHR0cC5fdGNwIFVSSSAxMCAxICJodHRwczovL3BoLmRvdHBvZGNhc3QuY28vMzF0aG91Z2h0cy9oZWFkLmpzb24iCg==\"\n359 TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAzNTkKJFRUTCAzNjAwCl9odHRwLl90Y3AgVVJJIDEwIDEgImh0dHBzOi8vcGguZG90cG9kY2FzdC5jby8zNTkvaGVhZC5qc29uIgo=\"\n30for30 TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAzMGZvcjMwCiRUVEwgMzYwMApfaHR0cC5fdGNwIFVSSSAxMCAxICJodHRwczovL3BoLmRvdHBvZGNhc3QuY28vMzBmb3IzMC9oZWFkLmpzb24iCg==\"\nonea TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiBvbmVhCiRUVEwgMzYwMApfaHR0cC5fdGNwIFVSSSAxMCAxICJodHRwczovL3BoLmRvdHBvZGNhc3QuY28vb25lYS9oZWFkLmpzb24iCg==\"\n10minuteteacher TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAxMG1pbnV0ZXRlYWNoZXIKJFRUTCAzNjAwCl9odHRwLl90Y3AgVVJJIDEwIDEgImh0dHBzOi8vcGguZG90cG9kY2FzdC5jby8xMG1pbnV0ZXRlYWNoZXIvaGVhZC5qc29uIgo=\"\n36questionsthepodcastmusical TXT \"owner=1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\" \"seqn=0\" \"parts=1\" \"zf0=JE9SSUdJTiAzNnF1ZXN0aW9uc3RoZXBvZGNhc3RtdXNpY2FsCiRUVEwgMzYwMApfaHR0cC5fdGNwIFVSSSAxMCAxICJodHRwczovL3BoLmRvdHBvZGNhc3QuY28vMzZxdWVzdGlvbnN0aGVwb2RjYXN0bXVzaWNhbC9oZWFkLmpzb24iCg==\"\n_http._tcp URI 10 1 \"https://dotpodcast.co/\"\n```\n\nEach `TXT` record in this zone file encodes a subdomain-creation. For example, `1yeardaily.verified.podcast` resolves to:\nCopy```\n{\n  \"address\": \"1MwPD6dH4fE3gQ9mCov81L1DEQWT7E85qH\",\n  \"blockchain\": \"bitcoin\",\n  \"last_txid\": \"d87a22ebab3455b7399bfef8a41791935f94bc97aee55967edd5a87f22cce339\",\n  \"status\": \"registered_subdomain\",\n  \"zonefile_hash\": \"e7acc97fd42c48ed94fd4d41f674eddbee5557e3\",\n  \"zonefile_txt\": \"$ORIGIN 1yeardaily\\n$TTL 3600\\n_http._tcp URI 10 1 \\\"https://ph.dotpodcast.co/1yeardaily/head.json\\\"\\n\"\n}\n```\n\nThis information was extracted from the `1yeardaily` `TXT` resource record in the zone file for `verified.podcast`.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#subdomain-lifecycle)\nSubdomain Lifecycle\nNote that `1yeardaily.verified.podcast` has a different public key hash (address) than `verified.podcast`. A BNS node will only process a subsequent subdomain operation on `1yeardaily.verified.podcast` if it includes a signature from this address's private key. `verified.podcast` cannot generate updates; only the owner of `1yeardaily.verified.podcast can do so`.\nThe lifecycle of a subdomain and its operations is shown in Figure 2.\nCopy```\n   subdomain                  subdomain                  subdomain\n   creation                   update                     transfer\n+----------------+         +----------------+         +----------------+\n| cicero         |         | cicero         |         | cicero         |\n| owner=\"1Et...\" | signed  | owner=\"1Et...\" | signed  | owner=\"1cJ...\" |\n| zf0=\"7e4...\"   |<--------| zf0=\"111...\"   |<--------| zf0=\"111...\"   |<---- ...\n| seqn=0         |         | seqn=1         |         | seqn=2         |\n|                |         | sig=\"xxxx\"     |         | sig=\"xxxx\"     |\n+----------------+         +----------------+         +----------------+\n        |                          |                          |\n        |        off-chain         |                          |\n~ ~ ~ ~ | ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~|~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ | ~ ~ ~ ~ ~ ~ ~ ...\n        |         on-chain         |                          |\n        V                          V (zone file hash    )     V\n+----------------+         +----------------+         +----------------+\n| res_publica.id |         |    jude.id     |         | res_publica.id |\n|  NAME_UPDATE   |<--------|  NAME_UPDATE   |<--------|  NAME_UPDATE   |<---- ...\n+----------------+         +----------------+         +----------------+\n   blockchain                 blockchain                 blockchain\n   block                      block                      block\nFigure 2:  Subdomain lifetime with respect to on-chain name operations .A new\nsubdomain operation will only be accepted if it has a later \"sequence=\" number,\nand a valid signature in \"sig=\" over the transaction body .The \"sig=\" field\nincludes both the public key and signature, and the public key must hash to\nthe previous subdomain operation's \"addr=\" field.\nThe subdomain-creation and subdomain-transfer transactions for\n\"cicero.res_publica.id\" are broadcast by the owner of \"res_publica.id.\"\nHowever, any on-chain name (\"jude.id\" in this case) can broadcast a subdomain\nupdate for \"cicero.res_publica.id.\"\n```\n\nSubdomain operations are ordered by sequence number, starting at 0. Each new subdomain operation must include:\n  * The next sequence number\n  * The public key that hashes to the previous subdomain transaction's address\n  * A signature from the corresponding private key over the entire subdomain operation.\n\n\nIf two correctly signed but conflicting subdomain operations are discovered (that is, they have the same sequence number), the one that occurs earlier in the blockchain's history is accepted. Invalid subdomain operations are ignored.\nCombined, this ensures that a BNS node with all of the zone files with a given subdomain's operations will be able to determine the valid sequence of state-transitions it has undergone, and determine the current zone file and public key hash for the subdomain.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#subdomain-creation-and-management)\nSubdomain Creation and Management\nUnlike an on-chain name, a subdomain owner needs an on-chain name owner's help to broadcast their subdomain operations. In particular:\n  * A subdomain-creation transaction can only be processed by the owner of the on-chain name that shares its suffix. For example, only the owner of `res_publica.id` can broadcast subdomain-creation transactions for subdomain names ending in `.res_publica.id`.\n  * A subdomain-transfer transaction can only be broadcast by the owner of the on-chain name that created it. For example, the owner of `cicero.res_publica.id` needs the owner of `res_publica.id` to broadcast a subdomain-transfer transaction to change `cicero.res_publica.id`'s public key.\n  * In order to send a subdomain-creation or subdomain-transfer, all of an on-chain name owner's zone files must be present in the Atlas network. This lets the BNS node prove the _absence_ of any conflicting subdomain-creation and subdomain-transfer operations when processing new zone files.\n  * A subdomain update transaction can be broadcast by _any_ on-chain name owner, but the subdomain owner needs to find one who will cooperate. For example, the owner of `verified.podcast` can broadcast a subdomain-update transaction created by the owner of `cicero.res_publica.id`.\n\n\nThat said, to create a subdomain, the subdomain owner generates a subdomain-creation operation for their desired name and gives it to the on-chain name owner.\nOnce created, a subdomain owner can use any on-chain name owner to broadcast a subdomain-update operation. To do so, they generate and sign the requisite subdomain operation and give it to an on-chain name owner, who then packages it with other subdomain operations into a DNS zone file and broadcasts it to the network.\nIf the subdomain owner wants to change the address of their subdomain, they need to sign a subdomain-transfer operation and give it to the on-chain name owner who created the subdomain. They then package it into a zone file and broadcast it.\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#subdomain-registrars)\nSubdomain Registrars\nBecause subdomain names are cheap, developers may be inclined to run subdomain registrars on behalf of their applications. For example, the name `personal.id` is used to register usernames without requiring them to spend any Bitcoin.\nWe supply a reference implementation of a [BNS Subdomain Registrar](https://github.com/stacks-network/subdomain-registrar) to help developers broadcast subdomain operations. Users would still own their subdomain names; the registrar simply gives developers a convenient way for them to register and manage them in the context of a particular application.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#bns-and-did-standards)\nBNS and DID Standards\nBNS names are compliant with the emerging [Decentralized Identity Foundation](http://identity.foundation) protocol specification for decentralized identifiers (DIDs).\nEach name in BNS has an associated DID. The DID format for BNS is:\nCopy```\n    did:stack:v0:{address}-{index}\n```\n\nWhere:\n  * `{address}` is an on-chain public key hash (for example a Bitcoin address).\n  * `{index}` refers to the `nth` name this address created.\n\n\nFor example, the DID for `personal.id` is `did:stack:v0:1dARRtzHPAFRNE7Yup2Md9w18XEQAtLiV-0`, because the name `personal.id` was the first-ever name created by `1dARRtzHPAFRNE7Yup2Md9w18XEQAtLiV`.\nAs another example, the DID for `jude.id` is `did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-1`. Here, the address `16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg` had created one earlier name in history prior to this one (which happens to be `abcdefgh123456.id`).\nThe purpose of a DID is to provide an eternal identifier for a public key. The public key may change, but the DID will not.\nStacks Blockchain implements a DID method of its own in order to be compatible with other systems that use DIDs for public key resolution. In order for a DID to be resolvable, all of the following must be true for a name:\n  * The name must exist\n  * The name's zone file hash must be the hash of a well-formed DNS zone file\n  * The DNS zone file must be present in the Stacks node's data.\n  * The DNS zone file must contain a `URI` resource record that points to a signed JSON Web Token\n  * The public key that signed the JSON Web Token (and is included with it) must hash to the address that owns the name\n\n\nNot all names will have DIDs that resolve to public keys. However, names created by standard tooling will have DIDs that do.\nA RESTful API is under development.\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system#did-encoding-for-subdomains)\nDID Encoding for Subdomains\nEvery name and subdomain in BNS has a DID. The encoding is slightly different for subdomains, so the software can determine which code-path to take.\n  * For on-chain BNS names, the `{address}` is the same as the Bitcoin address that owns the name. Currently, both version byte 0 and version byte 5 addresses are supported (that is, addresses starting with `1` or `3`, meaning `p2pkh` and `p2sh` addresses).\n  * For off-chain BNS subdomains, the `{address}` has version byte 63 for subdomains owned by a single private key, and version byte 50 for subdomains owned by a m-of-n set of private keys. That is, subdomain DID addresses start with `S` or `M`, respectively.\n\n\nThe `{index}` field for a subdomain's DID is distinct from the `{index}` field for a BNS name's DID, even if the same created both names and subdomains. For example, the name `abcdefgh123456.id` has the DID `did:stack:v0:16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg-0`, because it was the first name created by `16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg`. However, `16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg` _also_ created `jude.statism.id` as its first subdomain name. The DID for `jude.statism.id` is `did:stack:v0:SSXMcDiCZ7yFSQSUj7mWzmDcdwYhq97p2i-0`. Note that the address `SSXMcDiCZ7yFSQSUj7mWzmDcdwYhq97p2i` encodes the same public key hash as the address `16EMaNw3pkn3v6f2BgnSSs53zAKH4Q8YJg` (the only difference between these two strings is that the first is base58check-encoded with version byte 0, and the second is encoded with version byte 63).\n[PreviousAuthentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)[NextSIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 3482,
      "title": "Bitcoin Name System | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/sips",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Stacks Improvement Proposals (SIPs)](https://docs.stacks.co/concepts/network-fundamentals/sips#stacks-improvement-proposals-sips)\n  * [Ratified SIPSs](https://docs.stacks.co/concepts/network-fundamentals/sips#ratified-sipss)\n  * [How to Get Involved](https://docs.stacks.co/concepts/network-fundamentals/sips#how-to-get-involved)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# SIPs\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/sips#stacks-improvement-proposals-sips)\nStacks Improvement Proposals (SIPs)\nStacks improvement proposals (SIPs) are aimed at describing the implementation of the Stacks blockchain, as well as proposing improvements.\nThe SIP process [(SIP-000)](https://github.com/stacksgov/sips/blob/main/sips/sip-000/sip-000-stacks-improvement-proposal-process.md) describes how to make a SIP and get it ratified.\nThey should contain concise technical specifications of features or standards and the rationale behind it. SIPs are intended to be the primary medium for proposing new features, for collecting community input on a system-wide issue, and for documenting design decisions.\nThe SIPs are located in the [stacksgov/sips](https://github.com/stacksgov/sips) repository as part of the [Stacks Community Governance organization](https://github.com/stacksgov).\nAnyone in the Stacks community can submit a SIP.\nStacks Improvement Proposals Community Calls Add the [weekly community SIP call](https://www.addevent.com/event/wS15955379) to your calendar.\nSIP Meeting calls are recorded and available [here](https://www.youtube.com/playlist?list=PLg717Ri_rTnx5kuaWqp3cUAtwQk_yzslT)\nMore details of the meetings are available [here](https://github.com/stacksgov/sips/issues/79)\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/sips#ratified-sipss)\nRatified SIPSs\n  * [SIP 000: Improvement Proposal Process](https://github.com/stacksgov/sips/blob/main/sips/sip-000/sip-000-stacks-improvement-proposal-process.md)\n  * [SIP 001: Burn Election](https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md)\n  * [SIP 002: Clarity, a language for predictable smart contracts](https://github.com/stacksgov/sips/blob/main/sips/sip-002/sip-002-smart-contract-language.md)\n  * [SIP 003: Peer Network](https://github.com/stacksgov/sips/blob/main/sips/sip-003/sip-003-peer-network.md)\n  * [SIP 004: Cryptographic Commitment to Materialized Views](https://github.com/stacksgov/sips/blob/main/sips/sip-004/sip-004-materialized-view.md)\n  * [SIP 005: Blocks, Transactions, and Accounts](https://github.com/stacksgov/sips/blob/main/sips/sip-005/sip-005-blocks-and-transactions.md)\n  * [SIP 006: Clarity Execution Cost Assessment](https://github.com/stacksgov/sips/blob/main/sips/sip-006/sip-006-runtime-cost-assessment.md)\n  * [SIP 007: Stacking Consensus](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md)\n  * [SIP 008: Clarity Parsing and Analysis Cost Assessment](https://github.com/stacksgov/sips/blob/main/sips/sip-008/sip-008-analysis-cost-assessment.md)\n  * [SIP 009: Standard Trait Definition for Non-Fungible Tokens](https://github.com/stacksgov/sips/blob/main/sips/sip-009/sip-009-nft-standard.md)\n  * [SIP 010: Standard Trait Definition for Fungible Tokens](https://github.com/stacksgov/sips/blob/main/sips/sip-010/sip-010-fungible-token-standard.md)\n  * [SIP 012: Burn Height Selection for a Network Upgrade to Introduce New Cost-Limits](https://github.com/stacksgov/sips/blob/main/sips/sip-012/sip-012-cost-limits-network-upgrade.md)\n  * [SIP 013: Standard Trait Definition for Semi-Fungible Tokens](https://github.com/stacksgov/sips/blob/main/sips/sip-013/sip-013-semi-fungible-token-standard.md)\n  * [SIP-015: Stacks Upgrade of Proof-of-Transfer and Clarity](https://github.com/stacksgov/sips/blob/main/sips/sip-015/sip-015-network-upgrade.md)\n  * [SIP-016: Metadata for Tokens](https://github.com/stacksgov/sips/blob/main/sips/sip-016/sip-016-token-metadata.md)\n  * [SIP-018: Signed Structured Data](https://github.com/stacksgov/sips/blob/main/sips/sip-018/sip-018-signed-structured-data.md)\n  * [SIP-019: Notifications for Token Metadata Updates](https://github.com/stacksgov/sips/blob/main/sips/sip-019/sip-019-token-metadata-update-notifications.md)\n  * [SIP-020: Bitwise Operations in Clarity](https://github.com/stacksgov/sips/blob/main/sips/sip-020/sip-020-bitwise-ops.md)\n  * [SIP-022: Emergency Fix to PoX Stacking Increases](https://github.com/stacksgov/sips/blob/main/sips/sip-022/sip-022-emergency-pox-fix.md)\n  * [SIP-023: Emergency Fix to Trait Invocation Behavior](https://github.com/stacksgov/sips/blob/main/sips/sip-023/sip-023-emergency-fix-traits.md)\n  * [SIP-024: Emergency Fix to Data Validation and Serialization Behavior](https://github.com/stacksgov/sips/blob/main/sips/sip-024/sip-024-least-supertype-fix.md)\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/sips#how-to-get-involved)\nHow to Get Involved\nThere are several ways you can get involved with the SIP process:\n  * **Join the weekly SIP Meeting call** listed [here](https://community.stacks.org/events).\n  * **SIP Editor**. SIP editors help SIP authors make sure their SIPs are well-formed and follow the right process. They help get SIPs ready for deep review by advancing it them from Draft to Accepted status. If you want to become a SIP editor, open an issue with your name and email to ask to be added to the list of SIP editors.\n  * **Join a CAB** (Consideration Advisory Board). SIPs fall under the purview of one or more considerations. A full list is in [this github](https://github.com/stacksgov/sips/tree/main/considerations) directory. Currently they are: Diversity, Economics, Ethics, Governance and Technical. Members of SIP consideration advisory boards use their domain expertise to give Accepted SIPs a deep read, and give the authors any/all feedback to help make the SIP workable. If you want to join a board, reach out to the board's chairperson via the listed contact information.\n  * **Steering Committee**. The Steering Committee organizes the consideration advisory boards and votes to advance Recommended SIPs to Activation-in-Progress status, and then to either Ratified or Rejected status. Once they are in the process of being activated, they use a SIP's Activation section to determine whether or not the Stacks ecosystem has ratified or rejected the SIP. Joining this committee requires the consent of the Stacks Foundation board.\n\n\n[PreviousBitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)[NextTechnical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1102,
      "title": "SIPs | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/technical-specifications",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Consensus](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#consensus)\n  * [Proof of Transfer Mining](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#proof-of-transfer-mining)\n  * [Stacking](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#stacking)\n  * [Accounts and Addresses](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#accounts-and-addresses)\n  * [Transactions](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#transactions)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Technical Specifications\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#consensus)\nConsensus\n  * Proof of Transfer (PoX) as described in [SIP-007](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md)\n  * Network will transition to Proof of Burn (PoB) as described in [SIP-001](https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md) after 10 years. [Learn more about Proof-of-Burn in SIP-001](https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md).\n  * Threat model\n    * 51% of malicious Bitcoin mining power can reorg the Stacks chain or perform a double-spend attack\n    * Chain can halt if Stackers cannot meet 70% consensus on block validity\n  * Different actors and their roles\n    * Stacks Miners package transactions into blocks and propose them to stackers\n    * Stacks Holders may alter the calculation of block limits (subject to a miner veto) and may vote to disable Proof-of-Transfer rewards for a reward cycle.\n    * Stackers validate and append blocks to the chain and validate sBTC deposit and withdrawal transactions\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#proof-of-transfer-mining)\nProof of Transfer Mining\n  * Coinbase reward schedule:\n    * 1000 STX/block for first 4 years\n    * 500 STX/block for following 4 years\n    * 250 STX/block for subsequent 4 years\n    * 125 STX/block in perpetuity after that\n  * Coinbase rewards accumulate for \"missed sortitions\": If a Bitcoin block has no sortition (at height N), then any Stacks block mined in a subsequent sortition that builds off of any Stacks chain tip that existed at the penultimate sortition (at height N-1) may claim its coinbase. This encourages miners to keep mining even if Bitcoin fees are high.\n  * Initial mining bonus: This is a special case of the above to incentivize early miners. Coinbase for all burnchain blocks between the first burn block height (to be chosen by independent miners as part of the Stacks 2.0 launch) and the first sortition winner accumulate and are distributed to miners over a fixed window (to be determined). For instance, say burn block height is 10,000 and first sortition is at block 10500 and distribution window is 100 blocks, then coinbase for the first 500 blocks (10,500 - 10,000) will be distributed evenly to miners who win sortition over the subsequent 100 blocks.\n  * Reward maturity window: 100 blocks, meaning leaders will earn the coinbase reward 100 blocks after the block they successfully mine.\n  * Block interval: Stacks blockchain produces fast blocks roughly every 10 seconds with a miner tenure change occurring every Bitcoin block\n  * BTC commitment: Miners must commit at least 11,000 satoshis (5,500 sats / [UTXO output](https://learnmeabitcoin.com/technical/utxo)); 2 outputs / block) to avoid \"dust.\"\n  * For more details, see Block Production.\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#stacking)\nStacking\n  * Stacking works in 2 phases\n    1. Prepare phase: In this phase an \"anchor block\" is chosen. The qualifying set of addresses (\"reward set\") is determined based on the snapshot of the chain at the anchor block. Length of prepare phase is 100 blocks. Stacking commitments need to be confirmed before this phase starts\n    2. Reward phase: In this phase miner BTC commitments are distributed amongst the reward set. Reward cycle length is 2000 BTC blocks (~2 weeks).\n  * Two reward addresses / block, for a total of 4000 addresses every reward cycle. The addresses are chosen using a VRF (verifiable random function), so each node can deterministically arrive at the same reward addresses for a given block.\n  * Stacking threshold: 0.025% of the participating amount of STX when participation is between 25% and 100% and when participation is below 25%, the threshold level is always 0.00625 of the liquid supply of STX.\n  * Delegation: An STX address can designate another address to participate in Stacking on its behalf. [Relevant section in SIP-007](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md#stacker-delegation).\n  * Pooling: STX holders that individually do not meet the Stacking threshold can pool together their holdings to participate in Stacking. To do this, STX holders must set the (optional) reward address to the \"delegate address.\" For more details, see [this reference](https://docs.stacks.co/references/stacking-contract#delegate-stx).\n  * Legacy, SegWit, Native Segwit, and Taproot addresses are supported\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#accounts-and-addresses)\nAccounts and Addresses\n  * Transactions in the Stacks blockchain originate from, are paid for by, and execute under the authority of accounts\n  * An account is fully specified by its address + nonce + assets\n  * Address contains 2 or 3 fields: 1 byte version, 20 byte public key hash (RIPEMD160(SHA256(input))), optional name (variable length, max 128 bytes)\n  * Two types of accounts: standard accounts are owned by one or more private keys; contract accounts are materialized when a smart-contract is instantiated (specified by the optional name field above)\n  * Nonce counts number of times an account has authorized a transaction. Starts at 0, valid authorization must include the _next_ nonce value.\n  * Assets are a map of all asset types -- STX, any on-chain assets specified by a Clarity contract (for example NFTs) -- to quantities owned by that account.\n  * Accounts need not be explicit \"created\" or registered; all accounts implicitly exist and are instantiated on first-use.\n\n\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications#transactions)\nTransactions\n  * Transaction types: coinbase, token-transfer, contract-deploy, contract-call, tenure-change.\n  * Only standard accounts (not contracts) can pay transaction fees.\n  * Transaction execution is governed by 3 accounts (may or may not be distinct)\n    1. _originating account_ is the account that creates, _authorizes_ and sends the transaction\n    2. _paying account_ is the account that is billed by the leader for the cost of validating and executing the transaction\n    3. _sending account_ is the account that identifies who is currently executing the transaction: this can change as a transaction executes via the `as-contract` Clarity function\n  * Transactions can be batched or streamed into blocks. The behavior can be controlled by the anchor mode of a transaction. With streaming (microblocks), a faster confirmation time is possible.\n  * Two types of authorizations: standard authorization is where originating account is the same as paying account. _Sponsored_ authorization is where originating account and paying account are distinct. For instance, developers or service providers could pay for users to call their smart-contracts.\n  * For sponsored authorization, first a user signs with the originating account and then a sponsor signs with the paying account.\n  * Mempool limit for concurrent pending transactions is 25 per account\n  * Pending mempool transactions will be garbage-collected [256 blocks after receipt](https://github.com/stacks-network/stacks-blockchain/blob/master/src/core/mempool.rs#L62). With 10 minutes target block time, this would equal ~42 hours\n  * [Learn more about transaction encoding in SIP-005](https://github.com/stacksgov/sips/blob/main/sips/sip-005/sip-005-blocks-and-transactions.md#transaction-encoding)\n  * [Transaction signing and verification are described in SIP-005](https://github.com/stacksgov/sips/blob/main/sips/sip-005/sip-005-blocks-and-transactions.md#transaction-signing-and-verifying)\n  * All transactions impacting account balance are atomic, a transfer operation can not increment one account‚Äôs balance without decrementing another‚Äôs. However, transactions that perform multiple account actions (for example, transferring from multiple accounts) may partially complete.\n  * Transactions can include a memo string (max 34 bytes)\n\n\n[PreviousSIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)[NextAudits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1636,
      "title": "Technical Specifications | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n  3. [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n\n\n# Audits\nIndex of known audits related to Stacks core and sBTC\n_All 'high' or 'critical' issues listed in audits have either been mitigated or otherwise made obsolete, even if the report states otherwise._\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits#sbtc)\nsBTC\n[2MB Clarity Alliance - sBTC.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FqHvc76uCfUEu6oPsrGoh%2FClarity%20Alliance%20-%20sBTC.pdf?alt=media&token=48a07ede-a962-46e6-b5cf-7ac48889ba1f)\n[826KB CoinFabrik - WSTS.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FLIhQvPOQr5e5BNMtAGpx%2FCoinFabrik%20-%20WSTS.pdf?alt=media&token=4916a6f5-8c52-49a5-83e3-d4563e0d69f4)\n[1012KB Ottersec - sBTC Withdrawal.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2F5IcdvQpxWYgCdmQbwU6I%2FOttersec%20-%20sBTC%20Withdrawal.pdf?alt=media&token=4474498d-0aed-4b71-99ad-e1f7c5f63680)\n[1MB Ottersec - WSTS.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FGl58CVj4fZpPPgiuaLOa%2FOttersec%20-%20WSTS.pdf?alt=media&token=a45063b5-aa42-47a5-a7e2-57db4e453507)\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits#stacks-core)\nStacks Core\n[153KB CoinFabrik - Signer Binary.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FuVyAvx3yzYi41Sn1ZRoV%2FCoinFabrik%20-%20Signer%20Binary.pdf?alt=media&token=0eb9405d-7c89-4e32-9731-c1da2d1f4ad9)\n[154KB CoinFabrik - StackerDB.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FN8kgEcWnvonEJMR7Jdx8%2FCoinFabrik%20-%20StackerDB.pdf?alt=media&token=57de08fb-493e-47b9-b5b6-0fa04bbcbea3)\n[1MB CoinFabrik - Stacks LibSigner.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FbG3N1WPkwoZpry5bJ5aR%2FCoinFabrik%20-%20Stacks%20LibSigner.pdf?alt=media&token=c6a2ca59-2a89-4c90-b770-1d96940efab6)\n[165KB Coinfabrik - Stacks PoX.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2F5cOCpIMNaCUZTcO09aWo%2FCoinfabrik%20-%20Stacks%20PoX.pdf?alt=media&token=457ce4de-ddbc-4e67-91a0-16d5a8956c8c)\n[1MB CoinFabrik - Stacks Signer Audit.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2Ftms9HZrfTYRaLHMxEk4p%2FCoinFabrik%20-%20Stacks%20Signer%20Audit.pdf?alt=media&token=00dd2a61-7b6c-4340-9ad7-972daee3cd64)\n[4MB Quantstamp - Network State Machine.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FmFftdN7RLrStVJbdJPrz%2FQuantstamp%20-%20Network%20State%20Machine.pdf?alt=media&token=1f731ff1-27b6-4913-a7f3-8a4d68090373)\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits#audits-are-just-part-of-the-story)\nAudits are just part of the story\nFor any project, layers of security are crucial. Audits represent one layer, while core developers and contributors collaborate to provide many more. Notable security programs, designs, and partners beyond audits include:\n  * Embedded security researchers [via Asymmetric Research](https://stacks.org/asymmetric-joins-stacks-ecosystem)\n  * Attackathon programs in partnership with Immunefi\n  * sBTC‚Äôs decentralized [network of validators/signers](https://www.stacks.co/sbtc) (removing the need to entrust a single entity and mitigating counterparty risk) \n  * Stacks‚Äô underlying design that offers 100% Bitcoin finality, securing sBTC at the consensus level of a $2.5 billion network.\n  * Support at the app layer via [Hypernative](https://hackernoon.com/hypernative-bolsters-bitcoin-l2-security-as-stacks-ecosystem-gets-real-time-protection)\n  * Bitcoin L2 Labs'[ whitehat security program](https://bitcoinl2-labs.github.io/2024/06/04/orange-hats.html)\n  * Stacks Foundation's partnership with Staking Defense League,\n  * Stacks Founation's ongoing[ Immunefi bug bounty program](https://immunefi.com/bug-bounty/stacks/information/)\n  * Dedicated Stacks Foundation Residents focused exclusively on fuzz and penetration testing (created [Rendezvous](https://stacks-network.github.io/rendezvous/))\n\n\n#### \n[](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits#other-audits)\nOther audits\n[1MB Clarity Alliance - sBTC Rewards Program.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FF58NFbO6NeP11ngXZvXM%2FClarity%20Alliance%20-%20sBTC%20Rewards%20Program.pdf?alt=media&token=d392b1ce-9017-4a17-9643-4bbe2bc7f9bb)\n[245KB Blockstack_Desktop_Wallet_Pentest_Report_11-12-2020.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FgnT8t6BvWI7RFpPli7py%2FBlockstack_Desktop_Wallet_Pentest_Report_11-12-2020.pdf?alt=media&token=7e38e7ee-5a41-446d-9367-b40ed6ad95fd)\n[708KB NCC_Group_Stacks_Wallet_Report_2020-11-17_v1.0.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2F24e55dPjEWn8OtZPcAxo%2FNCC_Group_Stacks_Wallet_Report_2020-11-17_v1.0.pdf?alt=media&token=bbf6935e-821b-424c-bced-4b6cedca05cd)\n[754KB NCC_Group_Stacks_Blockchain_Audit_Report_2020-11-23_v1.0.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FzNUL0X6RcpH0Mi4Y3b0Z%2FNCC_Group_Stacks_Blockchain_Audit_Report_2020-11-23_v1.0.pdf?alt=media&token=7192db4e-cd88-47d0-b185-ba8d0c9b5b4b)\nTrail of Bits Report, Stacks Blockchain (No PDF, [Github Issues List provided](https://github.com/diwakergupta/stacks-blockchain-tob-audit/issues))\n[PreviousTechnical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)[NextBlock Production](https://docs.stacks.co/concepts/block-production)\nLast updated 3 months ago\nWas this helpful?\n",
      "wordCount": 836,
      "title": "Audits | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/block-production",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Block Production\nBlock production is a key concept to understand in order to understand how Stacks operates under the hood. This section will walk you through the three main actions that need to happen in order for the Stacks chain to operate.\n  * Mining\n  * Signing\n  * Stacking\n\n\nThere are two primary parties in Stacks block production: miners and stackers. Miners are responsible for building and proposing new blocks, while stackers are responsible for validating both those blocks and signing sBTC deposits and withdrawals.\nStacking is another action conducted by stackers that is a necessary prerequisite to signing. We'll cover how all of this works together in the next three sections.\nFor an in-depth overview of the technical aspects of how block production works after the Nakmoto Upgrade, be sure to read through [SIP-021](https://github.com/stacksgov/sips/blob/feat/sip-021-nakamoto/sips/sip-021/sip-021-nakamoto.md).\nHere's a diagram outlining the block production process under Nakamoto rules. We'll dig into each part of this in the following docs.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FxjPQBNGCf8kq72oo5Usw%252Fimage.png%3Falt%3Dmedia%26token%3D6f27dbce-8e52-430c-a7a6-adaacbd9573e&width=768&dpr=4&quality=100&sign=90885833&sv=2)\n[PreviousAudits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)[NextMining](https://docs.stacks.co/concepts/block-production/mining)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 702,
      "title": "Block Production | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/block-production/mining",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Miner Tenures](https://docs.stacks.co/concepts/block-production/mining#miner-tenures)\n  * [Coinbase rewards](https://docs.stacks.co/concepts/block-production/mining#coinbase-rewards)\n  * [Transaction fees](https://docs.stacks.co/concepts/block-production/mining#transaction-fees)\n  * [Reward maturity](https://docs.stacks.co/concepts/block-production/mining#reward-maturity)\n  * [Mining with proof-of-transfer](https://docs.stacks.co/concepts/block-production/mining#mining-with-proof-of-transfer)\n  * [Probability to mine next block](https://docs.stacks.co/concepts/block-production/mining#probability-to-mine-next-block)\n  * [Stacks mining in practice](https://docs.stacks.co/concepts/block-production/mining#stacks-mining-in-practice)\n  * [What About Microblocks?](https://docs.stacks.co/concepts/block-production/mining#what-about-microblocks)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Block Production](https://docs.stacks.co/concepts/block-production)\n\n\n# Mining\nThis is conceptual guide that covers how mining works. For practical steps on how to setup your own miner please refer to the guides to running a miner on [mainnet](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens) and [testnet](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens).\n### \n[](https://docs.stacks.co/concepts/block-production/mining#miner-tenures)\nMiner Tenures\nIn previous version of Stacks (before the Nakamoto Upgrade), Stacks miners would mine new Stacks blocks at a one-to-one cadence with Bitcoin blocks.\nAfter Nakamoto, this is no longer the case. Under Nakamoto rules, miners are instead selected for a tenure that corresponds to a Bitcoin block. During this tenure, miners build and propose several Stacks blocks (roughly every 10 seconds) and stackers will approve and append them (next section).\nTo be considered for a tenure, a miner must have a block commit included in a Bitcoin block. If a miner wishes to update their commitment after submission, they may use Bitcoin Replace-By-Fee.\n### \n[](https://docs.stacks.co/concepts/block-production/mining#coinbase-rewards)\nCoinbase rewards\nMiners receive coinbase rewards for tenures they win.\nThe reward amounts are:\n  * 1000 STX per tenure are released in the first 4 years of mining\n  * 500 STX per tenure are released during the following 4 years\n  * 250 STX per tenure are released during the following 4 years\n  * 125 STX per tenure are released from then on indefinitely.\n\n\nThese \"halvings\" are synchronized with Bitcoin halvings.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FK0kNncRtHIjOS8T1Hj4L%252Fimage.png%3Falt%3Dmedia%26token%3Df45ec2e7-dec8-4f56-90c6-af5676552862&width=768&dpr=4&quality=100&sign=f0aa2556&sv=2)\n### \n[](https://docs.stacks.co/concepts/block-production/mining#transaction-fees)\nTransaction fees\nMiners receive Stacks fees for transactions mined in any block they produce.\n### \n[](https://docs.stacks.co/concepts/block-production/mining#reward-maturity)\nReward maturity\nBlock rewards and transaction fees take 100 blocks on the Bitcoin blockchain to mature. After successfully mining a block your rewards appear in your Stacks account after ~24 hours.\n### \n[](https://docs.stacks.co/concepts/block-production/mining#mining-with-proof-of-transfer)\nMining with proof-of-transfer\nMiners commit Bitcoin to **two** addresses in every leader block commit. The amount committed to each address must be the same. The addresses are chosen from the current reward set of stacking participants. Addresses are chosen using a verifiable-random-function, and determining the correct two addresses for a given block requires monitoring the Stacks chain.\nFor more detailed information on this process, read [SIP-007](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md), which describes proof of transfer in detail.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FrCOhaEIQSUw0WYSLEyYn%252Fimage.png%3Falt%3Dmedia%26token%3D52e209ff-3992-4479-803d-92736ce23fc8&width=768&dpr=4&quality=100&sign=a6b8b53b&sv=2)\nPoX mining is a modification of Proof-of-Burn (PoB) mining, where instead of sending the committed Bitcoin to a burn address, it's transferred to eligible STX holders that participate in the stacking protocol.\nA PoX miner can only receive newly minted STX tokens when they transfer Bitcoin to eligible owners of STX tokens\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FKXhVi5nRFCnN5XE1D1NH%252Fimage.png%3Falt%3Dmedia%26token%3D9dc51933-f5df-44d6-8b84-d613caf073eb&width=768&dpr=4&quality=100&sign=16880087&sv=2)\nMiners run Stacks nodes with mining enabled to participate in the PoX mechanism. The node implements the PoX mechanism, which ensures proper handling and incentives through four key phases:\n  * Registration: miners register for a future election by sending consensus data to the network\n  * Commitment: registered miners transfer Bitcoin to participate in the election. Committed BTC are sent to a set participating STX token holders\n  * Election: a verifiable random function chooses one miner for a new tenure to write blocks on the Stacks blockchain\n  * Assembly: the elected miner writes the new blocks by pulling transactions from the mempool and collects rewards in form of new STX tokens\n\n\n### \n[](https://docs.stacks.co/concepts/block-production/mining#probability-to-mine-next-block)\nProbability to mine next block\nThe miner who is selected to mine the next block is chosen depending on the amount of BTC the miners sent, that is, transferred or burnt.\nThe probability for a miner to mine the next block is determined using a variation of the Assumed Total Commitment with Carryforward (ATC-C) MEV mitigation strategy described in [this document](https://github.com/stacksgov/sips/blob/feat/sip-021-nakamoto/sips/sip-021/MEV-Report.pdf) to allocate block rewards to miners. The probability a miner will win the sortition and be granted the current tenure will be based on a function that accounts for the total block commit spend on the blocks leading up to the current sortition.\nYou can read more about this in the [MEV section of SIP-021](https://github.com/stacksgov/sips/blob/feat/sip-021-nakamoto/sips/sip-021/sip-021-nakamoto.md#block-reward-distribution-and-mev).\nWhile there is no minimum BTC commitment enforced by the protocol, in practice, there's a floor constrained by [dust](https://unchained-capital.com/blog/dust-thermodynamics/): basically, if the fees for a transaction exceed the value of the spent output, it's considered dust. How dust is [calculated](https://github.com/bitcoin/bitcoin/blob/master/src/policy/policy.cpp#L14) depends on a number of factors, we've found 5,500 satoshis to be good lower bound per [output](https://learnmeabitcoin.com/technical/output). Bitcoin transactions from Stacks miners contain two outputs (for Proof-of-Transfer), so a commitment of at least 11,000 satoshis / block is recommended.\nTo calculate the amount of BTC to send miners should:\n  * Guess the price BTC/STX for the next day (100 blocks later)\n  * Guess the total amount of BTCs committed by all miners\n\n\nStackers are in charge of both validating and appending new blocks and conducting miner tenure changes. The next section will explain how that works, and then we'll see how this process results in Bitcoin finality.\n### \n[](https://docs.stacks.co/concepts/block-production/mining#stacks-mining-in-practice)\nStacks mining in practice\nIf you take a look at [SIgnal21's mining dashboard](https://app.signal21.io/stacks/mining), you can view some interesting data about mining on the Stacks network, including BTC spent per block, STX earned per block, the total number of miners over the course of the chain's history, and the number of miners for any given block.\nMany people notice the seemingly small number of miners on Stacks. Without context, this can sometimes raise eyebrows. Let's dig into how mining works on Stacks so we can understand why this isn't an issue for decentralization.\nStacks miners function similarly to sequencers in L2 systems in that they are only responsible for constructing and proposing new blocks, not appending them to the chain. But unlike most Ethereum L2s that operate with just a single centralized sequencer, Stacks consistently has at least 4-5 miners with open membership allowing anyone to join.\nIt's important to note that there are two primary parties involved in the block production process on Stacks: miners and stackers.\nThese two roles serve complementary relationships in the [block production process](https://docs.stacks.co/concepts/block-production), and stackers drastically reduce any potential destructive power miners have over the chain.\nMiners cannot reorganize the chain. In the worst case, all miners can do is omit (some kinds of) transactions, and all that is required to address this is to run your own miner.\nFurthermore, more miners on the network would mean fewer BTC rewards for Stackers, as miners would have to spend more of their funds on Bitcoin L1 fees rather than sending it to the Stackers.\n**Wouldn't more miners mean more competition, meaning more rewards?**\nThe reason more miners means fewer rewards is because miners act economically rationally, and they don't have an unlimited amount of BTC to work with.\nMiners are paying their PoX commitments plus their Bitcoin fees for a chance to win the coinbase (1,000 STX) plus fees for a tenure. If there are more miners, they will each pay less, because they will have a lower chance of winning. They can't pay ever-increasing amounts of BTC because at some point they will never be profitable, so there is a limit to how much BTC they can spend in order to try and win a tenure.\nAs they pay less, the Bitcoin fee becomes a more significant portion of their expenses, and that also decreases their odds of winning the tenure.\nHere's a concrete example:\nLet's say Stacks is trading at 1,000 Sats per STX. \nThe total spend from all miners, if everyone is acting logically and we ignore Stacks fees, would be less than 1,000,000 Sats (1,000 STX coinbase * 1000 Sats/STX). \nIf that is from 5 miners, then it could be 10,000 Sats (2,000 Sats for each transaction) going to Bitcoin fees and 990,000 Sats going to PoX. \nIf there are 100 miners, then it would be 200,000 Sats going to Bitcoin fees, and 800,000 Sats going to PoX.\nThis creates a natural economic equilibrium where:\n  1. Enough miners participate to ensure blocks are produced reliably\n  2. Stackers receive optimal BTC rewards\n  3. The network maintains censorship resistance without unnecessary mining competition\n\n\nThis design is intentional - by having stackers as complimentary security guarantors who receive BTC rewards via PoX, Stacks achieves security without requiring an excessive number of miners competing solely to win block production rights.\nUnlike other chains where miners alone determine the canonical chain, Stacks' two-party system provides stronger guarantees:\n  * Miners cannot force invalid transactions or blocks (stackers won't sign them, and even if they did, the nodes would not accept them)\n  * No miner can unilaterally reorg the chain (stackers control chain finality)\n  * The 70% stacker threshold signature requirement ensures broad consensus before blocks are accepted\n\n\nThis separation of concerns between miners and stackers is what makes Stacks uniquely secure despite having a small number of miners.\n### \n[](https://docs.stacks.co/concepts/block-production/mining#what-about-microblocks)\nWhat About Microblocks?\nMicroblocks are a legacy feature of the previous version of Stacks that no longer exist. They were originally created as a way to improve transaction throughput, but without the functionality of Nakamoto, they never worked in practice.\nInstead of microblocks, Nakamoto instead utilizes a block production structure that creates Stacks blocks at a rapid cadence as described here.\n[PreviousBlock Production](https://docs.stacks.co/concepts/block-production)[NextSigning](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\nLast updated 6 months ago\nWas this helpful?\n",
      "wordCount": 2051,
      "title": "Mining | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/block-production/stackers-and-signing",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Stacker Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing#stacker-signing)\n  * [Validating and Appending New Blocks](https://docs.stacks.co/concepts/block-production/stackers-and-signing#validating-and-appending-new-blocks)\n  * [Conducting Miner Tenure Changes](https://docs.stacks.co/concepts/block-production/stackers-and-signing#conducting-miner-tenure-changes)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Block Production](https://docs.stacks.co/concepts/block-production)\n\n\n# Signing\nStackers play an essential role in the Nakamoto system that had previously been the responsibility of miners. Before, miners both decided the contents of blocks, and decided whether or not to include them in the chain (i.e. by deciding whether or not to confirm them). In this system each actor has the following responsibilities necessary to make the system function reliably without forks:\n  * **Miners** decide the contents of blocks.\n  * **Stackers** decide whether or not the block is included in the chain.\n\n\nThe bulk of the complexity of the Nakamoto changes is in separating these two concerns while ensuring that both mining and Stacking remain open-membership processes. **Crucially, anyone can become a miner and anyone can become a Stacker, just as before.** The most substantial changes are in getting miners and Stackers to work together in their new roles to achieve this proposal's goals.\nThe key idea is that Stackers are required to acknowledge and validate a miner's block before it can be appended to the chain. To do so, Stackers must first agree on the canonical chain tip, and then apply (and roll back) the block on this chain tip to determine its validity. Once Stackers agree that the block is both canonical and valid, they collectively sign it and replicate it to the rest of the Stacks peer network. Only at this point do nodes append the block to their chain histories.\nThis new behavior prevents forks from arising. If a miner builds a block atop a stale tip, Stackers will refuse to sign the block. If Stackers cannot agree on the canonical Stacks tip, then no block will be appended in the first place. While this behavior creates a new failure mode for Stacks -- namely, the chain can halt indefinitely if Stackers cannot agree on the chain tip -- this is mitigated by having a large and diverse body of Stackers such that enough of them are online at all times to meet quorum and incentivizing them via PoX rewards to act as such.\n### \n[](https://docs.stacks.co/concepts/block-production/stackers-and-signing#stacker-signing)\nStacker Signing\nYou can view a list of all of the [active signers](https://explorer.hiro.so/signers?chain=mainnet) on Hiro's block explorer.\nWe'll cover how stacking works in the [Stacking](https://docs.stacks.co/concepts/block-production/stacking) section and the sBTC signing in the [sBTC](https://docs.stacks.co/concepts/sbtc) section, here we'll cover the signing process as it relates to Stacks block production.\nThe means by which Stackers agree on the canonical chain tip and agree to append blocks is tied to PoX. In each reward cycle, a Stacker clinches one or more reward slots; there are at most 4,000 reward slots per reward cycle. Stackers vote to accept blocks by producing a weighted threshold signature over the block. The signature must represent a substantial fraction of the total STX locked in PoX (the threshold), and each Stacker's share of the signature (its weight) is proportional to the fraction of locked STX it owns.\nThe weighted threshold signature is a Schnorr signature generated through a variation of the [FROST protocol](https://eprint.iacr.org/2020/852.pdf). Each Stacker generates a signing key pair, and they collectively generate an aggregate public key for nodes to use to verify signatures computed through a distributed signing protocol. This signing protocol allocates shares of the associated aggregate private key to Stackers proportional to the number of reward slots they clinch. No Stacker learns the aggregate private key; Stackers instead compute shares of the private key and use them to compute shares of a signature, which can be combined into a single Schnorr signature.\nWhen a miner produces a block, Stackers execute a distributed signing protocol to collectively generate a single Schnorr signature for the block. Crucially, the signing protocol will succeed only if at least X% of the reward slots are accounted for in the aggregate signature. Nakamoto is currently set to use a 70% signing threshold -- at least 70% of the reward slots (by proxy, 70% of the stacked STX) must sign a block in order to append it to the Stacks blockchain.\nNakamoto uses the [WSTS protocol with the FIRE extension](https://trust-machines.github.io/wsts/wsts.pdf), which admits a distributed key generation and signature generation algorithm pair whose CPU and network bandwidth complexity grows with the number of distinct Stackers. The FIRE extension enables WSTS to tolerate byzantine Stackers.\nHere is a diagram outlining the relationship between signing and stacking.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FyJdETriRv8vmAa0fspe6%252Fimage.png%3Falt%3Dmedia%26token%3D91696ca5-fc50-4169-bdd8-8eb4c3896ccb&width=768&dpr=4&quality=100&sign=cc9c24c4&sv=2)\n### \n[](https://docs.stacks.co/concepts/block-production/stackers-and-signing#validating-and-appending-new-blocks)\nValidating and Appending New Blocks\nWhen miners are selected for a new tenure, they begin building new blocks from transactions in the mempool. They then send those blocks to stackers for approval. Stackers must approve the blocks with a quorum of at least 70% for them to be appended to the chain.\nStackers will approve a block based on several properties:\n  * The block is well-formed\n    * It has the correct version and mainnet/testnet flag\n    * Its header contains the right number of Stacks blocks preceding this one.\n    * Its header contains the correct total Bitcoin spent in the sortition that elected the current tenure.\n    * Its header contains the same Bitcoin block hash as the Bitcoin block that contains its tenure's block-commit transaction*\n    * Its header contains the correct parent block ID of the immediate parent of this block.*\n    * The transaction Merkle tree root is consistent with the transactions\n    * The state root hash matches the MARF tip root hash once all transactions are applied\n    * The block header has a valid ECDSA signature from the miner.\n    * The block header has a valid WSTS Schnorr signature from the set of Stackers.\n  * All Bitcoin transactions since the last valid sortition up to (but not including) this tenure's block-commit‚Äôs Bitcoin block have been applied to the Stacks chain state*\n  * In the case of a tenure start block:\n    * The first transaction is the `TenureChange` transaction.\n    * The first transaction after the `TenureChange` transaction is a `Coinbase`.\n\n\nThe properties marked with * are collectively how Stacks ensures Bitcoin finality. By adhering to these properties, it ensures that miners are only able to append blocks if they build atop the correct chain tip, which also anchors the history to Bitcoin.\nStackers, by validating these rules, ensure Bitcoin finality. We'll talk about this more in the next section.\n### \n[](https://docs.stacks.co/concepts/block-production/stackers-and-signing#conducting-miner-tenure-changes)\nConducting Miner Tenure Changes\nThe other primary signing responsibility in block production involves conducting tenure change transactions. As discussed in the mining section, miners will submit a `block-commit` transaction on the Bitcoin chain to initiate mining. If they are selected, stackers will detect that and create a `tenure-change` transaction.\nThis tenure change transaction includes:\nName\nDescription\nRepresentation\ntenure consensus hash\nConsensus hash of this tenure. Corresponds to the sortition in which the miner of this block was chosen. It may be the case that this miner's tenure gets extended across subsequent sortitions; if this happens, then this `consensus hash` value remains the same as the sortition in which the winning block-commit was mined.\n20 bytes\nprevious tenure consensus hash\nConsensus hash of the previous tenure. Corresponds to the sortition of the previous winning block-commit.\n20 bytes\nburn view consensus hash\nCurrent consensus hash on the underlying burnchain. Corresponds to the last-seen sortition.\n20 bytes\nprevious tenure end\nThe index block hash of the last Stacks block from the previous tenure.\n32 bytes\nprevious tenure blocks\nThe number of blocks produced since the last sortition-linked tenure.\n4 bytes, big-endian\ncause\nA flag to indicate the cause of this tenure change - `0x00` indicates that a sortition occurred, and a new miner should begin producing blocks. - `0x01` indicates that the current miner should continue producing blocks. The current miner‚Äôs tenure execution budget is reset upon processing this transaction.\n1 byte\npubkey hash\nThe ECDSA public key hash of the current tenure.\n20 bytes\nThis tenure change transaction is then sent to the newly elected miner and they must include it as the first transaction in their first block, otherwise stackers will not approve it.\nThis process is then repeated over and over as new miners are elected for tenures.\nBe sure to take a look at [SIP-021](https://github.com/stacksgov/sips/blob/feat/sip-021-nakamoto/sips/sip-021/sip-021-nakamoto.md) to get a detailed description of exactly what happens under the hood during these processes.\nNext up, let's dig a little deeper into this idea of Bitcoin finality and how the Stacks block production mechanism achieves it.\n[PreviousMining](https://docs.stacks.co/concepts/block-production/mining)[NextBitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1933,
      "title": "Signing | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/block-production/bitcoin-finality",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Block Production](https://docs.stacks.co/concepts/block-production)\n\n\n# Bitcoin Finality\nThe concept of 100% Bitcoin finality is crucial to the design of Stacks. This is what turns Stacks into a true Bitcoin L2 and allows it to leverage all of the security inherent in Bitcoin.\nLet's first define what we mean by 100% Bitcoin finality, then we'll dig into how Stacks accomplishes this.\nFinality refers to the point at which transactions are irreversible. Once a blockchain reaches finality, it is nearly impossible to change the ledger's history without undertaking extraordinary measures that are often computationally and economically prohibitive.\nWhen we talk about Stacks blocks having 100% Bitcoin finality, we mean that they are as hard to reverse as Bitcoin transactions themselves.\nThat's a bold claim, so how does Stacks accomplish that?\nAs discussed above, miners are responsible for producing Stacks blocks in their tenure, which corresponds to a single Bitcoin block. As part of their block commit transaction, which is the transaction that previously committed the hash of the next Stacks block to the Bitcoin chain, miners will instead be required to add an indexed block hash.\nThe indexed block hash is the hash of the first block produced by the last Stacks miner in their tenure. This is the SHA512/256 hash of both the consensus hash of all previously-accepted Bitcoin transactions that Stacks recognizes, as well as the hash of the block itself.\nThis will anchor the Stacks chain history to Bitcoin up to the start of the previous miner's tenure, as well as all causally-dependent Bitcoin state that Stacks has processed. This ensures Bitcoin finality, resolves miner connectivity issues by putting fork prevention on stackers, and allows nodes with up-to-date copies of the Stacks chain state to identify which Stacks blocks are affected by a Bitcoin reorg and recover the affected Stacks transactions.\nThis relationship between Stackers, miners, Bitcoin blocks, and Stacks blocks is what maintains Bitcoin finality while allowing miners to rapidly produce Stacks blocks. Bitcoin finality is achieved because at every Bitcoin block N + 1, the state of the Stacks chain as of the start of tenure N is written to Bitcoin. Even if at a future date all of the former Stackers‚Äô signing keys were compromised, they would be unable to rewrite Stacks history for tenure N without rewriting Bitcoin history back to tenure N + 1.\nBecause of this, Stacks transactions can be considered to have Bitcoin finality after the tenure they are a part of concludes, or Bitcoin block N + 1. As an example, if I initiate a Stacks transaction that gets confirmed by a Stacks miner, at the conclusion of that miner's tenure (the end of the current Bitcoin block) that transaction will be written to Bitcoin as part of the Stacks chain state and all future miners are required to build off of that chain tip, making reversing the transaction as difficult as reversing the corresponding Bitcoin transaction.\n#### \n[](https://docs.stacks.co/concepts/block-production/bitcoin-finality#nakamoto-transactions-and-bitcoin-reorgs)\nNakamoto Transactions and Bitcoin Reorgs\nIf Nakamoto transactions follow Bitcoin finality, what happens if Bicoin forks?\nIn order to answer this question, we need to distinguish between two types of Stacks transactions: Bitcoin-reliant and internal.\n**Bitcoin-reliant** transactions are transactions that read Bitcoin state. If Bitcoin forks, then these transactions will change. For these, you cannot do better than following Bitcoin finality. Let's say you moved BTC from L1 to L2, you have to wait for Bitcoin finality before your L2 BTC can be used (you don‚Äôt have any L2 BTC if Bitcoin forks and your L1 transaction becomes unconfirmed).\n**Internal** transactions don't rely on Bitcoin state, and thus won't change if Bitcoin forks. We can have faster confirmations with these because even if Bitcoin forks, signers can ensure that these are re-processed in the same order.\nThe key takeaway is this:\nUnder Nakamoto Stacks transactions won‚Äôt impactfully reorganize due to a Bitcoin fork. Not only is reorging relatively infrequent, but transactions on Stacks that got reorganized due to a Bitcoin fork behave just as reorganized Bitcoin transactions do. With some future analysis, transactions purely on the L2 chain may one day be entirely unaffected.\nThis is a nuanced and complicated concept, so if you are interested in learning more about how this works, you can take a look at the [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs) page of the docs.\n[PreviousSigning](https://docs.stacks.co/concepts/block-production/stackers-and-signing)[NextBitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1258,
      "title": "Bitcoin Finality | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/block-production/bitcoin-reorgs",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Block Production](https://docs.stacks.co/concepts/block-production)\n\n\n# Bitcoin Reorgs\nUnder Nakamoto Stacks transactions don‚Äôt impactfully reorganize due to a Bitcoin fork. Not only is reorging relatively infrequent, but transactions on Stacks that got reorganized due to a Bitcoin fork behave just as reorganized Bitcoin transactions do. With some future analysis, transactions purely on the L2 chain may one day be entirely unaffected.\nUnderstanding this concept fundamentally comes down to understanding finality on post-Nakamoto Stacks.\n**Under Nakamoto the Stacks chain won‚Äôt fork on its own.** It is designed not to fork with only special exceptions, and it‚Äôs entirely infeasible for Stacks to fork on its own if even 31% of Stackers don‚Äôt want it to fork, and even then it would likely only happen within the span of a single tenure.\nThe only case in which Stacks forks post-Nakamoto is if Bitcoin forks cause it to fork.\nUnder Nakamoto, instead of winning the right to make a single block, miners win the right to make a ton of blocks, and during that time we say they‚Äôre under ‚Äútenure‚Äù. Every single Stacks block produced in a tenure requires at least 70% of Stackers to approve (sign) it for it to be included in the Stacks blockchain. The Stackers are watching the Bitcoin blockchain and will only sign blocks from the miner that won the latest sortition.\nNow, let‚Äôs imagine that Bitcoin reorganizes itself and the Stackers were watching a Bitcoin fork that is now sub-optimal. The Stackers would essentially go back in time to the latest common sortition between the fork that it was watching and the new best Bitcoin fork and start signing the blocks within the tenures from there. Note that 70% of the Stackers will be doing the same thing all at once, and the moment 70% agree to start signing from the latest tenure on the new Bitcoin fork there‚Äôs a new singularly optimal Stacks blockchain.\nSo what happens to the transactions that were confirmed on the tenure that got reorganized? Nothing. Still in the mempool as if the reorganized tenure didn‚Äôt happen. For anything within the Stacks blockchain everything is fine. \n**This is 1:1 with a Bitcoin fork reorganizing a Bitcoin transaction.** You shouldn‚Äôt consider a transaction on Bitcoin final if it‚Äôs near the chain tip, and you shouldn‚Äôt consider a Stacks transaction final if it‚Äôs near the tenure tip.\n#### \n[](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs#replaying-transactions-3)\nReplaying Transactions\nSince 70% of the signers have to sign any Stacks block included in the chain at least 70% of signers know the state of the chain before and after a Bitcoin fork causes a Stacks reorg.\nThere‚Äôs a catch to this that makes enforcing it difficult: if a transaction were dependent on something on the Bitcoin blockchain that also got reorganized (a peg-in, for example), that transaction would now be invalid. Taint analysis is when you attempt to answer the questions ‚Äúwhich transaction interacted with the now-orphaned Bitcoin blockchain in a way that makes them invalid (tainted) in the new chain‚Äù and then also ‚Äúwhich transactions interacted with the now invalid (tainted) transaction such that they are now also invalid‚Äù. There‚Äôs a cascading effect, but enforcing any kind of replay requires that the Stackers and the Miners can identify which transactions can get replayed at all.\nTaint analysis, and subsequently replay enforcement, can be added in the future. \nFor the first release, Nakamoto explicitly ties the Stacks blockchain to the Bitcoin blockchain such that there‚Äôs only one optimal Stacks fork tied to Bitcoin at any given point. This is completely 1:1 with the Bitcoin Blockchain behavior, but on the tenure scale.\n[PreviousBitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)[NextStacking](https://docs.stacks.co/concepts/block-production/stacking)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1140,
      "title": "Bitcoin Reorgs | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/block-production/stacking",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/block-production/stacking#introduction)\n  * [Stacking vs Staking](https://docs.stacks.co/concepts/block-production/stacking#stacking-vs-staking)\n  * [Locking and Unlocking STX](https://docs.stacks.co/concepts/block-production/stacking#locking-and-unlocking-stx)\n  * [Stacking flow](https://docs.stacks.co/concepts/block-production/stacking#stacking-flow)\n  * [Stacking delegation flow](https://docs.stacks.co/concepts/block-production/stacking#stacking-delegation-flow)\n  * [Token holder eligibility](https://docs.stacks.co/concepts/block-production/stacking#token-holder-eligibility)\n  * [Stacking in the PoX consensus algorithm](https://docs.stacks.co/concepts/block-production/stacking#stacking-in-the-pox-consensus-algorithm)\n  * [Stacking and Signing](https://docs.stacks.co/concepts/block-production/stacking#stacking-and-signing)\n  * [Solo Stacking](https://docs.stacks.co/concepts/block-production/stacking#solo-stacking)\n  * [Delegated Stacking](https://docs.stacks.co/concepts/block-production/stacking#delegated-stacking)\n  * [How and Where to Stack](https://docs.stacks.co/concepts/block-production/stacking#how-and-where-to-stack)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Block Production](https://docs.stacks.co/concepts/block-production)\n\n\n# Stacking\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#introduction)\nIntroduction\nStacking rewards Stacks (STX) token holders with bitcoin for providing a valuable service to the network by locking up their tokens for a certain time and participating as consensus-critical signers. If you aren't familiar with the concept of signers in Stacks, be sure to check out the [Stackers and Signing section](https://docs.stacks.co/concepts/block-production/stackers-and-signing).\nThis document is presented as a conceptual overview of stacking and how it works. You can also view the [stacking guides](https://docs.stacks.co/guides-and-tutorials/stack-stx) to get a practical guide on the different ways you can stack and how to do it and a [deep dive into the contract](https://docs.stacks.co/example-contracts/stacking).\n`pox-4.clar` is the stacking contract. If you are interested in experimenting with proof of transfer use cases including state changes, solo stacking, and pool stacking, all the functions you‚Äôll need can be found at the deployed contract: \n  * Testnet: <https://explorer.hiro.so/txid/0xfba7f786fae1953fa56f4e56aeac053575fd48bf72360523366d739e96613da3?chain=testnet>\n  * Mainnet: <https://explorer.hiro.so/txid/0xc6d6e6ec82cabb2d7a9f4b85fcc298778d01186cabaee01685537aca390cdb46?chain=mainnet>\n\n\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#stacking-vs-staking)\nStacking vs Staking\nWhile stacking on the Stacks network can be conceptually similar to staking, Stacks is not a PoS network and there are a couple key differences.\nThere are two primary differences between stacking in Stacks and staking in PoS networks.\n#### \n[](https://docs.stacks.co/concepts/block-production/stacking#yield-generated-in-burnchain-token)\nYield generated in burnchain token\nIn staking, users lock one token and earn their yield in the same token. In stacking, users lock one token (STX) and earn a yield in the \"burnchain\" token (BTC), rather than the same token that was locked. In PoX, the yield comes from a finite, external source (Bitcoin deposits from Stacks miners). In PoS, the yield comes from the currency's issuance schedule itself, which means it is programmatically unlimited (but theoretically limited, we'll get into this a bit more below).\nThat's the first main difference. Staking involves a yield of the same token being generated by the issuance mechanism set by the core protocol, where stacking yield requires an input of an external, separate token.\nHow are these issuance rates set? In Ethereum, issuance rates are determined by network usage. Ethereum's goal is to create a deflationary money supply, so the issuance rate is determined depending on the usage of the network. In order for an Ethereum transaction to be considered valid, it must include a base fee that is burned during transaction execution. The [issuance rate is algorithmically determined](https://ethereum.org/en/roadmap/merge/issuance/#post-merge) block-by-block depending on how much ETH is being burned by these base fees plus normal gas fees.\nStacking doesn't have any of this complex functionality, since it does not generate a yield of the same token (and therefore doesn't need to issue new tokens, but rather transfer existing tokens from the base network) and it does not need to maintain an issuance rate. We are speaking here of the yield specifically, Stacks does have an issuance rate and does generate new STX tokens, but this process is completely separate from stacking and the yield generated from it.\nThe Bitcoin yield that stackers earn is determined by a combination of the Bitcoin being committed by miners and the number of STX tokens that are locked up in the network.\n#### \n[](https://docs.stacks.co/concepts/block-production/stacking#no-slashing)\nNo slashing\nAlthough stackers do fulfill a consensus critical role in Stacks by serving as signers, there is no concept of slashing in PoX (Proof of Transfer).\nRather, if stackers do not perform their duties as signers, they simply cannot unlock their STX tokens and will not receive their BTC rewards.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FblKUFVk62wEBT65ysCTj%252Fimage.png%3Falt%3Dmedia%26token%3D625e0db0-4c0e-4d0d-b50a-670cada0e3a7&width=768&dpr=4&quality=100&sign=356a28ab&sv=2)\nStacking is a built-in action, required by the \"proof-of-transfer\" (PoX) mechanism. The PoX mechanism is executed by every miner on the Stacks network.\nStacking functionality is implemented as a smart contract, using Clarity. Read more about [the contract](https://docs.stacks.co/example-contracts/stacking).\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#locking-and-unlocking-stx)\nLocking and Unlocking STX\nOne important thing to keep in mind is that when we speak of STX tokens being \"locked\", no transfer of STX tokens is occuring. Locking STX tokens is non-custodial, and STX tokens remain in your wallet. When you initiate a stacking transaction (described below) those tokens are locked and unspendable at the protocol level, but they do not leave the stacker's wallet.\nAt the end of the lock period, they will be automatically unlocked (spendable at the protocol level) but this occurs implicitly, there is no direct transaction that unlocks them.\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#stacking-flow)\nStacking flow\nThe Stacking mechanism can be presented as a flow of actions:\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252F4AIVIQDnJOirFtDzzEKR%252Fimage.png%3Falt%3Dmedia%26token%3D9ecb1263-fdf1-4c04-b88e-a4c582f56c5b&width=768&dpr=4&quality=100&sign=a634633a&sv=2)\n  1. Make API calls to get details about the upcoming reward cycle\n  2. For a specific Stacks account, confirm eligibility\n  3. Confirm the BTC reward address and the lockup duration\n  4. The transaction is broadcasted and the STX tokens are locked. This needs to happen before the prepare phase of the next reward cycle, the last 100 Bitcoin blocks of the ongoing reward phase\n  5. The Stacking mechanism executes reward cycles and sends out rewards to the set BTC reward address\n  6. During the lockup period, details about unlocking timing, rewards and more can be obtained\n  7. Once the lockup period is passed, the tokens are released and accessible again\n  8. Display reward history, including details like earnings for previous reward cycles\n\n\nKeep in mind that the target duration for a reward cycles is ~2 weeks. This duration is based on the target block time of the Bitcoin network (10 minutes) and can be higher at times due to [confirmation time variances](https://www.blockchain.com/charts/median-confirmation-time) of the bitcoin network.\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#stacking-delegation-flow)\nStacking delegation flow\nThere are two main ways you can stack:\n  1. Solo stacking\n  2. Delegated stacking\n\n\nSolo stacking follows the flow outlined above, and is where stack your own STX tokens and run your own signer. In order to operate as a solo stacker, you need to have a minimum amount of STX tokens. This minimum is dynamic and can be found by viewing the [pox endpoint of the API](https://api.testnet.hiro.so/v2/pox) in the `min_threshold_ustx` field.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FhHZyfkXC7K1qIdsV5G6i%252Fimage.png%3Falt%3Dmedia%26token%3D77a99878-980a-4238-86c4-cc19bf5d44aa&width=768&dpr=4&quality=100&sign=98d044bb&sv=2)\nThe Stacking flow is different for delegation use cases:\n  * Before Stacking can be initiated for a token holder, the delegator needs to be granted permission to Stack on behalf of the account owner. The permission is restricted to the maximum amount the delegator is allowed to Stack. The maximum amount is not limited by the available funds and can be set much higher. An account can only be associated with one single delegator\n  * The account has to define the delegation relationship. They can optionally restrict the Bitcoin reward address that must be used for payouts, and the expiration burn block height for the permission, thus limiting the time a delegator has permission to Stack\n  * Delegators have to lock Stacks from different accounts (\"pooling phase\") until they reach the minimum amount of Stacks required to participate in Stacking\n  * Once a delegator locks enough STX tokens, they can finalize and commit their participation in the next reward cycle\n  * Certain delegation relationships may allow the STX holder to receive the payout directly from the miner (step 5/6)\n  * The termination of the delegation relationship can either happen automatically based on set expiration rules or by actively revoking delegation rights\n\n\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#token-holder-eligibility)\nToken holder eligibility\nStacks (STX) token holders don't automatically receive stacking rewards. Instead, they must:\n  * Commit to participation before a reward cycle begins\n  * Commit the minimum amount of STX tokens to secure a reward slot, or pool with others to reach the minimum\n  * Lock up STX tokens for a specified period\n  * Provide a [supported Bitcoin address](https://docs.stacks.co/example-contracts/stacking#supported-reward-address-types) to receive rewards\n  * Maintain their signer software (if they are operating a signer)\n\n\nThe following diagram describes how the minimum STX tokens per slot is determined.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FL5YaSPCJPCqiFW3MVzoe%252Fimage.png%3Falt%3Dmedia%26token%3D788688a1-ba40-40b8-bb1d-69f9451e0a5b&width=768&dpr=4&quality=100&sign=abf5b169&sv=2)\nToken holders have a variety of providers and tools to support their participation in Stacking. The Stacks website contains a [list of pools and stacking options](https://www.stacks.co/learn/stacking#startstacking).\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#stacking-in-the-pox-consensus-algorithm)\nStacking in the PoX consensus algorithm\nStacking is a built-in capability of PoX and occurs through a set of actions on the Stacks blockchain. The [full proof-of-transfer implementation details](https://github.com/stacks-network/stacks-blockchain/blob/develop/sip/sip-007-stacking-consensus.md) are in SIP-007. Below is a summary of the most relevant actions of the algorithm.\nNote that SIP-007 describes stacking before Nakamoto. While much of the functionality remains the same, stackers now have the additional responsibility of operating as signers as outlined in [SIP-021](https://github.com/stacksgov/sips/blob/feat/sip-021-nakamoto/sips/sip-021/sip-021-nakamoto.md).\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FUwhHVp7Uqbcx84nAIJNu%252Fimage.png%3Falt%3Dmedia%26token%3D24093ac6-bd70-4710-8618-c01b517aa386&width=768&dpr=4&quality=100&sign=cd8f0b3d&sv=2)\nStacking happens in reward cycles of 2100 Bitcoin blocks (roughly two weeks. Reward cycles are split up into two phases: the prepare phase and the reward phase.\nThe prepare phase lasts 100 Bitcoin blocks and is where the new stackers for the upcoming reward phase are selected by the PoX anchor block (see SIP-007 for details).\nBecause Stacks does not fork after the Nakamoto upgrade, the PoX anchor block is always known 100 Bitcoin blocks before the start of the next reward cycle. It is the last tenure-start block that precedes prepare phase.\nThe PoX anchor block identifies the next Stackers. They have 100 Bitcoin blocks to prepare for signing Stacks blocks. Within this amount of time, the new Stackers would complete a Distributed Key Generation round for signing blocks. The PoX contract will require Stackers to register their block-signing keys when they stack or delegate-stack STX, so the entire network knows enough information to validate their signatures on blocks.\nThis process is handled by [running a signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) and then subsequently [conducting stacking operations](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow) as that signer.\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#stacking-and-signing)\nStacking and Signing\nStacking and signing are two distinct actions, but they are both necessary in order to perform the other. Signers must stack their STX tokens, and you cannot stack STX without running a signer. However, there is some nuance here depending on whether you are solo stacking or delegating.\nThere are several possible scenarios that can take place. Let's go over them.\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#solo-stacking)\nSolo Stacking\nIf you are solo stacking, you have two options for signing.\n#### \n[](https://docs.stacks.co/concepts/block-production/stacking#run-your-own-signer)\nRun your own signer\nFirst, you can run your own signer by following the How to Run a Signer guide. This does require some technical chops and some resources for running a machine. It's all covered in the guide if this is the route you want to go down.\n#### \n[](https://docs.stacks.co/concepts/block-production/stacking#work-with-another-signer)\nWork with another signer\nIf you don't want to run your own signer, you can collaborate with another signer and pass their signature into your stacking transactions, Details on how to do this can be found in the [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx) guide.\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#delegated-stacking)\nDelegated Stacking\nIf you are delegating your STX to a pool operator, you don't need to worry about running a signer. Since you are only delegating your STX, but the pool operator is conducting the actual stacking transaction, the pool operator is responsible for running the signer.\nIf you are a pool operator, we have a [stacking guide](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool) specifically for you.\n### \n[](https://docs.stacks.co/concepts/block-production/stacking#how-and-where-to-stack)\nHow and Where to Stack\nThere are several options for stacking including solo stacking, participating in a pool, using an exchange, and liquid stacking.\nThe Stacks website has a [stacking page](https://www.stacks.co/learn/stacking) dedicated to all these different options.\nFor detailed instructions on how to stack, view the [Stack STX guides](https://docs.stacks.co/guides-and-tutorials/stack-stx).\nYou can view all sorts of Stacking data and statistics using tools in the ecosystem such as:\n  * [Signal21](https://app.signal21.io/)\n  * [Stacking Tracker](https://www.stacking-tracker.com/)\n  * [StakingRewards.com](https://www.stakingrewards.com/calculator?asset=stacks)\n  * [Stacking Calendar](https://stacking.tools/)\n\n\n  * [Signal21](https://app.signal21.io/)\n  * [Stacking Tracker](https://www.stacking-tracker.com/)\n  * [StakingRewards.com](https://www.stakingrewards.com/calculator?asset=stacks)\n  * [Stacking Calendar](https://stacking.tools/)\n\n\n[PreviousBitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)[NextTransactions](https://docs.stacks.co/concepts/transactions)\nLast updated 5 months ago\nWas this helpful?\n",
      "wordCount": 2442,
      "title": "Stacking | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/transactions",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Transactions\nTransactions are a key component of the Stacks chain and are the primary way users will interact with it. In this section, we'll cover how transactions work and give an introduction to post conditions, an additional security feature of Stacks that allows client-side developers to enforce certain conditions to protect users from interacting with malicious contracts.\n[PreviousStacking](https://docs.stacks.co/concepts/block-production/stacking)[NextHow Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 604,
      "title": "Transactions | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/transactions/transactions",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/transactions/transactions#introduction)\n  * [Lifecycle](https://docs.stacks.co/concepts/transactions/transactions#lifecycle)\n  * [Types](https://docs.stacks.co/concepts/transactions/transactions#types)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Transactions](https://docs.stacks.co/concepts/transactions)\n\n\n# How Transactions Work\n### \n[](https://docs.stacks.co/concepts/transactions/transactions#introduction)\nIntroduction\nTransactions are the fundamental unit of execution in the Stacks blockchain. Each transaction is originated from a Stacks account, and is retained in the Stacks blockchain history for eternity. This guide helps you understand Stacks transactions.\n### \n[](https://docs.stacks.co/concepts/transactions/transactions#lifecycle)\nLifecycle\nTransactions go through phases before being finally confirmed, and available for all, on the Stacks 2.0 network.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fa665JvWQik3PMXagDQCf%252Fimage.png%3Falt%3Dmedia%26token%3Dcc083250-d087-4ca8-95df-0882bbeb07ed&width=768&dpr=4&quality=100&sign=9224f236&sv=2)\n  * **Generate** : Transactions are assembled according to the encoding specification.\n  * **Validate and sign** : Transactions are validated to confirm they are well-formed. Required signatures are filled in.\n  * **Broadcast** : Transactions are sent to a node.\n  * **Register** : A miner receives transactions, verifies, and adds them to the [\"mempool,\"](https://academy.binance.com/en/glossary/mempool) a holding area for all the pending transactions.\n  * **Process** : Miners review the mempool and select transactions for the next block to be mined. Depending on the transaction type, different actions can happen during this step. For example, post-conditions could be verified for a token transfer, smart-contract defined tokens could be minted, or an attempt to call an existing smart contract method could be made.\n  * **Confirm** : Miners successfully propose blocks with a set of transactions. The transactions inside are successfully propagated to the network when the stackers approve them.\n\n\nA transaction can have one of three states once it is registered: `pending`, `success`, or `failed`.\n### \n[](https://docs.stacks.co/concepts/transactions/transactions#types)\nTypes\nStacks supports a set of different transaction types:\n**Type**\n**Value**\n**Description**\nTenure change\n`TenureChange`\nA tenure change is an event in the existing Stacks blockchain when one miner assumes responsibility for creating new stacks blocks from another miner. A change in tenure occurs when a Stacks block is discovered from a cryptographic sortition. Carried out by stackers.\nTenure change block found\n`TenureChange-BlockFound`\nA `TenureChange-BlockFound` transaction is induced by a winning sortition. This causes the new miner to start producing blocks, and stops the current miner from producing more blocks.\nTenure change extend\n`TenureChange-Extend`\nA `TenureChange-Extend`, which is induced by Stackers, resets the current tenure's ongoing execution budget, thereby allowing the miner to continue producing blocks.\nToken transfer\n`token_transfer`\nAsset transfer from a sender to a recipient\nContract deploy\n`smart_contract`\nContract instantiation\nContract call\n`contract_call`\nContract call for a public, non read-only function\nA sample of each transaction type can be found in the [Stacks Blockchain API response definition for transactions](https://docs.hiro.so/stacks/api/transactions/get-transaction).\nRead-only contract call calls do **not** require transactions. Read more about it in the network guide.\n[PreviousTransactions](https://docs.stacks.co/concepts/transactions)[NextPost Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 956,
      "title": "How Transactions Work | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/transactions/post-conditions",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Transactions](https://docs.stacks.co/concepts/transactions)\n\n\n# Post Conditions\nPost conditions are one of the most interesting and unique aspects of Stacks.\nFrom the beginning, safety and security has been at the heart of the Stacks ethos and formed the foundation of architecture decisions when building it.\nLike Clarity, Stacks' smart contract programming language, post conditions were specifically built and design to solve the problem of user safety when interacting with blockchain applications.\nSo what are they and how do they work?\n### \n[](https://docs.stacks.co/concepts/transactions/post-conditions#how-post-conditions-work)\nHow Post Conditions Work\nPost conditions are conditions that are set on the client side to ensure that a smart contract does not perform any unexpected behavior.\nLet's look at an example to make this more concrete.\nLet's say a user is on an NFT marketplace and is expecting to purchase an NFT for 100 STX. Using post conditions, the developer who is building the frontend of the application can add in post conditions to ensure that this is in fact what happens when the user initiates the transaction.\nIf it does not, the transaction will abort and the user won't be out anything except the transaction fee.\nIt's important to note that post conditions do not live in smart contracts. They are designed to be an extra layer of security on top of smart contracts.\nThe problem they help address is a user interacting with a malicious smart contract that attempts to do something the user does not expect.\nBut rather than simply being a UI feature of a wallet, these post conditions are built into the Stacks blockchain itself and are enforced at the protocol level.\nWhen you use a Stacks wallet like the Hiro web wallet and initiate a transaction, the wallet will display the post conditions set by the developer and tell the user exactly what is going to happen. If the action taken by the smart contract matches, the transaction goes through fine, otherwise it aborts.\nHere's what that looks like:\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FyfqdD9pAvOfnRJQlrJZp%252Fimage.png%3Falt%3Dmedia%26token%3D3b6b199a-8eef-4b68-a420-cbd9ad53b9b8&width=768&dpr=4&quality=100&sign=3a5a22e2&sv=2)\nIn this example, if the smart contract does not transfer one fabulous-frog NFT and and take 50 STX from the user, the transaction will abort.\nYou can learn more about how post conditions work in [SIP-005](https://github.com/stacksgov/sips/blob/main/sips/sip-005/sip-005-blocks-and-transactions.md#transaction-post-conditions) and how to utilize them in your applications in Hiro's excellent [post conditions tutorial](https://docs.hiro.so/stacks/stacks.js/guides/post-conditions).\n[PreviousHow Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)[NextClarity](https://docs.stacks.co/concepts/clarity)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 923,
      "title": "Post Conditions | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/clarity",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Clarity\nClarity is the smart contract language that Stacks uses. It has been built from the ground up to make it easier for developers to write safe, secure smart contracts. Clarity has several unique features that make it an ideal choice for writing smart contracts. We'll go over an overview of Clarity here, and highly recommend checking out the [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course) guide to dig in and get started learning Clarity.\nClarity is a **decidable** smart contract language that optimizes for predictability and security, designed for the Stacks blockchain. Smart contracts allow developers to encode essential business logic on a blockchain.\nThe design decisions behind Clarity were based heavily on taking lessons learned in common Solidity exploits and creating a language that has been purpose-built for safety and security in mind.\nThese docs serve primarily as a reference for the functions and keywords that you can use in Clarity.\nIn order to learn Clarity, we recommend diving into the [Clarity of Mind](https://book.clarity-lang.org/), an online book to teach you everything you need to know to build robust smart contracts, or joining a [Clarity Camp](https://clarity-lang.org/universe#camp), the cohort-based immersive Clarity experience.\n### \n[](https://docs.stacks.co/concepts/clarity#what-makes-clarity-different)\nWhat makes Clarity different\nThe following section is an excerpt from the excellent book, [Clarity of Mind](https://book.clarity-lang.org/ch00-00-introduction.html):\nThe number of smart contract languages grows by the year. Choosing a first language can be challenging, especially for a beginner. The choice is largely dictated by the ecosystem you are interested in, although some languages are applicable to more than just one platform. Each language has its own upsides and downsides and it is out of the scope of this book to look at all of them. Instead, we will focus on what sets Clarity apart and why it is a prime choice if you require the utmost security and transparency.\nOne of the core precepts of Clarity is that it is secure by design. The design process was guided by examining common pitfalls, mistakes, and vulnerabilities in the field of smart contract engineering as a whole. There are countless real world examples of where developer failure led to the loss or theft of vast amounts of tokens. To name two big ones: an issue that has become known as the Parity bug led to the irreparable loss of millions of dollars worth of Ethereum. Second, the hacking of The DAO (a \"Decentralized Autonomous Organization\") caused financial damage so great that the Ethereum Foundation decided to issue a contentious hard fork that undid the theft. These and many other mistakes could have been prevented in the design of the language itself.\n#### \n[](https://docs.stacks.co/concepts/clarity#clarity-is-interpreted-not-compiled)\nClarity is interpreted, not compiled\nClarity code is interpreted and committed to the chain exactly as written. Solidity and other languages are compiled to byte-code before it is submitted to the chain. The danger of compiled smart contract languages is two-fold: first, a compiler adds a layer of complexity. A bug in the compiler may lead to different byte-code than was intended and thus carries the risk of introducing a vulnerability. Second, byte-code is not human-readable, which makes it very hard to verify what the smart contract is actually doing. Ask yourself, would you sign a contract you cannot read? If your answer is no, then why should it be any different for smart contracts? With Clarity, what you see is what you get.\n#### \n[](https://docs.stacks.co/concepts/clarity#clarity-is-decidable)\nClarity is decidable\nA decidable language has the property that from the code itself, you can know with certainty what the program will do. This avoids issues like the halting problem. With Clarity you know for sure that given any input, the program will halt in a finite number of steps. In simple terms: it is guaranteed that program execution will end. Decidability also allows for complete static analysis of the call graph so you get an accurate picture of the exact cost before execution. There is no way for a Clarity call to \"run out of gas\" in the middle of the call. We explore this idea more, along with a discussion on Turing completeness, in the security deep dive on decidability.\n#### \n[](https://docs.stacks.co/concepts/clarity#clarity-does-not-permit-reentrancy)\nClarity does not permit reentrancy\nReentrancy is a situation where one smart contract calls into another, which then calls back into the first contract‚Äîthe call \"re-enters\" the same logic. It may allow an attacker to trigger multiple token withdrawals before the contract has had a chance to update its internal balance sheet. Clarity's design considers reentrancy an anti-feature and disallows it on the language level.\n#### \n[](https://docs.stacks.co/concepts/clarity#clarity-guards-against-overflow-and-underflows)\nClarity guards against overflow and underflows\nOverflows and underflows happen when a calculation results in a number that is either too large or too small to be stored, respectively. These events throw smart contracts into disarray and may intentionally be triggered in poorly written contracts by attackers. Usually this leads to a situation where the contract is either frozen or drained of tokens. Overflows and underflows of any kind automatically cause a transaction to be aborted in Clarity.\n#### \n[](https://docs.stacks.co/concepts/clarity#support-for-custom-tokens-is-built-in)\nSupport for custom tokens is built-in\nIssuance of custom fungible and non-fungible tokens is a popular use-case for smart contracts. Custom token features are built into the Clarity language. Developers do not need to worry about creating an internal balance sheet, managing supply, and emitting token events. Creating custom tokens is covered in depth in later chapters.\n#### \n[](https://docs.stacks.co/concepts/clarity#on-stacks-transactions-are-secured-by-post-conditions)\nOn Stacks, transactions are secured by post conditions\nIn order to further safeguard user tokens, post conditions can be attached to transactions to assert the chain state has changed in a certain way once the transaction has completed. For example, a user calling into a smart contract may attach a post condition that states that after the call completes, exactly 500 STX should have been transferred from one address to another. If the post condition check fails, then the entire transaction is reverted. Since custom token support is built right into Clarity, post conditions can also be used to guard any other token in the same way.\n#### \n[](https://docs.stacks.co/concepts/clarity#returned-responses-cannot-be-left-unchecked)\nReturned responses cannot be left unchecked\nPublic contract calls must return a so-called response that indicates success or failure. Any contract that calls another contract is required to properly handle the response. Clarity contracts that fail to do so are invalid and cannot be deployed on the network. Other languages like Solidity permit the use of low level calls without requiring the return value to be checked. For example, a token transfer can fail silently if the developer forgets to check the result. In Clarity it is not possible to ignore errors, although that obviously does prevent buggy error handling on behalf of the developer. Responses and error handling are covered extensively in the chapters on functions and control flow.\n#### \n[](https://docs.stacks.co/concepts/clarity#composition-over-inheritance)\nComposition over inheritance\nClarity adopts a composition over inheritance. It means that Clarity smart contracts do not inherit from one another like you see in languages like Solidity. Developers instead define traits which are then implemented by different smart contracts. It allows contracts to conform to different interfaces with greater flexibility. There is no need to worry about complex class trees and contracts with implicit inherited behavior.\n#### \n[](https://docs.stacks.co/concepts/clarity#access-to-the-base-chain-bitcoin)\nAccess to the base chain: Bitcoin\nClarity smart contracts can read the state of the Bitcoin base chain. It means you can use Bitcoin transactions as a trigger in your smart contracts! Clarity also features a number of built-in functions to verify secp256k1 signatures and recover keys.\n[PreviousPost Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)[NextOverview](https://docs.stacks.co/concepts/clarity/overview)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1781,
      "title": "Clarity | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/clarity/overview",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Clarity](https://docs.stacks.co/concepts/clarity)\n\n\n# Overview\nClarity is a **decidable** smart contract language that optimizes for predictability and security, designed for the Stacks blockchain. Smart contracts allow developers to encode essential business logic on a blockchain.\nThe design decisions behind Clarity were based heavily on taking lessons learned in common Solidity exploits and creating a language that has been purpose-built for safety and security in mind.\nThese docs serve primarily as a reference for the functions and keywords that you can use in Clarity.\nIn order to learn Clarity, we recommend diving into the [Clarity of Mind](https://book.clarity-lang.org/), an online book to teach you everything you need to know to build robust smart contracts, or joining a [Clarity Camp](https://clarity-lang.org/universe#camp), the cohort-based immersive Clarity experience.\n### \n[](https://docs.stacks.co/concepts/clarity/overview#what-makes-clarity-different)\nWhat makes Clarity different\nThe following section is an excerpt from the excellent book, [Clarity of Mind](https://book.clarity-lang.org/ch00-00-introduction.html):\nThe number of smart contract languages grows by the year. Choosing a first language can be challenging, especially for a beginner. The choice is largely dictated by the ecosystem you are interested in, although some languages are applicable to more than just one platform. Each language has its own upsides and downsides and it is out of the scope of this book to look at all of them. Instead, we will focus on what sets Clarity apart and why it is a prime choice if you require the utmost security and transparency.\nOne of the core precepts of Clarity is that it is secure by design. The design process was guided by examining common pitfalls, mistakes, and vulnerabilities in the field of smart contract engineering as a whole. There are countless real world examples of where developer failure led to the loss or theft of vast amounts of tokens. To name two big ones: an issue that has become known as the Parity bug led to the irreparable loss of millions of dollars worth of Ethereum. Second, the hacking of The DAO (a \"Decentralized Autonomous Organization\") caused financial damage so great that the Ethereum Foundation decided to issue a contentious hard fork that undid the theft. These and many other mistakes could have been prevented in the design of the language itself.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-is-interpreted-not-compiled)\nClarity is interpreted, not compiled\nClarity code is interpreted and committed to the chain exactly as written. Solidity and other languages are compiled to byte-code before it is submitted to the chain. The danger of compiled smart contract languages is two-fold: first, a compiler adds a layer of complexity. A bug in the compiler may lead to different byte-code than was intended and thus carries the risk of introducing a vulnerability. Second, byte-code is not human-readable, which makes it very hard to verify what the smart contract is actually doing. Ask yourself, would you sign a contract you cannot read? If your answer is no, then why should it be any different for smart contracts? With Clarity, what you see is what you get.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-is-decidable)\nClarity is decidable\nA decidable language has the property that from the code itself, you can know with certainty what the program will do. This avoids issues like the halting problem. With Clarity you know for sure that given any input, the program will halt in a finite number of steps. In simple terms: it is guaranteed that program execution will end. Decidability also allows for complete static analysis of the call graph so you get an accurate picture of the exact cost before execution. There is no way for a Clarity call to \"run out of gas\" in the middle of the call. We explore this idea more, along with a discussion on Turing completeness, in the security deep dive on decidability.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-does-not-permit-reentrancy)\nClarity does not permit reentrancy\nReentrancy is a situation where one smart contract calls into another, which then calls back into the first contract‚Äîthe call \"re-enters\" the same logic. It may allow an attacker to trigger multiple token withdrawals before the contract has had a chance to update its internal balance sheet. Clarity's design considers reentrancy an anti-feature and disallows it on the language level.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-guards-against-overflow-and-underflows)\nClarity guards against overflow and underflows\nOverflows and underflows happen when a calculation results in a number that is either too large or too small to be stored, respectively. These events throw smart contracts into disarray and may intentionally be triggered in poorly written contracts by attackers. Usually this leads to a situation where the contract is either frozen or drained of tokens. Overflows and underflows of any kind automatically cause a transaction to be aborted in Clarity.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#support-for-custom-tokens-is-built-in)\nSupport for custom tokens is built-in\nIssuance of custom fungible and non-fungible tokens is a popular use-case for smart contracts. Custom token features are built into the Clarity language. Developers do not need to worry about creating an internal balance sheet, managing supply, and emitting token events. Creating custom tokens is covered in depth in later chapters.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#on-stacks-transactions-are-secured-by-post-conditions)\nOn Stacks, transactions are secured by post conditions\nIn order to further safeguard user tokens, post conditions can be attached to transactions to assert the chain state has changed in a certain way once the transaction has completed. For example, a user calling into a smart contract may attach a post condition that states that after the call completes, exactly 500 STX should have been transferred from one address to another. If the post condition check fails, then the entire transaction is reverted. Since custom token support is built right into Clarity, post conditions can also be used to guard any other token in the same way.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#returned-responses-cannot-be-left-unchecked)\nReturned responses cannot be left unchecked\nPublic contract calls must return a so-called response that indicates success or failure. Any contract that calls another contract is required to properly handle the response. Clarity contracts that fail to do so are invalid and cannot be deployed on the network. Other languages like Solidity permit the use of low level calls without requiring the return value to be checked. For example, a token transfer can fail silently if the developer forgets to check the result. In Clarity it is not possible to ignore errors, although that obviously does prevent buggy error handling on behalf of the developer. Responses and error handling are covered extensively in the chapters on functions and control flow.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#composition-over-inheritance)\nComposition over inheritance\nClarity adopts a composition over inheritance. It means that Clarity smart contracts do not inherit from one another like you see in languages like Solidity. Developers instead define traits which are then implemented by different smart contracts. It allows contracts to conform to different interfaces with greater flexibility. There is no need to worry about complex class trees and contracts with implicit inherited behavior.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#access-to-the-base-chain-bitcoin)\nAccess to the base chain: Bitcoin\nClarity smart contracts can read the state of the Bitcoin base chain. It means you can use Bitcoin transactions as a trigger in your smart contracts! Clarity also features a number of built-in functions to verify secp256k1 signatures and recover keys.\n[PreviousClarity](https://docs.stacks.co/concepts/clarity)[NextDecidability](https://docs.stacks.co/concepts/clarity/decidability)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1712,
      "title": "Overview | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/clarity/decidability",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [What does it mean for a language to be Non-Turing Complete or Decidable?](https://docs.stacks.co/concepts/clarity/decidability#what-does-it-mean-for-a-language-to-be-non-turing-complete-or-decidable)\n  * [Mindset of a Smart Contract Developer](https://docs.stacks.co/concepts/clarity/decidability#mindset-of-a-smart-contract-developer)\n  * [Should smart contracts be Turing complete?](https://docs.stacks.co/concepts/clarity/decidability#should-smart-contracts-be-turing-complete)\n  * [Advantages of Decidability in Smart Contracts](https://docs.stacks.co/concepts/clarity/decidability#advantages-of-decidability-in-smart-contracts)\n  * [Intuition on Uncomputability](https://docs.stacks.co/concepts/clarity/decidability#intuition-on-uncomputability)\n  * [Raymond Smullyan‚Äôs Intuition on Undecidability](https://docs.stacks.co/concepts/clarity/decidability#raymond-smullyans-intuition-on-undecidability)\n  * [Reference](https://docs.stacks.co/concepts/clarity/decidability#reference)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Clarity](https://docs.stacks.co/concepts/clarity)\n\n\n# Decidability\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#what-does-it-mean-for-a-language-to-be-non-turing-complete-or-decidable)\nWhat does it mean for a language to be Non-Turing Complete or Decidable?\nNon-Turing complete and decidable are two terms you will often hear about the security advantages of Clarity, but what do they mean?\nWhile related, they are not quite interchangeable, since there are a few differences.\n#### \n[](https://docs.stacks.co/concepts/clarity/decidability#non-turing-complete)\nNon-Turing Complete\nA system or language is non-Turing complete if it cannot simulate a Turing machine, which is an abstract model of computation. Non-Turing complete systems have limited computational power compared to Turing complete systems. A Turing-complete system or language can simulate any Turing machine. Examples of non-Turing complete systems include finite state machines and some domain-specific languages (like Clarity).\nNon-Turing complete languages typically cannot express all possible algorithms. Specifically, some problems whose solutions require unbounded loops or recursion cannot be expressed using non-Turing complete languages. This last property is especially important in the context of Clarity, as it makes it so that features like unbounded loops and reentrancy are disallowed at a language level.\n#### \n[](https://docs.stacks.co/concepts/clarity/decidability#decidable)\nDecidable\nA problem is decidable if there exists an algorithm that can always determine whether a given input has a particular property or not in a finite amount of time. In other words, a decidable problem can be solved by a Turing machine that is guaranteed to halt for all input instances. Decidability is a property of problems, whereas Turing completeness is a property of languages or computational systems.\nThe fact that Clarity is decidable means that developers (and tooling) can more easily reason about and predict with certainty the behavior of Clarity contracts, regardless of the input.\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#mindset-of-a-smart-contract-developer)\nMindset of a Smart Contract Developer\nBefore we dive into specifics, let's first set the context and viewpoint we should hold as smart contract developers who want to write secure code.\nAs you explore further into the security properties of Solidity and Clarity, you'll see that there are always mitigation steps that _can_ be taken by developers to help address some of these security issues.\nThe main issue, with this line of thinking, is it increases the odds of human error in smart contract security. If we can preserve functionality while mitigating the chance of human error as much as possible, we should do so.\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#should-smart-contracts-be-turing-complete)\nShould smart contracts be Turing complete?\nWe will discover new applications for smart contracts. These applications will go beyond current smart contracts, traditional contracts, and may even open new economic opportunities. Given these possibilities, how should we build our smart contracts? What characteristics should our smart contract languages have?\nIt is good practice to separate data from programs. Should smart contracts be data, or programs, or something in between? If smart contracts are data, then should the programs that execute-them be Turing complete or perhaps less powerful? If smart contracts are programs, then what language should smart contracts be written in? What characteristics should this programming language have?\nThe Church-Turing thesis is the hypothesis that all formal notions of computation are captured by Turing machines or modern computers. A programming language is Turing complete if it captures all formal notions of computation. Many programming languages are Turing complete. For example, Python, C++, Rust, Java, Lisp, and Solidity are all Turing complete.\nConsider a program and its input. In the worst case, determining this program‚Äôs output is impossible. Validating a program, on a particular input, is done by generating a proof-of-correctness.\nProofs-of-correctness are logical proofs that can be mechanically validated. Finding proofs-of-correctness for programs and their input is undecidable. Kurt G\\‚Äùodel showed there are undecidability logical statements.\nThis indicates all programs in Turing complete languages cannot be validated in the worst case. Thus, Turing complete smart contract languages must allow contracts that cannot be validated.\nAlonzo Church and Alan Turing showed there are problems that are uncomputable. Uncomputable problems cannot be solved by any Turing machine. Hence, assuming the Church-Turing thesis, these uncomputable problems cannot be solved by any computer.\nWe'll explore this idea further later in this section.\nTuring complete languages are very expressive. In fact, assuming the Church-Turing thesis, Turing complete languages are as expressive as possible in some sense.\nIs there a trade-off? What types of problems can occur with uncomputable problems and programs whose validity may be undecidable?\nAs smart contracts subsume parts of contract law, consider the large body of laws and regulations for tax law.\nFor instance, US tax law and regulations take up several million words. International tax law and regulations pushes these numbers much higher.\nAre these laws and regulations programs or are they data? If tax law were to be written in a Turing complete language, then the law may codify uncomputable problems. It is an accountant‚Äôs nightmare for their advice to be undecidable.\nClarity is non-Turing complete, yet very expressive. This makes it so that Clarity is decidable and cannot encode uncomputable problems. There are discussions and papers on smart contract languages such as Solidity that propose subsets of Solidity that are non-Turing complete. These subsets are decidable and cannot encode uncomputable problems. However, there is no consensus on which subsets to work with and they are not widely used.\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#advantages-of-decidability-in-smart-contracts)\nAdvantages of Decidability in Smart Contracts\nWhy is decidability important in the context of smart contracts?\nFirst, it is not possible for a Clarity call to run out of gas in the middle of a call. Because of its decidability, it is possible to get a complete static analysis of the call graph to get an accurate picture of the cost before execution.\nSolidity allows for unbounded loops, recursion, and dynamic function calls, which makes it difficult to accurately predict the execution cost or gas usage beforehand. As a result, Solidity contracts may run out of gas during execution if the gas limit is not set appropriately or if the contract encounters a scenario with unexpectedly high computational requirements.\nOne practical example is the issue of a specific kind of DoS attack in Solidity, where the contract is rendered inoperable because of unbounded execution constraints. An example of this is the GovernMental attack, where a mapping that needed to be deleted for a payout became so large that working with it exceeded the block gas limit.\nThere are a few different properties of Clarity's language design that prevents such DoS attacks.\nThe reason that the analysis system can accurately estimate the execution cost is because certain functionality is intentionally limited in Clarity.\nFor example, there is no recursion in Clarity, so we can't infinitely call into a function over and over.\nData types in Clarity are also restricted. Any data types that don't require a hard length limit are not iterable.\nMaps and tuples, for example, do not require you to enter a maximum length when defining them, but you also can't iterate over them.\nLists, on the other hand, which are iterable, do require the developer to define an upper limit when defining them. This is a large part of what allows an accurate static analysis of Clarity contracts.\nSo how would we implement a mapping of an undefined size in Clarity? We wouldn't, because it's an anti-pattern in smart contract design.\nInstead, Clarity forces us to think of a better solution to our problem. For example, implementing a way for users to handle mapping/list element operations themselves, instead of mass operations handled at the contract level.\nIf you [analyze the GovernMental attack](https://hackernoon.com/smart-contract-attacks-part-2-ponzi-games-gone-wrong-d5a8b1a98dd8#h-attack-2-call-stack-attack), you'll see that it took advantage of multiple security issues, all of which are mitigated in Clarity. You'll also see that a fix was added to make it economically infeasible to carry out this type of attack again.\nThis brings up another crucial point when setting appropriate mental models for smart contracts and blockchain systems: complexity means more potential bugs, which means adding more complexity to address those bugs.\nWhen this happens over and over again, we are trapping ourselves into creating an evermore complex system. Addressing these issues at the language level prevents this ever-growing complexity.\nFor a deep dive into how Clarity was designed, check out [SIP-002](https://github.com/stacksgov/sips/blob/main/sips/sip-002/sip-002-smart-contract-language.md).\n:::note You can view some more common smart contract vulnerabilities and how they are mitigated in [this article](https://stacks.org/bringing-clarity-to-8-dangerous-smart-contract-vulnerabilities/). :::\nThis has second-order effects as well when we look at security testing and auditing. One of the common tools for testing smart contracts is formal verification, where we mathematically prove that certain properties of smart contracts will or will not remain true in all cases.\nThis can lead to the path explosion problem, where there are so many paths available that formal verification becomes incredibly difficult. This problem is mitigated in Clarity, since there is not chance of a program encountering an unbounded loop.\nThis leads us to a more general mental model for thinking about decidability as smart contracts continue to become a larger part of our economy. Remember that the goal with blockchain systems is to create an open, transparent, fair financial system.\nThis means that smart contracts will be responsible for managing large amounts of wealth for ever-growing amounts of people. As smart contracts encompass more financial structures, their complexity and usage will grow.\nComplexity is the enemy of security. The more complex a system is, the more danger there is in creating uncomputable problems when there are no hard restrictions on the execution steps that can be taken.\nThis is deadly in financial infrastructure that is not only open and transparent, but immutable. Let's explore this idea of uncomputability a bit more.\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#intuition-on-uncomputability)\nIntuition on Uncomputability\nIntuitively, uncomputability is an algorithmic view of undecidability. Uncomputability has the same foundations as undecidability. Undecidable questions are framed as logic statements or statements about integers. Of course, programs are logic statements and may even be viewed as integers, though we view programs differently. We often view programs with additional details of memory models, implementation details, and execution semantics.\nThe [Halting problem](https://en.wikipedia.org/wiki/Halting_problem): As an example, given any program `P` and any finite input `I` for `P`, then the Halting Problem is the challenge of determining if `P` halts on input `I`.\nAlonzo Church and Alan Turing showed the Halting Problem is unsolvable.\nChristopher Strachey gave an intuitive proof-by-contradiction showing the Halting problem is uncomputable. This is set up by supposing there is a program `H` that can solve the Halting problem for any program `P`. `H(P)` returns true if `P` halts and false otherwise. Then build a program `P` that does not halt when `H(P)` is true, giving a contradiction. Similarly, this program `P` halts when `H(P)` is false, also a contradiction.\nUncomputable problems are problems that cannot be solved by an algorithm or a computer, no matter how much time or resources are provided. These problems exist in various forms, and one such example is the Post correspondence problem, which was proposed by Emil Post.\nThe Post correspondence problem can be described using pairs of strings and an integer. Imagine you have n pairs of strings, called P. These strings are made up of characters from a character set, such as UTF-8 or any other alphabet with at least two symbols. The pairs of strings look like this:\n`P = { (x1, y1), (x2, y2), ‚Ä¶ , (xn, yn) }`\nNow, you also have an integer `m` that is greater than 0. The Post correspondence problem asks whether there is a way to create a list of indices `(i1, i2, ‚Ä¶, im)` using the given pairs of strings. You can repeat these indices if needed, with one condition: when you combine the `x` strings from the pairs using the indices, the resulting string must be equal to the combined `y` strings from the same pairs using the same indices. In other words:\n`x(i1) x(i2) ‚Ä¶ x(im) = y(i1) y(i2) ‚Ä¶ y(im)`\nWhen developers try to solve the Post correspondence problem, they often attempt to use indeterminate loops (loops without a fixed number of iterations) rather than recursion. This is because the problem seems to require searching through different combinations of indices until a solution is found or it's proven that no solution exists.\nIn simple terms, the Post correspondence problem involves trying to find a sequence of indices that, when applied to the given pairs of strings, produces equal concatenated strings from both the `x` and `y` components. This problem is considered uncomputable because there is no general algorithm that can solve it for all possible input pairs of strings and integers.\nIt turns out, many questions about how programs behave are uncomputable. This has a number of consequences for smart contracts that are built in Turing complete languages, many of which we are not aware of yet but will surely become aware of as we encounter them in the future.\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#raymond-smullyans-intuition-on-undecidability)\nRaymond Smullyan‚Äôs Intuition on Undecidability\nThis is a part of Raymond Smullyan‚Äôs approach to understanding undecidability in propositional logic. It uses meta-information to show something must be true, though it cannot be proved in propositional logic. This is based on a paradox.\nIn propositional logic, a logical statement is undecidable if we cannot prove it true or false. Given a propositional logic statement S, a proof is a sequence of formal logical deductions, starting from basic facts and ending by indicating if S is true or false.\nSmullyan‚Äôs starts with an island of Knights and Knaves. Knights always tell the truth. Knaves always lie. We cannot distinguish islanders otherwise.\nThere is a great logician named Ray. Whatever Ray proves is true. This is just like a good theorem prover.\nAn islander Jack proclaims: ‚ÄúYou cannot prove I am a Knight‚Äù to the logician Ray.\nThe next reasoning is based on meta-knowledge of this situation. This meta-knowledge shows that some problems are undecidable in propositional logic.\nIf Ray can prove Jack is a Knight, then Jack must be a Knave, since Jack must have lied. That is because Ray proved Jack is a Knight. Since Jack is a Knave, Ray‚Äôs proof contradicts the assumption that Ray only proves true things. So, this case cannot hold.\nIf Ray cannot prove Jack is a Knight, then Jack must be a Knight, since Jack stated the truth. But Ray cannot prove the fact that Jack is a Knight.\nIn the context of smart contracts and programming languages, Turing complete languages like Solidity come with the possibility of undecidable problems.\nThese undecidable problems are similar to the paradox presented in the Knights and Knaves story, where it's impossible to determine whether Jack is a Knight or a Knave based on the given information.\nIn the Knights and Knaves story, Ray is analogous to a theorem prover or a smart contract in a Turing complete language. Ray is faced with a statement that is undecidable within the constraints of the system (Knights and Knaves), which leads to a paradox.\nSimilarly, a Turing complete smart contract language might face undecidable problems that can't be resolved, leading to unexpected behavior, vulnerabilities, or resource consumption issues (like running out of gas in Ethereum).\nOn the other hand, non-Turing complete languages like Clarity are designed to avoid undecidable problems by limiting their expressiveness.\nIn the context of the Knights and Knaves story, a non-Turing complete language would simply not allow Jack to make a statement that could lead to a paradox. By disallowing certain features like unbounded loops and recursion, non-Turing complete languages can provide stronger guarantees about the behavior and resource usage of smart contracts.\nThis predictability is desirable in many cases, especially when dealing with high-value transactions or critical systems.\n### \n[](https://docs.stacks.co/concepts/clarity/decidability#reference)\nReference\nThe Mathematics of Various Entertaining Subjects: Research in Recreational Math Illustrated Edition, Jennifer Beineke (Editor), Jason Rosenhouse (Editor), Raymond M. Smullyan (Foreword), Princeton University Press, 2016.\n[PreviousOverview](https://docs.stacks.co/concepts/clarity/overview)[NextsBTC](https://docs.stacks.co/concepts/sbtc)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 3200,
      "title": "Decidability | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction to sBTC](https://docs.stacks.co/concepts/sbtc#introduction-to-sbtc)\n  * [Key Concepts](https://docs.stacks.co/concepts/sbtc#key-concepts)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# sBTC\n### \n[](https://docs.stacks.co/concepts/sbtc#introduction-to-sbtc)\nIntroduction to sBTC\nsBTC is a SIP-010 token on the Stacks blockchain that represents Bitcoin (BTC) in a 1:1 ratio. It enables Bitcoin holders to participate in DeFi applications and other smart contract functionalities while maintaining a peg to the underlying Bitcoin.\n#### \n[](https://docs.stacks.co/concepts/sbtc#purpose)\nPurpose\nThe primary purpose of sBTC is to bridge Bitcoin to DeFi via the Stacks blockchain, providing Bitcoin holders with access to the rich functionality of smart contracts without sacrificing the security and value of their BTC holdings.\n#### \n[](https://docs.stacks.co/concepts/sbtc#key-benefits)\nKey Benefits\n  1. **Bitcoin Compatibility** : Allows Bitcoin holders to participate in the Stacks ecosystem without selling their BTC.\n  2. **Quick Conversions** : Facilitates rapid movement between BTC and sBTC (within 3 Bitcoin blocks for deposit, 6 for withdrawal).\n  3. **Decentralized Management** : Initially utilizes a set of 15 community-chosen signers for maintaining the peg wallet.\n  4. **Community Governance** : Involves the community in key decisions, such as selecting the initial signing set.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc#key-concepts)\nKey Concepts\nUnderstanding sBTC requires familiarity with several key concepts:\n#### \n[](https://docs.stacks.co/concepts/sbtc#sbtc)\nsBTC\nsBTC is a [SIP-010](https://github.com/stacksgov/sips/blob/main/sips/sip-010/sip-010-fungible-token-standard.md) token on the Stacks Blockchain that can be converted back to BTC on the Bitcoin Blockchain. The key property of sBTC is its 1:1 peg to Bitcoin, meaning 1 sBTC is always equivalent to 1 BTC.\n#### \n[](https://docs.stacks.co/concepts/sbtc#sbtc-utxo)\nsBTC UTXO\nThe sBTC UTXO is the single unspent transaction output (UTXO) on the Bitcoin blockchain that holds the entire BTC balance pegged into sBTC. This UTXO is managed and maintained by the set of sBTC Signers.\n#### \n[](https://docs.stacks.co/concepts/sbtc#sbtc-signer)\nsBTC Signer\nIn sBTC, the sBTC Signer is a signer entity separate from the Stacks Nakamoto signer. sBTC signer responsibilities include:\n  * Signing sBTC operations\n  * Communicating with the sBTC contracts on the Stacks chain\n  * Managing the sBTC UTXO\n\n\n#### \n[](https://docs.stacks.co/concepts/sbtc#sbtc-signer-set)\nsBTC Signer Set\nThe sBTC Signer Set is the group of all sBTC signers. This set has full democratic access to the sBTC UTXO and is responsible for maintaining the security of the peg wallet. The signers also have the ability to rotate their private keys for enhanced security.\n#### \n[](https://docs.stacks.co/concepts/sbtc#emily-api)\nEmily API\nEmily is an API that helps facilitate and supervise the sBTC Bridge in addition to serving as a programmatic liaison between sBTC users and signers.\n#### \n[](https://docs.stacks.co/concepts/sbtc#sip-010-token)\nSIP-010 Token\nsBTC adheres to the [SIP-010](https://github.com/stacksgov/sips/blob/main/sips/sip-010/sip-010-fungible-token-standard.md) standard for fungible tokens on the Stacks blockchain. This ensures compatibility with wallets and applications that support the SIP-010 standard.\nUnderstanding these concepts is crucial for grasping the overall architecture and functionality of sBTC. In the following sections, we'll explore how these concepts come together to create sBTC.\n[PreviousDecidability](https://docs.stacks.co/concepts/clarity/decidability)[NextCore Features](https://docs.stacks.co/concepts/sbtc/core-features)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 986,
      "title": "sBTC | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/core-features",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [1. 1:1 Bitcoin Backing](https://docs.stacks.co/concepts/sbtc/core-features#id-1.-1-1-bitcoin-backing)\n  * [2. Decentralized Management](https://docs.stacks.co/concepts/sbtc/core-features#id-2.-decentralized-management)\n  * [3. Quick Conversions](https://docs.stacks.co/concepts/sbtc/core-features#id-3.-quick-conversions)\n  * [4. SIP-010 Compatibility](https://docs.stacks.co/concepts/sbtc/core-features#id-4.-sip-010-compatibility)\n  * [5. Community Governance](https://docs.stacks.co/concepts/sbtc/core-features#id-5.-community-governance)\n  * [6. Signer Key Rotation](https://docs.stacks.co/concepts/sbtc/core-features#id-6.-signer-key-rotation)\n  * [7. Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/core-features#id-7.-transaction-fee-sponsorship)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# Core Features\nsBTC offers several core features that make it a powerful trust-minimized Bitcoin bridge between Stacks and Bitcoin:\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-1.-1-1-bitcoin-backing)\n1. 1:1 Bitcoin Backing\nEach sBTC token is backed by an equivalent amount of Bitcoin in the peg wallet. This ensures that sBTC maintains a stable value relative to BTC.\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-2.-decentralized-management)\n2. Decentralized Management\nThe sBTC peg wallet is maintained and managed by a set of sBTC signers. This decentralized approach enhances security and reduces single points of failure.\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-3.-quick-conversions)\n3. Quick Conversions\nsBTC facilitates rapid movement between BTC and sBTC:\n  * BTC to sBTC conversion can be completed within 3 Bitcoin blocks\n  * sBTC to BTC conversion can be completed within 6 Bitcoin blocks\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-4.-sip-010-compatibility)\n4. SIP-010 Compatibility\nsBTC adheres to the SIP-010 fungible token standard on the Stacks blockchain. This ensures wide compatibility with Stacks wallets and applications.\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-5.-community-governance)\n5. Community Governance\nThe initial sBTC signing set is determined by a community vote, weighted by STX holdings. This approach ensures that the community has a say in the management of the sBTC system.\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-6.-signer-key-rotation)\n6. Signer Key Rotation\nsBTC signers have the ability to rotate their private keys, enhancing long-term security of the system.\n## \n[](https://docs.stacks.co/concepts/sbtc/core-features#id-7.-transaction-fee-sponsorship)\n7. Transaction Fee Sponsorship\nsBTC transactions on Stacks can be sponsored, allowing users to pay transaction fees in sBTC instead of STX.\nThese core features work together to create a secure, efficient, and user-friendly bridge between Bitcoin and the Stacks ecosystem.\n[PrevioussBTC](https://docs.stacks.co/concepts/sbtc)[NextsBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 824,
      "title": "Core Features | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/operations",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# sBTC Operations\nThis section covers the main operations in the sBTC system:\n  1. [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit): Converting BTC to sBTC\n  2. [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal): Converting sBTC back to BTC\n\n\nThese operations form the core functionality of sBTC, allowing users to move value between the Bitcoin and Stacks ecosystems.\n[PreviousCore Features](https://docs.stacks.co/concepts/sbtc/core-features)[NextDeposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 592,
      "title": "sBTC Operations | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/operations/deposit",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Process Overview](https://docs.stacks.co/concepts/sbtc/operations/deposit#process-overview)\n  * [Bitcoin Deposit Requirements](https://docs.stacks.co/concepts/sbtc/operations/deposit#bitcoin-deposit-requirements)\n  * [User Experience](https://docs.stacks.co/concepts/sbtc/operations/deposit#user-experience)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n\n\n# Deposit\nThe deposit operation enables users to mint sBTC, anchored to the BTC they have placed in the threshold wallet on the Bitcoin chain. This process can be completed within a single Bitcoin block, streamlining the user experience.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/deposit#process-overview)\nProcess Overview\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2Flh7-rt.googleusercontent.com%2Fdocsz%2FAD_4nXdlY8MKm4IEls6XieRtpunfge6KTNSw2HT_o9iD8FgIL3RCJuzKa781Ft-oXNCEn_rIqMqu0_hqD5-GPrF9cT6rFXdnA1BASFoU3Uy6VgR2ARfp-0FnLgrM7GH7hdx-Ia2m_DpdonZmlwqTMd1sQe0XqgX4%3Fkey%3DLMMtMf3zwOdkwel07ZrRiw&width=768&dpr=4&quality=100&sign=16d6039c&sv=2)\nThe deposit process begins when a user initiates specific Bitcoin transaction that has two outputs:\n  1. Script that lets the signers spend it\n  2. Time lock to allow the depositor to reclaim\n\n\nNext, the depositor (usually through the application they are using to deposit) initiates an API call referencing that Bitcoin transaction. This call triggers the Emily API, which plays a crucial role by relaying deposit information to the sBTC Signers. These signers are responsible for verifying and processing the deposit. Once verified, an equivalent amount of sBTC is minted on the Stacks blockchain.\nThe deposit is usually completed within a single Bitcoin block, but is guaranteed to be completed within 3. For more information on deposit and withdrawal confirmation times and why deposits can be so fast, check out the [Deposit and Withdrawal Times](https://github.com/stacks-network/docs/blob/master/concepts/sbtc/operations/deposit-withdrawal-times.md) doc.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/deposit#bitcoin-deposit-requirements)\nBitcoin Deposit Requirements\nFor a deposit to be considered valid, it must adhere to specific requirements. The deposit must be made to a taproot address and be spendable by a consensus threshold of signers. Additionally, the deposit must follow a specific format that prevents short-term clawbacks, ensuring the security and integrity of the system.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/deposit#user-experience)\nUser Experience\nFrom a user's perspective, the deposit process is straightforward. Users initiate a BTC transaction to a specified address and then wait for the transaction to be confirmed on the Bitcoin blockchain. Once confirmed, they receive the equivalent amount of sBTC in their Stacks wallet.\nTo enhance the user experience, a sBTC bridge web application is currently in development which will provide an intuitive interface for users to track the status of their deposit operations. This allows users to stay informed throughout the process, from initiation to completion.\n[PrevioussBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)[NextWithdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 887,
      "title": "Deposit | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/operations/withdrawal",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Process Overview](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#process-overview)\n  * [Withdrawal Confirmation](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#withdrawal-confirmation)\n  * [Failure Cases](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#failure-cases)\n  * [Security Considerations](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#security-considerations)\n  * [User Experience](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#user-experience)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n\n\n# Withdrawal\nThe sBTC withdrawal operation enables users to convert their sBTC back to BTC. This process involves burning sBTC on the Stacks blockchain and releasing an equivalent amount of BTC on the Bitcoin blockchain.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#process-overview)\nProcess Overview\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2Flh7-rt.googleusercontent.com%2Fdocsz%2FAD_4nXeNx03RFtUIZTzKCbSnakHtStQl69RWZ7TWRYsW4KvIS2HS-93ghvu3s2U-g5PXbdeCvZPZUZv1JL3CdPo3Zkm2ZHHmW8BDJIvMoZMFBf256K0fVH07TEazw7EPu7Wixex-inhIAwIzy4WCHwzoUbzpPph_%3Fkey%3DLMMtMf3zwOdkwel07ZrRiw&width=768&dpr=4&quality=100&sign=f2aee551&sv=2)\nThe withdrawal process begins when a user initiates a Clarity contract call. This call triggers a series of events that culminate in the user receiving BTC in their specified Bitcoin address. The process requires six Bitcoin block confirmations to complete. After these confirmations, sBTC Signers create the withdrawal transaction on the Bitcoin network.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#withdrawal-confirmation)\nWithdrawal Confirmation\nThe requirement for six block confirmations serves multiple important purposes. First, it ensures the finality of the Stacks transaction, preventing any potential reversals or conflicts. Second, it mitigates issues that could arise from potential Bitcoin forks by allowing sufficient time for network stability. Lastly, it provides sBTC Signers with ample time to verify and process the withdrawal request accurately.\nFor more information on deposit and withdrawal confirmation times and why deposits can be so much faster than withdrawals, check out the [Deposit and Withdrawal Times](https://github.com/stacks-network/docs/blob/master/concepts/sbtc/operations/deposit-withdrawal-times.md) doc.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#failure-cases)\nFailure Cases\nWhile some withdrawal failures can be identified and resolved before the six confirmations are complete, others may only become apparent after the sBTC Bootstrap Signer attempts to create the withdrawal transaction on the Bitcoin network. This delay in failure detection is due to the complex nature of cross-chain operations and the need for thorough verification at each step.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#security-considerations)\nSecurity Considerations\nThe multi-block confirmation process is a crucial security measure that helps prevent double-spending attempts. By requiring multiple block confirmations, the system ensures that the withdrawal request is valid and final before processing it on the Bitcoin network. Additionally, sBTC Signers verify each withdrawal request before processing it, adding an extra layer of security.\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/withdrawal#user-experience)\nUser Experience\nFrom a user's perspective, the withdrawal process is designed to be straightforward and transparent. Users initiate a withdrawal request through a Stacks wallet or decentralized application (dApp). During this process, they specify the amount of sBTC they wish to withdraw and provide the destination Bitcoin address where they want to receive their BTC. After submitting the request, users must wait for the required six blocks to complete. Once confirmed, the BTC is sent to the specified Bitcoin address.\nTo enhance user experience and provide clarity throughout the process, the sBTC bridge web application offers a user-friendly interface. This interface allows users to track the status of their withdrawal operations in real-time, providing updates at each stage of the process. This transparency helps users understand the progress of their withdrawal and anticipate when they can expect to receive their BTC.\n[PreviousDeposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)[NextDeposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1012,
      "title": "Withdrawal | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n\n\n# Deposit vs Withdrawal Times\n## \n[](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times#why-are-deposits-so-fast-and-withdrawals-so-slow)\nWhy are Deposits So Fast and Withdrawals So Slow?\nsBTC allows users to use their BTC on the Stacks L2 by using a wrapped token called sBTC. Moving sBTC onto the Stacks L2 can take as little time as 1 Bitcoin block, but moving sBTC off the Stacks L2 into the native Bitcoin blockchain takes 6 Bitcoin blocks. Why is that?\nTo understand why moving onto the Stacks layer can be so fast and yet moving off must be so slow, we need to first understand the consensus mechanism of the Stacks blockchain.\nThe Stacks blockchain uses a consensus mechanism called proof of transfer, or PoX, in order to mint new blocks. On each Bitcoin block miners on the Stacks blockchain each sacrifice some amount of Bitcoin in a bid to win the right to make the next few Stacks blocks, where they retain the right to keep making Stacks blocks until the next Bitcoin block occurs and the latest bidding round elects a new Miner. Signers (validators equivalents for the Stacks Blockchain) look at the Bitcoin blocks and approve new Stacks blocks based on which miner currently has the right to make Stacks blocks, and they only approve new blocks from the Signers that won the most recent bid on the Bitcoin block within the fork that they collectively consider to be the ‚Äúbest‚Äù. The Stacks blockchain can only have new blocks added if the Signers agree that the miner who proposed it is the winner of the bid on the Bitcoin blockchain, and all the Signers are voting on which block should be added, effectively collectively deciding which Bitcoin fork is the best one.\nHere‚Äôs an important part: if the Signers believe that there‚Äôs a new and better Bitcoin fork that differs from the one that the last several Stacks blocks had been mined on, they‚Äôll then only approve new Stacks blocks that build off of Stacks blocks that are tied to that new fork. As in, every Stacks block that was built on Bitcoin Blocks in the other Bitcoin fork that aren‚Äôt in this new fork are considered invalid; thus the Stacks blockchain forks too.\nA simple way to say this: ‚ÄúThe Stacks blockchain forks with the Bitcoin blockchain.‚Äù\nNow that we understand this forking mechanism, let's take a look at why moving off the Stacks layer must be so slow.\nsBTC exists on the Stacks layer as a token that smart contracts can interact with. To move sBTC over from the Stacks layer to the Bitcoin layer the owner of the sBTC calls a smart contract to initiate what we call the ‚Äúwithdrawal‚Äù sequence. This lets the ‚ÄúsBTC Signers‚Äù (these are different from the earlier Signers mentioned, sorry) know that they need to create a transaction on the Bitcoin blockchain to distribute the BTC back to the user.\nIf the signers create a Bitcoin transaction to enact the withdrawal they can‚Äôt take it back, and it will be valid on every fork of the Bitcoin blockchain. So what happens if, say, the bitcoin blockchain forks and the withdrawal on the Stacks layer got reorganized out? Then there‚Äôs an irretrievable withdrawal transaction on the Bitcoin blockchain giving precious BTC to a user who never withdrew their sBTC on the Stacks layer.\n\"Can the Signers that maintain the original chain force miners to replay all previously confirmed transactions?\" It's worth asking to learn more about withdrawal process. The Stacks blockchain is a true Layer 2 on top of Bitcoin, and you can write a smart contract to have different behavior based on observations of the Bitcoin blockchain underneath. You can, for example, write a Stacks contract that says ‚ÄúPay to Jeff if the latest Bitcoin block hash ends in an even hex digit, and pay to Abigail if it‚Äôs an odd hex digit.‚Äù Now when there‚Äôs a reorg of the Bitcoin blockchain you can replay this transaction which originally paid to Jeff, but it now pays to Abigail, and what happens if this contract was giving out sBTC, and further what happens if Jeff then immediately executed a withdrawal?\nSo in the end, to process a withdrawal safely you need to be sufficiently sure it won‚Äôt get reorganized out. That means it can only be processed 6 Bitcoin blocks (the finality criteria the Signers are comfortable with) after the withdrawal was made on the Stacks blockchain.\nBut then, why can deposits be done in one Bitcoin block at its fastest?\nRemember how Stacks forks with Bitcoin? Let's say someone makes a deposit on the Bitcoin blockchain in an attempt to mint sBTC, and then lets say the sBTC Signers immediately mint sBTC. What happens if the Bitcoin chain forks causing the Stacks blockchain to fork? The mint gets reorganized out! Sure, the deposit is no longer on the Bitcoin blockchain, but it‚Äôs not on the Stacks blockchain either. If that deposit doesn‚Äôt ever arrive on the Bitcoin blockchain the sBTC signers will never mint sBTC, so there‚Äôs nothing to take back!\nSo all in all, for movements of sBTC from the Stacks layer into the Bitcoin layer the protocol needs to wait for Bitcoin to be sufficiently final, but movements from the Bitcoin layer to the Stacks layer don‚Äôt need to wait for finality to mint because the Stacks layer will just reorganized itself if the Bitcoin layer reorganizes too.\nBut then conceptually remember, the mint call on the Stacks blockchain is just as final as the Bitcoin block that contains the deposit of BTC onto the Stacks layer. If you‚Äôre minting sBTC on the Stacks layer and you want to wait for it to be final you‚Äôll need to wait a suitable number of Bitcoin blocks to consider it finally minted, but that‚Äôs up to you and not the sBTC Signers.\n[PreviousWithdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)[NextEmily API](https://docs.stacks.co/concepts/sbtc/emily)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1521,
      "title": "Deposit vs Withdrawal Times | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/emily",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Overview](https://docs.stacks.co/concepts/sbtc/emily#overview)\n  * [Why Emily?](https://docs.stacks.co/concepts/sbtc/emily#why-emily)\n  * [Key Features](https://docs.stacks.co/concepts/sbtc/emily#key-features)\n  * [Core Concepts](https://docs.stacks.co/concepts/sbtc/emily#core-concepts)\n  * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/emily#sbtc-operations)\n  * [Operation States](https://docs.stacks.co/concepts/sbtc/emily#operation-states)\n  * [Interaction Flows](https://docs.stacks.co/concepts/sbtc/emily#interaction-flows)\n  * [Deposit Flow](https://docs.stacks.co/concepts/sbtc/emily#deposit-flow)\n  * [Withdrawal Flow](https://docs.stacks.co/concepts/sbtc/emily#withdrawal-flow)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# Emily API\n[Emily](https://github.com/stacks-network/sbtc/tree/main/emily) is an API that helps facilitate and supervise the sBTC Bridge, serving as a programmatic liaison between sBTC users and signers.\n## \n[](https://docs.stacks.co/concepts/sbtc/emily#overview)\nOverview\nThe Emily API is designed to track deposits and withdrawals, providing information about the status of in-flight sBTC operations. It serves two primary user groups: sBTC users and sBTC app developers.\n## \n[](https://docs.stacks.co/concepts/sbtc/emily#why-emily)\nWhy Emily?\nThe Emily API is given an indirect name because it handles more than just Deposits and Withdrawals; it can detect the health of the system and will likely be extended to handle more as user requirements mature. It was once called the ‚ÄúRevealer API‚Äù, which stopped making sense after a few design changes, and then ‚ÄúDeposit API‚Äù which also stopped making sense after a few changes. The most obvious choice ‚ÄúsBTC API‚Äù gives the wrong impression of what the API is responsible for as well, since the API itself isn‚Äôt managing the entirety of the protocol.\nLarge companies name their APIs after something loosely related but ambiguous enough that extensions of the API don‚Äôt make the original name of the API misleading. Following this, we chose ‚ÄúEmily‚Äù after Emily Warren Roebling who was the liaison between the builders and chief engineer, her husband, of the Brooklyn bridge. She was, in effect, the supervisor of the bridge‚Äôs construction; similarly, the Emily API supervises the sBTC bridge and liaises between the users of the protocol and the sBTC signers.\n## \n[](https://docs.stacks.co/concepts/sbtc/emily#key-features)\nKey Features\n  1. **Track Deposits** : Monitor the process of converting BTC to sBTC.\n  2. **Track Withdrawals** : Monitor the process of converting sBTC back to BTC.\n  3. **Provide Operation Status** : Offer real-time status updates for ongoing sBTC operations.\n  4. **Retrieve Historical Data** : Allow querying of past sBTC operations.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/emily#core-concepts)\nCore Concepts\n### \n[](https://docs.stacks.co/concepts/sbtc/emily#sbtc-operations)\nsBTC Operations\nsBTC operations are the fundamental processes tracked by Emily:\n  1. **Deposits** : Converting BTC to sBTC\n  2. **Withdrawals** : Converting sBTC back to BTC\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/emily#operation-states)\nOperation States\nEach sBTC operation goes through several states:\n  1. **PENDING** : The operation has been initiated.\n  2. **ACCEPTED** : The operation has been approved by the signers.\n  3. **CONFIRMED** : The operation has been completed and confirmed on the blockchain.\n  4. **FAILED** : The operation could not be completed.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/emily#interaction-flows)\nInteraction Flows\n### \n[](https://docs.stacks.co/concepts/sbtc/emily#deposit-flow)\nDeposit Flow\n  1. User creates a deposit transaction on Bitcoin.\n  2. User submits proof of deposit to the Deposit API.\n  3. Emily records the deposit as PENDING.\n  4. Signers validate and vote on the deposit.\n  5. If accepted, Emily updates status to ACCEPTED.\n  6. Signers process the Bitcoin transaction.\n  7. Signers mint sBTC on Stacks.\n  8. Emily updates the deposit status to CONFIRMED.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/emily#withdrawal-flow)\nWithdrawal Flow\n  1. User initiates withdrawal through the sBTC Clarity contract.\n  2. Emily records the withdrawal as PENDING.\n  3. Signers decide to accept or reject the withdrawal.\n  4. If accepted, Emily updates status to ACCEPTED.\n  5. Signers process the Bitcoin transaction.\n  6. Signers burn sBTC on Stacks.\n  7. Emily updates the withdrawal status to CONFIRMED.\n\n\n[PreviousDeposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)[NextPeg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1080,
      "title": "Emily API | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# Peg Wallet UTXO\nThe Peg Wallet UTXO is a fundamental element of the sBTC system, serving as the Bitcoin backing for all sBTC tokens in circulation. This system employs a Single UTXO Model, where the sBTC peg wallet is consistently represented as a single Unspent Transaction Output (UTXO) on the Bitcoin blockchain. This design choice offers simplicity and improved efficiency in managing the peg wallet.\nUTXO management falls under the responsibility of the Signer set. First, a Signer coordinator constructs the UTXO. Then the Signer set collectively consolidates all deposit and withdrawal requests, creating optimized batches that can be processed within a single UTXO. The new UTXO is created by spending the amount from the previous UTXO, adding confirmed deposits, and subtracting confirmed withdrawals.\nThe batching process is carefully optimized to maintain the single UTXO invariant while creating optimal batches. When multiple sBTC operation requests are present, the Signer coordinator groups them by approval sets. In scenarios where differing approval sets exist across active sBTC operations, the coordinator batches deposit UTXOs into groups with the maximum size per approval set.\nThis Single UTXO Model offers several advantages. It simplifies tracking and management, reduces the number of Bitcoin transactions required for sBTC operations, and centralizes funds in a single, well-secured output. These benefits contribute to the overall efficiency and security of the sBTC system.\nSecurity is a paramount concern in this model. The single UTXO is managed by the sBTC Bootstrap Signer Set, which requires a threshold of signers to approve any spending. This multi-signature approach adds an extra layer of protection to the funds. Additionally, regular audits and continuous monitoring are essential to ensure that the UTXO accurately represents the total sBTC in circulation at all times.\nBy employing this streamlined approach, the Peg Wallet UTXO system maintains a balance between simplicity, efficiency, and security, forming a robust foundation for the sBTC ecosystem.\n[PreviousEmily API](https://docs.stacks.co/concepts/sbtc/emily)[NextClarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 862,
      "title": "Peg Wallet UTXO | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/clarity-contracts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Deployed Mainnet Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts#deployed-mainnet-contracts)\n  * [sBTC Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts#sbtc-clarity-contracts)\n  * [User Types](https://docs.stacks.co/concepts/sbtc/clarity-contracts#user-types)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# Clarity Contracts\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#deployed-mainnet-contracts)\nDeployed Mainnet Contracts\n  * [sbtc-token](https://explorer.hiro.so/txid/SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-token?chain=mainnet)\n  * [sbtc-registry](https://explorer.hiro.so/txid/SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-registry?chain=mainnet)\n  * [sbtc-deposit](https://explorer.hiro.so/txid/SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-deposit?chain=mainnet)\n  * [sbtc-withdrawal](https://explorer.hiro.so/txid/SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-withdrawal?chain=mainnet)\n  * [sbtc-bootstrap-signers](https://explorer.hiro.so/txid/SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-bootstrap-signers?chain=mainnet)\n\n\nThis graph summarizes the overall of the Clarity portion of the sBTC protocol.\nThroughout this section, we'll expand on each contract and its functionality.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2Flh7-rt.googleusercontent.com%2Fdocsz%2FAD_4nXe6LEEESrk6Az-iRR5ZeEuqOQvBESKtFvBIjSYPhAjLZ2LpEwM-UOnSWn4b6hFFv0uFnysxL6wO-BVgJaPTAdYUkbvBenJrY8rY-YrGT9CSwqdCl2kuS5ZhNheumR-yBPAOHtccAt1eOD4dU5Zi-14gBgwv%3Fkey%3DuPKXlfIDnNUlnyka_NtgIw&width=768&dpr=4&quality=100&sign=f7af0a47&sv=2)\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#sbtc-clarity-contracts)\nsBTC Clarity Contracts\nAt a high level, the sBTC Clarity contracts are responsible for the following:\n#### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#sbtc-bootstrap-signers)\nsbtc-bootstrap signers\nCore contract for meta signer functionality such as registration & the rotation process.\n#### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#sbtc-deposit)\nsbtc-deposit\nProcessing contract called by the signers to record a consumed Bitcoin transaction & mint some amount of sBTC to a principal contained in the payload.\n#### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#sbtc-registry)\nsbtc-registry\nState storage for maintaining upgradability across protocol.\n#### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#sbtc-withdrawal)\nsbtc-withdrawal\nInteraction points for users and signers to update withdrawal request state.\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#user-types)\nUser Types\nIn addition to the contracts themselves, there are two main user types that will interact with these contracts.\n#### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#signer)\nSigner\nA signer that is part of the current sBTC signer set. More information on signers and their role in sBTC can be found in the [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process).\n#### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts#wallet)\nWallet\nA participant in the Stacks/Bitcoin ecosystem that wants to deposit/withdraw/use sbtc.\n[PreviousPeg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)[NextsBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 757,
      "title": "Clarity Contracts | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Overview](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#overview)\n  * [Error Constants](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#error-constants)\n  * [State Variables](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#state-variables)\n  * [Data Maps](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#data-maps)\n  * [withdrawal-requests](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#withdrawal-requests)\n  * [withdrawal-status](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#withdrawal-status)\n  * [completed-deposits](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#completed-deposits)\n  * [aggregate-pubkeys](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#aggregate-pubkeys)\n  * [multi-sig-address](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#multi-sig-address)\n  * [protocol-contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#protocol-contracts)\n  * [Read-only Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#read-only-functions)\n  * [get-withdrawal-request](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-withdrawal-request)\n  * [get-completed-deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-completed-deposit)\n  * [get-current-signer-data](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-signer-data)\n  * [get-current-aggregate-pubkey](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-aggregate-pubkey)\n  * [get-current-signer-principal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-signer-principal)\n  * [get-current-signer-set](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-signer-set)\n  * [Public Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#public-functions)\n  * [create-withdrawal-request](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#create-withdrawal-request)\n  * [complete-withdrawal-accept](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#complete-withdrawal-accept)\n  * [complete-withdrawal-reject](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#complete-withdrawal-reject)\n  * [complete-deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#complete-deposit)\n  * [rotate-keys](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#rotate-keys)\n  * [Private Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#private-functions)\n  * [increment-last-withdrawal-request-id](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#increment-last-withdrawal-request-id)\n  * [is-protocol-caller](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#is-protocol-caller)\n  * [validate-protocol-caller](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#validate-protocol-caller)\n  * [Events](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#events)\n  * [Security Considerations](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#security-considerations)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n\n\n# sBTC Registry\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#overview)\nOverview\nThe [sBTC Registry contract](https://github.com/stacks-network/sbtc/blob/main/contracts/contracts/sbtc-registry.clar) (`sbtc-registry.clar`) serves as the central registry for the sBTC system. It manages withdrawal requests, completed deposits, and the current signer set. This contract is crucial for maintaining the state and coordinating operations within the sBTC ecosystem.\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#error-constants)\nError Constants\n  * `ERR_UNAUTHORIZED` (u400): Indicates unauthorized access.\n  * `ERR_INVALID_REQUEST_ID` (u401): Signifies an invalid withdrawal request ID.\n  * `ERR_AGG_PUBKEY_REPLAY` (u402): Indicates an attempt to replay an aggregate public key.\n  * `ERR_MULTI_SIG_REPLAY` (u403): Signifies an attempt to replay a multi-signature address.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#state-variables)\nState Variables\n  * `last-withdrawal-request-id`: Tracks the latest withdrawal request ID.\n  * `current-signature-threshold`: Stores the current threshold for required signatures.\n  * `current-signer-set`: Maintains a list of current signer public keys.\n  * `current-aggregate-pubkey`: Holds the current aggregate public key.\n  * `current-signer-principal`: Stores the current signer's principal address.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#data-maps)\nData Maps\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#withdrawal-requests)\nwithdrawal-requests\nStores withdrawal request details indexed by request ID.\n  * Fields:\n    * `amount`: Amount of sBTC being withdrawn (in sats)\n    * `max-fee`: Maximum fee for the withdrawal\n    * `sender`: Principal of the sender\n    * `recipient`: BTC recipient address (version and hashbytes)\n    * `block-height`: Burn block height where the request was created\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#withdrawal-status)\nwithdrawal-status\nTracks the status of withdrawal requests indexed by request ID.\n  * Value: `bool` (true if accepted, false if rejected, none if pending)\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#completed-deposits)\ncompleted-deposits\nRecords completed deposit transactions to prevent replay attacks.\n  * Key: `{txid: (buff 32), vout-index: uint}`\n  * Value: `{amount: uint, recipient: principal}`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#aggregate-pubkeys)\naggregate-pubkeys\nTracks used aggregate public keys to prevent replay attacks.\n  * Key: `(buff 33)` (aggregate public key)\n  * Value: `bool`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#multi-sig-address)\nmulti-sig-address\nTracks used multi-signature addresses to prevent replay attacks.\n  * Key: `principal` (multi-sig address)\n  * Value: `bool`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#protocol-contracts)\nprotocol-contracts\nStores authorized protocol contract addresses.\n  * Key: `principal` (contract address)\n  * Value: `bool`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#read-only-functions)\nRead-only Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-withdrawal-request)\nget-withdrawal-request\nRetrieves a withdrawal request by its ID.\n  * Parameters:\n    * `id`: `uint`\n  * Returns: `(optional {amount: uint, max-fee: uint, sender: principal, recipient: {version: (buff 1), hashbytes: (buff 32)}, block-height: uint, status: (optional bool)})`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-completed-deposit)\nget-completed-deposit\nFetches a completed deposit by transaction ID and output index.\n  * Parameters:\n    * `txid`: `(buff 32)`\n    * `vout-index`: `uint`\n  * Returns: `(optional {amount: uint, recipient: principal})`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-signer-data)\nget-current-signer-data\nReturns current signer set information.\n  * Returns: `{current-signer-set: (list 128 (buff 33)), current-aggregate-pubkey: (buff 33), current-signer-principal: principal, current-signature-threshold: uint}`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-aggregate-pubkey)\nget-current-aggregate-pubkey\nReturns the current aggregate public key.\n  * Returns: `(buff 33)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-signer-principal)\nget-current-signer-principal\nReturns the current signer's principal.\n  * Returns: `principal`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#get-current-signer-set)\nget-current-signer-set\nReturns the current set of signer public keys.\n  * Returns: `(list 128 (buff 33))`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#public-functions)\nPublic Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#create-withdrawal-request)\ncreate-withdrawal-request\nCreates a new withdrawal request. Only callable by protocol contracts.\n  * Parameters:\n    * `amount`: `uint`\n    * `max-fee`: `uint`\n    * `sender`: `principal`\n    * `recipient`: `{version: (buff 1), hashbytes: (buff 32)}`\n    * `height`: `uint`\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#complete-withdrawal-accept)\ncomplete-withdrawal-accept\nMarks a withdrawal request as accepted.\n  * Parameters:\n    * `request-id`: `uint`\n    * `bitcoin-txid`: `(buff 32)`\n    * `output-index`: `uint`\n    * `signer-bitmap`: `uint`\n    * `fee`: `uint`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#complete-withdrawal-reject)\ncomplete-withdrawal-reject\nMarks a withdrawal request as rejected.\n  * Parameters:\n    * `request-id`: `uint`\n    * `signer-bitmap`: `uint`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#complete-deposit)\ncomplete-deposit\nRecords a completed deposit transaction.\n  * Parameters:\n    * `txid`: `(buff 32)`\n    * `vout-index`: `uint`\n    * `amount`: `uint`\n    * `recipient`: `principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#rotate-keys)\nrotate-keys\nUpdates the signer set, multi-sig principal, and aggregate public key.\n  * Parameters:\n    * `new-keys`: `(list 128 (buff 33))`\n    * `new-address`: `principal`\n    * `new-aggregate-pubkey`: `(buff 33)`\n    * `new-signature-threshold`: `uint`\n  * Returns: `(response (buff 33) uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#private-functions)\nPrivate Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#increment-last-withdrawal-request-id)\nincrement-last-withdrawal-request-id\nIncrements and returns the next withdrawal request ID.\n  * Returns: `uint`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#is-protocol-caller)\nis-protocol-caller\nChecks if the caller is an authorized protocol contract.\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#validate-protocol-caller)\nvalidate-protocol-caller\nValidates if a given principal is an authorized protocol contract.\n  * Parameters:\n    * `caller`: `principal`\n  * Returns: `(response bool uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#events)\nEvents\nThe contract emits events (via `print`) for important actions:\n  * Withdrawal request creation: \"withdrawal-create\"\n  * Withdrawal acceptance: \"withdrawal-accept\"\n  * Withdrawal rejection: \"withdrawal-reject\"\n  * Deposit completion: \"completed-deposit\"\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry#security-considerations)\nSecurity Considerations\n  1. Access Control: Only authorized protocol contracts can call certain functions.\n  2. Replay Prevention: The contract prevents replay attacks on deposits, aggregate public keys, and multi-signature addresses.\n  3. State Management: The contract carefully manages the state of withdrawals and the current signer set.\n\n\n[PreviousClarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)[NextsBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1343,
      "title": "sBTC Registry | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Overview](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#overview)\n  * [Constants](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#constants)\n  * [Fungible Tokens](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#fungible-tokens)\n  * [Data Variables](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#data-variables)\n  * [Protocol Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-functions)\n  * [protocol-transfer](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-transfer)\n  * [protocol-lock](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-lock)\n  * [protocol-unlock](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-unlock)\n  * [protocol-mint](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-mint)\n  * [protocol-burn](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-burn)\n  * [protocol-burn-locked](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-burn-locked)\n  * [protocol-set-name](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-set-name)\n  * [protocol-set-symbol](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-set-symbol)\n  * [protocol-set-token-uri](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-set-token-uri)\n  * [protocol-mint-many](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-mint-many)\n  * [Public Functions (SIP-010 Trait)](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#public-functions-sip-010-trait)\n  * [transfer](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#transfer)\n  * [get-name](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-name)\n  * [get-symbol](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-symbol)\n  * [get-decimals](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-decimals)\n  * [get-balance](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-balance)\n  * [get-balance-available](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-balance-available)\n  * [get-balance-locked](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-balance-locked)\n  * [get-total-supply](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-total-supply)\n  * [get-token-uri](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-token-uri)\n  * [Private Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#private-functions)\n  * [protocol-mint-many-iter](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-mint-many-iter)\n  * [Security Considerations](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#security-considerations)\n  * [Interactions with Other Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#interactions-with-other-contracts)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n\n\n# sBTC Token\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#overview)\nOverview\nThe [sBTC Token contract](https://github.com/stacks-network/sbtc/blob/main/contracts/contracts/sbtc-token.clar) (`sbtc-token.clar`) implements the fungible token functionality for sBTC. It manages both unlocked and locked sBTC tokens and provides functions for minting, burning, transferring, and querying token information. sBTC is a SIP-010 standard fungible token.\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#constants)\nConstants\n  * `ERR_NOT_OWNER` (u4): Error when the sender tries to move a token they don't own.\n  * `ERR_NOT_AUTH` (u5): Error when the caller is not an authorized protocol caller.\n  * `token-decimals` (u8): The number of decimal places for the token.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#fungible-tokens)\nFungible Tokens\n  * `sbtc-token`: The main sBTC fungible token.\n  * `sbtc-token-locked`: Represents locked sBTC tokens.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#data-variables)\nData Variables\n  * `token-name`: The name of the token (default: \"sBTC\").\n  * `token-symbol`: The symbol of the token (default: \"sBTC\").\n  * `token-uri`: An optional URI for token metadata.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-functions)\nProtocol Functions\nThese functions can only be called by authorized protocol contracts:\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-transfer)\nprotocol-transfer\nTransfers tokens between principals.\n  * Parameters: `amount: uint`, `sender: principal`, `recipient: principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-lock)\nprotocol-lock\nLocks a specified amount of tokens for a user.\n  * Parameters: `amount: uint`, `owner: principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-unlock)\nprotocol-unlock\nUnlocks a specified amount of tokens for a user.\n  * Parameters: `amount: uint`, `owner: principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-mint)\nprotocol-mint\nMints new tokens for a recipient.\n  * Parameters: `amount: uint`, `recipient: principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-burn)\nprotocol-burn\nBurns tokens from an owner's balance.\n  * Parameters: `amount: uint`, `owner: principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-burn-locked)\nprotocol-burn-locked\nBurns locked tokens from an owner's balance.\n  * Parameters: `amount: uint`, `owner: principal`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-set-name)\nprotocol-set-name\nSets a new name for the token.\n  * Parameters: `new-name: (string-ascii 32)`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-set-symbol)\nprotocol-set-symbol\nSets a new symbol for the token.\n  * Parameters: `new-symbol: (string-ascii 10)`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-set-token-uri)\nprotocol-set-token-uri\nSets a new URI for the token metadata.\n  * Parameters: `new-uri: (optional (string-utf8 256))`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-mint-many)\nprotocol-mint-many\nMints tokens for multiple recipients in a single transaction.\n  * Parameters: `recipients: (list 200 {amount: uint, recipient: principal})`\n  * Returns: `(response (list 200 (response bool uint)) uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#public-functions-sip-010-trait)\nPublic Functions (SIP-010 Trait)\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#transfer)\ntransfer\nTransfers tokens between users.\n  * Parameters: `amount: uint`, `sender: principal`, `recipient: principal`, `memo: (optional (buff 34))`\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-name)\nget-name\nReturns the token name.\n  * Returns: `(response (string-ascii 32) uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-symbol)\nget-symbol\nReturns the token symbol.\n  * Returns: `(response (string-ascii 10) uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-decimals)\nget-decimals\nReturns the number of decimal places.\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-balance)\nget-balance\nReturns the total balance (locked + unlocked) for a principal.\n  * Parameters: `who: principal`\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-balance-available)\nget-balance-available\nReturns the available (unlocked) balance for a principal.\n  * Parameters: `who: principal`\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-balance-locked)\nget-balance-locked\nReturns the locked balance for a principal.\n  * Parameters: `who: principal`\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-total-supply)\nget-total-supply\nReturns the total supply of tokens (locked + unlocked).\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#get-token-uri)\nget-token-uri\nReturns the token metadata URI.\n  * Returns: `(response (optional (string-utf8 256)) uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#private-functions)\nPrivate Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#protocol-mint-many-iter)\nprotocol-mint-many-iter\nHelper function for minting tokens to multiple recipients.\n  * Parameters: `item: {amount: uint, recipient: principal}`\n  * Returns: `(response bool uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#security-considerations)\nSecurity Considerations\n  1. Access Control: Protocol functions can only be called by authorized contracts, enforced through the `sbtc-registry` contract.\n  2. Ownership Verification: The `transfer` function checks that the sender owns the tokens being transferred.\n  3. Separate Token Tracking: The contract maintains separate tracking for locked and unlocked tokens, ensuring proper accounting.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token#interactions-with-other-contracts)\nInteractions with Other Contracts\n  * `.sbtc-registry`: Used to validate protocol callers for privileged operations.\n\n\n[PrevioussBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)[NextsBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1245,
      "title": "sBTC Token | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Overview](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#overview)\n  * [Constants](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#constants)\n  * [Error Constants](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#error-constants)\n  * [Public Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#public-functions)\n  * [complete-deposit-wrapper](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#complete-deposit-wrapper)\n  * [complete-deposits-wrapper](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#complete-deposits-wrapper)\n  * [Private Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#private-functions)\n  * [complete-individual-deposits-helper](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#complete-individual-deposits-helper)\n  * [Interactions with Other Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#interactions-with-other-contracts)\n  * [Security Considerations](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#security-considerations)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n\n\n# sBTC Deposit\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#overview)\nOverview\nThe [sBTC Deposit contract](https://github.com/stacks-network/sbtc/blob/main/contracts/contracts/sbtc-deposit.clar) (`sbtc-deposit.clar`) manages the deposit process for the sBTC system. It handles the validation and minting of sBTC tokens when users deposit Bitcoin, and interacts with the sBTC Registry contract to update the protocol state.\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#constants)\nConstants\n  * `txid-length`: The required length of a transaction ID (32 bytes).\n  * `dust-limit`: The minimum amount for a valid deposit (546 satoshis).\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#error-constants)\nError Constants\n  * `ERR_TXID_LEN` (u300): Indicates that the provided transaction ID is not the correct length.\n  * `ERR_DEPOSIT_REPLAY` (u301): Signifies an attempt to replay a deposit that has already been completed.\n  * `ERR_LOWER_THAN_DUST` (u302): Indicates that the deposit amount is below the dust limit.\n  * `ERR_DEPOSIT_INDEX_PREFIX`: Used as a prefix for deposit-related errors in batch processing.\n  * `ERR_DEPOSIT` (u303): General deposit error.\n  * `ERR_INVALID_CALLER` (u304): Indicates that the caller is not authorized to perform the operation.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#public-functions)\nPublic Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#complete-deposit-wrapper)\ncomplete-deposit-wrapper\nProcesses a single deposit request.\n  * Parameters:\n    * `txid`: `(buff 32)` - The Bitcoin transaction ID\n    * `vout-index`: `uint` - The output index of the deposit transaction\n    * `amount`: `uint` - The amount of sBTC to mint (in satoshis)\n    * `recipient`: `principal` - The Stacks address to receive the minted sBTC\n  * Returns: `(response bool uint)`\n\n\nFunction flow:\n  1. Verifies that the caller is the current signer principal.\n  2. Checks that the deposit amount is above the dust limit.\n  3. Validates the transaction ID length.\n  4. Ensures the deposit hasn't been processed before (prevents replay).\n  5. Mints sBTC tokens to the recipient.\n  6. Updates the deposit state in the sBTC Registry contract.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#complete-deposits-wrapper)\ncomplete-deposits-wrapper\nProcesses multiple deposit requests in a single transaction.\n  * Parameters:\n    * `deposits`: `(list 650 {txid: (buff 32), vout-index: uint, amount: uint, recipient: principal})` - List of deposit data\n  * Returns: `(response uint uint)`\n\n\nFunction flow:\n  1. Verifies that the caller is the current signer principal.\n  2. Iterates through the list of deposits, processing each one using the `complete-individual-deposits-helper` function.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#private-functions)\nPrivate Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#complete-individual-deposits-helper)\ncomplete-individual-deposits-helper\nHelper function to process individual deposits within the batch operation.\n  * Parameters:\n    * `deposit`: `{txid: (buff 32), vout-index: uint, amount: uint, recipient: principal}` - Single deposit data\n    * `helper-response`: `(response uint uint)` - Accumulator for tracking processed deposits\n  * Returns: `(response uint uint)`\n\n\nFunction flow:\n  1. Calls `complete-deposit-wrapper` for the individual deposit.\n  2. If successful, increments the processed deposit count.\n  3. If an error occurs, it's propagated with additional index information.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#interactions-with-other-contracts)\nInteractions with Other Contracts\n  * `.sbtc-registry`: Calls `get-current-signer-data`, `get-completed-deposit`, and `complete-deposit` to manage deposit state.\n  * `.sbtc-token`: Calls `protocol-mint` to create new sBTC tokens.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit#security-considerations)\nSecurity Considerations\n  1. Access Control: Only the current signer principal can call the deposit completion functions.\n  2. Replay Prevention: The contract checks for previously processed deposits to prevent replay attacks.\n  3. Dust Limit: Enforces a minimum deposit amount to prevent spam and ensure economic viability.\n  4. Transaction ID Validation: Ensures the provided transaction ID is the correct length.\n\n\n[PrevioussBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)[NextsBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1070,
      "title": "sBTC Deposit | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Overview](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#overview)\n  * [Constants](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#constants)\n  * [Error Codes](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#error-codes)\n  * [Other Constants](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#other-constants)\n  * [Public Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#public-functions)\n  * [initiate-withdrawal-request](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#initiate-withdrawal-request)\n  * [accept-withdrawal-request](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#accept-withdrawal-request)\n  * [reject-withdrawal-request](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#reject-withdrawal-request)\n  * [complete-withdrawals](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#complete-withdrawals)\n  * [Read-only Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#read-only-functions)\n  * [validate-recipient](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#validate-recipient)\n  * [Private Functions](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#private-functions)\n  * [complete-individual-withdrawal-helper](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#complete-individual-withdrawal-helper)\n  * [Interactions with Other Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#interactions-with-other-contracts)\n  * [Security Considerations](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#security-considerations)\n  * [Bitcoin Address Types](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#bitcoin-address-types)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n\n\n# sBTC Withdrawal\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#overview)\nOverview\nThe [sBTC Withdrawal contract](https://github.com/stacks-network/sbtc/blob/main/contracts/contracts/sbtc-withdrawal.clar) (`sbtc-withdrawal.clar`) manages the withdrawal process for the sBTC system. It handles the initiation, acceptance, and rejection of withdrawal requests, ensuring proper validation and interaction with other sBTC contracts.\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#constants)\nConstants\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#error-codes)\nError Codes\n  * `ERR_INVALID_ADDR_VERSION` (u500): Invalid address version.\n  * `ERR_INVALID_ADDR_HASHBYTES` (u501): Invalid address hashbytes.\n  * `ERR_DUST_LIMIT` (u502): Withdrawal amount below dust limit.\n  * `ERR_INVALID_REQUEST` (u503): Invalid withdrawal request ID.\n  * `ERR_INVALID_CALLER` (u504): Caller is not the current signer principal.\n  * `ERR_ALREADY_PROCESSED` (u505): Withdrawal request already processed.\n  * `ERR_FEE_TOO_HIGH` (u505): Paid fee higher than requested.\n  * `ERR_WITHDRAWAL_INDEX_PREFIX`: Prefix for withdrawal index errors.\n  * `ERR_WITHDRAWAL_INDEX` (u506): General withdrawal index error.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#other-constants)\nOther Constants\n  * `MAX_ADDRESS_VERSION` (u6): Maximum value of an address version.\n  * `MAX_ADDRESS_VERSION_BUFF_20` (u4): Maximum version for 20-byte hashbytes.\n  * `MAX_ADDRESS_VERSION_BUFF_32` (u6): Maximum version for 32-byte hashbytes.\n  * `DUST_LIMIT` (u546): Minimum amount of sBTC for withdrawal.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#public-functions)\nPublic Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#initiate-withdrawal-request)\ninitiate-withdrawal-request\nInitiates a new withdrawal request.\n  * Parameters:\n    * `amount`: `uint` - Amount of sBTC to withdraw\n    * `recipient`: `{ version: (buff 1), hashbytes: (buff 32) }` - Bitcoin address details\n    * `max-fee`: `uint` - Maximum fee for the withdrawal\n  * Returns: `(response uint uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#accept-withdrawal-request)\naccept-withdrawal-request\nAccepts a withdrawal request.\n  * Parameters:\n    * `request-id`: `uint` - Withdrawal request ID\n    * `bitcoin-txid`: `(buff 32)` - Bitcoin transaction ID\n    * `signer-bitmap`: `uint` - Bitmap of signers\n    * `output-index`: `uint` - Output index in the Bitcoin transaction\n    * `fee`: `uint` - Actual fee paid\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#reject-withdrawal-request)\nreject-withdrawal-request\nRejects a withdrawal request.\n  * Parameters:\n    * `request-id`: `uint` - Withdrawal request ID\n    * `signer-bitmap`: `uint` - Bitmap of signers\n  * Returns: `(response bool uint)`\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#complete-withdrawals)\ncomplete-withdrawals\nProcesses multiple withdrawal requests (accept or reject).\n  * Parameters:\n    * `withdrawals`: `(list 600 {...})` - List of withdrawal details\n  * Returns: `(response uint uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#read-only-functions)\nRead-only Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#validate-recipient)\nvalidate-recipient\nValidates the recipient's Bitcoin address format.\n  * Parameters:\n    * `recipient`: `{ version: (buff 1), hashbytes: (buff 32) }` - Bitcoin address details\n  * Returns: `(response bool uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#private-functions)\nPrivate Functions\n### \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#complete-individual-withdrawal-helper)\ncomplete-individual-withdrawal-helper\nHelper function to process individual withdrawals in the batch operation.\n  * Parameters:\n    * `withdrawal`: `{...}` - Individual withdrawal details\n    * `helper-response`: `(response uint uint)` - Accumulator for processing\n  * Returns: `(response uint uint)`\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#interactions-with-other-contracts)\nInteractions with Other Contracts\n  * `.sbtc-token`: Calls `protocol-lock`, `protocol-burn-locked`, `protocol-mint`, and `protocol-unlock` for token operations.\n  * `.sbtc-registry`: Calls `create-withdrawal-request`, `get-withdrawal-request`, `get-current-signer-data`, `complete-withdrawal-accept`, and `complete-withdrawal-reject` for managing withdrawal requests and signer data.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#security-considerations)\nSecurity Considerations\n  1. Access Control: Only the current signer principal can accept or reject withdrawal requests.\n  2. Dust Limit: Enforces a minimum withdrawal amount to prevent spam and ensure economic viability.\n  3. Fee Management: Ensures that the actual fee doesn't exceed the maximum fee set by the user.\n  4. Address Validation: Implements thorough validation of Bitcoin address formats.\n  5. State Management: Prevents double-processing of withdrawal requests.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal#bitcoin-address-types)\nBitcoin Address Types\nThe contract supports various Bitcoin address types, including:\n  * P2PKH (Pay-to-Public-Key-Hash)\n  * P2SH (Pay-to-Script-Hash)\n  * P2SH-P2WPKH (P2SH nested P2WPKH)\n  * P2SH-P2WSH (P2SH nested P2WSH)\n  * P2WPKH (Pay-to-Witness-Public-Key-Hash)\n  * P2WSH (Pay-to-Witness-Script-Hash)\n  * P2TR (Pay-to-Taproot)\n\n\nEach address type is represented by a specific version byte and hashbytes format in the recipient structure.\n[PrevioussBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)[NextAuxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1132,
      "title": "sBTC Withdrawal | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/auxiliary-features",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# Auxiliary Features\nThis section covers additional features that enhance the functionality and security of the sBTC system:\n  1. [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship): Allowing sBTC transactions to be sponsored\n  2. [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation): Enabling secure key rotation for sBTC Signers\n\n\nThese auxiliary features contribute to the overall robustness and user-friendliness of the sBTC ecosystem.\n[PrevioussBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)[NextTransaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 602,
      "title": "Auxiliary Features | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Overview](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#overview)\n  * [Implementation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#implementation)\n  * [User Experience](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#user-experience)\n  * [Benefits](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#benefits)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n\n\n# Transaction Fee Sponsorship\nTransaction Fee Sponsorship is a feature in sBTC that allows users to pay for Stacks transaction fees using sBTC instead of STX.\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#overview)\nOverview\n  * sBTC transactions on Stacks can be sponsored in return for some sBTC.\n  * This feature improves user experience by allowing sBTC holders to use their tokens for gas fees.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#implementation)\nImplementation\nThe fee sponsorship system is implemented using the approach suggested in [stacks-network/stacks-core#4235](https://github.com/stacks-network/stacks-core/issues/4235).\nKey points:\n  1. sBTC users can get support from existing STX holders for transaction fees.\n  2. The sponsor pays the STX fee and receives sBTC in return.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#user-experience)\nUser Experience\nFrom a user's perspective:\n  1. When initiating an sBTC transaction, they can opt for fee sponsorship.\n  2. The user agrees to pay a small amount of sBTC for the sponsorship.\n  3. The transaction is then processed with the fees paid in STX by the sponsor.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship#benefits)\nBenefits\n  1. **Improved UX** : Users don't need to hold STX to use sBTC.\n  2. **Lower Barrier to Entry** : New users can start using sBTC without first acquiring STX.\n  3. **Flexibility** : Provides an additional option for handling transaction fees.\n\n\n[PreviousAuxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)[NextSigner Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 754,
      "title": "Transaction Fee Sponsorship | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [How it works](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation#how-it-works)\n  * [The rotation process](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation#the-rotation-process)\n  * [When rotation occurs](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation#when-rotation-occurs)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n\n\n# Signer Wallet Rotation\nSigner wallet rotation allows sBTC signers to update their private keys and modify the signer set composition. This mechanism is how the network maintains security over time and adapts to changing participants.\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation#how-it-works)\nHow it works\nThe sBTC system uses a multi-signature wallet on Bitcoin to custody BTC deposits. When the system needs to change who controls this wallet - either by rotating keys or changing the signer set - it uses the rotation mechanism.\nAs of v1.1.0, the system supports:\n  * Adding new signers to the set\n  * Removing existing signers\n  * Replacing specific signers\n  * Rotating keys for current signers\n\n\nWhen signers agree on a new configuration, the system automatically runs a Distributed Key Generation (DKG) protocol to create new signing shares for the updated group. Once complete, control of the sBTC wallet transfers to the new configuration.\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation#the-rotation-process)\nThe rotation process\nHere's what happens during a typical rotation:\n  1. Signers coordinate off-chain to decide on the new signer set\n  2. Each signer operator updates their configuration with the newly decided set\n  3. Once all signers have configured the exact same set of signers, DKG occurs automatically\n  4. The new signer set takes control of the sBTC wallet\n\n\nThe Bitcoin UTXOs remain under continuous control throughout this process - there's no moment where funds are unsecured.\n## \n[](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation#when-rotation-occurs)\nWhen rotation occurs\nKey rotation typically happens when:\n**Signer changes** : When someone leaves the signer set or new participants join, the configuration must be updated to reflect the new membership.\n**Security events** : If a key might be compromised, an emergency rotation can be initiated to secure the system.\n[PreviousTransaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)[NextWalkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\nLast updated 1 month ago\nWas this helpful?\n",
      "wordCount": 839,
      "title": "Signer Wallet Rotation | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/walkthroughs",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# Walkthroughs\nThese walkthroughs describe at a high level exactly how users and signers can expect to interact with the sBTC system.\nRead these to get a firm understanding of what is actually happening under the hood of the sBTC system.\n[PreviousSigner Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)[NextSigner Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 591,
      "title": "Walkthroughs | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#introduction)\n  * [Signer Node Setup](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#signer-node-setup)\n  * [Day-to-Day Operations](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#day-to-day-operations)\n  * [1. Monitoring Deposit Requests](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#id-1.-monitoring-deposit-requests)\n  * [2. Processing Mint Requests](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#id-2.-processing-mint-requests)\n  * [3. Handling Withdrawal Requests](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#id-3.-handling-withdrawal-requests)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n\n\n# Signer Process Walkthrough\n## \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#introduction)\nIntroduction\nThis document provides a detailed overview of the sBTC system, focusing on the operations of an sBTC signer node. We'll explore the automated processes and software interactions that occur in the sBTC ecosystem.\nA step-by-step guide for setting up and running a sBTC signer node is in the works. This is a conceptual guide to help signers understand what their role looks like in the sBTC system.\n## \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#signer-node-setup)\nSigner Node Setup\nAs an sBTC signer, your primary responsibility is to run and maintain a signer node. Here's what that entails:\n  1. Hardware setup: Ensure your node has sufficient computational power and storage.\n  2. Software installation: Install the sBTC signer node software and its dependencies.\n  3. Key management: The node software securely generates and stores the Bitcoin private key and corresponding public key.\n  4. Node registration: Upon first run, the node automatically registers its public key with the sBTC Registry contract on the Stacks blockchain.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#day-to-day-operations)\nDay-to-Day Operations\nOnce set up, your signer node operates autonomously, performing the following tasks:\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#id-1.-monitoring-deposit-requests)\n1. Monitoring Deposit Requests\nYour node continuously monitors for sBTC minting requests:\n  1. The node connects to the Bitcoin network and the Stacks blockchain.\n  2. It watches for Bitcoin transactions sent to the sBTC UTXO address.\n  3. When a deposit is detected, the node verifies the transaction details.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#id-2.-processing-mint-requests)\n2. Processing Mint Requests\nUpon confirming a deposit:\n  1. The node automatically prepares a signature for the mint operation using its private key.\n  2. It submits this signature to the sBTC Deposit contract on the Stacks blockchain.\n  3. The contract verifies the signature and combines it with signatures from other signer nodes.\n  4. Once enough valid signatures are collected, the contract mints the corresponding amount of sBTC.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process#id-3.-handling-withdrawal-requests)\n3. Handling Withdrawal Requests\nFor sBTC withdrawal requests:\n  1. The node monitors the sBTC Withdrawal contract for new requests.\n  2. Upon detecting a request, it verifies the user's sBTC balance and the request's validity.\n  3. The node automatically signs the withdrawal operation and submits its signature.\n  4. Once enough signatures are collected and the sBTC is burned, the node participates in creating and signing a Bitcoin transaction to fulfill the withdrawal.\n  5. The signed Bitcoin transaction is broadcast to the Bitcoin network.\n\n\n[PreviousWalkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)[NextsBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 955,
      "title": "Signer Process Walkthrough | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Part 1: Deposit (BTC to sBTC)](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#part-1-deposit-btc-to-sbtc)\n  * [Step 1: Initiation](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-1-initiation)\n  * [Step 2: Proof Submission](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-2-proof-submission)\n  * [Step 3: Signer Validation](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-3-signer-validation)\n  * [Step 4: Bitcoin Transaction](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-4-bitcoin-transaction)\n  * [Step 5: sBTC Minting](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-5-sbtc-minting)\n  * [Step 6: Confirmation](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-6-confirmation)\n  * [Part 2: sBTC Usage](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#part-2-sbtc-usage)\n  * [Part 3: Withdrawal (sBTC to BTC)](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#part-3-withdrawal-sbtc-to-btc)\n  * [Step 1: Initiation](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-1-initiation-1)\n  * [Step 2: Signer Validation](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-2-signer-validation)\n  * [Step 3: Bitcoin Transaction](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-3-bitcoin-transaction)\n  * [Step 4: sBTC Burning and Confirmation](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-4-sbtc-burning-and-confirmation)\n  * [Step 5: Completion](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-5-completion)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n  3. [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n\n\n# sBTC Transaction Walkthrough\nLet's follow the journey of 1 BTC as it moves through the sBTC system, from initial deposit to final withdrawal.\n## \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#part-1-deposit-btc-to-sbtc)\nPart 1: Deposit (BTC to sBTC)\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-1-initiation)\nStep 1: Initiation\nAlice decides to convert 1 BTC to sBTC to participate in Stacks DeFi.\n  1. Alice creates a deposit transaction on the Bitcoin network (this will likely be done via a UI like the sBTC bridge or a DeFi application).\n  2. The transaction enters the Bitcoin mempool.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-2-proof-submission)\nStep 2: Proof Submission\n  1. Alice submits proof of her deposit to the Deposit API (this step is also usually done via an application's UI).\n  2. The Deposit API sets the deposit status to PENDING.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-3-signer-validation)\nStep 3: Signer Validation\nThe sBTC Signer Set:\n  1. Detects the deposit.\n  2. Validates the UTXO format.\n  3. Votes on the deposit.\n\n\nIf the deposit is rejected:\n  1. Signers notify the API of the rejection.\n  2. The Deposit API updates the status to FAILED.\n\n\nIf the deposit is accepted:\n  1. The Deposit API updates the status to ACCEPTED.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-4-bitcoin-transaction)\nStep 4: Bitcoin Transaction\nIf accepted, the sBTC Signer Set:\n  1. Creates a new Bitcoin transaction consuming Alice's deposited BTC.\n  2. Broadcasts this transaction to the Bitcoin network.\n\n\nIf this transaction fails:\n  1. Signers notify the API of the failure.\n  2. The Deposit API updates the status to FAILED.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-5-sbtc-minting)\nStep 5: sBTC Minting\nUpon successful Bitcoin transaction:\n  1. The sBTC Signer Set interacts with the Stacks blockchain.\n  2. They fulfill the deposit by minting 1 sBTC to Alice's Stacks address.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-6-confirmation)\nStep 6: Confirmation\n  1. The Deposit API updates the deposit status to CONFIRMED.\n  2. Alice now has 1 sBTC in her Stacks wallet.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#part-2-sbtc-usage)\nPart 2: sBTC Usage\nAlice can now use her 1 sBTC in the Stacks ecosystem:\n  1. She can transfer it to other users via the `sbtc-token` contract (again this will usually be done via an application UI).\n  2. Participate in DeFi applications.\n  3. Use it in any application that supports SIP-010 tokens.\n\n\n## \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#part-3-withdrawal-sbtc-to-btc)\nPart 3: Withdrawal (sBTC to BTC)\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-1-initiation-1)\nStep 1: Initiation\nAlice decides to withdraw her 1 sBTC back to BTC.\n  1. Alice interacts with the Clarity contract on the Stacks blockchain to initiate a withdrawal.\n  2. She specifies her Bitcoin address for the withdrawal.\n  3. If successful, the contract locks her sBTC and the withdrawal status is set to PENDING.\n  4. If the transaction fails, no withdrawal occurs.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-2-signer-validation)\nStep 2: Signer Validation\nThe sBTC Signer Set:\n  1. Detects the withdrawal request.\n  2. Decides whether to accept or reject the withdrawal.\n\n\nIf the withdrawal is rejected:\n  1. Signers unlock the sBTC.\n  2. The withdrawal status is updated to FAILED.\n\n\nIf the withdrawal is accepted:\n  1. The withdrawal status is updated to ACCEPTED.\n  2. Signers wait for 6 Bitcoin block confirmations (for security purposes).\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-3-bitcoin-transaction)\nStep 3: Bitcoin Transaction\nAfter the waiting period, if accepted:\n  1. The sBTC Signer Set creates a new Bitcoin transaction fulfilling Alice's withdrawal.\n  2. They broadcast this transaction to the Bitcoin network.\n\n\nIf this transaction fails:\n  1. Signers unlock the sBTC.\n  2. The withdrawal status is updated to FAILED.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-4-sbtc-burning-and-confirmation)\nStep 4: sBTC Burning and Confirmation\nUpon successful Bitcoin transaction:\n  1. The sBTC Signer Set burns the locked 1 sBTC on the Stacks blockchain.\n  2. The withdrawal status is updated to CONFIRMED.\n\n\n### \n[](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle#step-5-completion)\nStep 5: Completion\n  1. Alice now has her 1 BTC back in her specified Bitcoin address.\n  2. The withdrawn sBTC has been permanently removed from circulation.\n\n\n[PreviousSigner Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)[NextsBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1216,
      "title": "sBTC Transaction Walkthrough | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/sbtc-faq",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [sBTC Basics](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-basics)\n  * [sBTC Rewards Program](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-rewards-program)\n  * [Using sBTC](https://docs.stacks.co/concepts/sbtc/sbtc-faq#using-sbtc)\n  * [sBTC Troubleshooting](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-troubleshooting)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# sBTC FAQ\n### \n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-basics)\nsBTC Basics\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-is-sbtc)\nsBTC is a decentralizedl 1:1 Bitcoin-backed asset on the Stacks Bitcoin Layer. Read more about Stacks [here](https://www.stacks.co) and sBTC [here](https://www.stacks.co/sbtc).\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#how-does-sbtc-work)\n  1. sBTC is a SIP-010 token on the Stacks blockchain that represents Bitcoin (BTC) in a 1:1 ratio. sBTC is always backed 1:1 against BTC.\n  2. The sBTC peg wallet is maintained and managed by a set of sBTC signers. This decentralized approach enhances security and reduces single points of failure. Read more about Stacker Signing [here](https://docs.stacks.co/concepts/block-production/stackers-and-signing).\n\n\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-is-bitcoin-finality-and-why-is-it-important)\nStacks and sBTC state automatically fork with Bitcoin. As such, all transactions settle to Bitcoin with 100% Bitcoin Finality. This protects users against attacks to sBTC via a hard fork. This is a critical security measure that aligns sBTC security with Bitcoin. Read more in [the Stacks Documentation](https://docs.stacks.co/concepts/block-production/bitcoin-finality).\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#how-does-the-stacks-signer-network-improve-security)\nSigners are responsible for approving all sBTC deposit and withdrawal operations, ensuring the integrity of the system. With a requirement of 70% consensus for transaction approval, Signers maintain the protocol's liveness and security.\nTo launch sBTC, the Stacks community approved [SIP-028](https://github.com/stacksgov/sips/blob/69d40a5f4f0ad98eb448ba44e7c31ca054820aa3/sips/sip-028-sbtc_peg.md), defining the criteria for selecting signers based on factors such as technical expertise, reliability, performance, and decentralization. An initial group of 15 institutional Signers has been chosen for Phase 1 to maintain simplicity and reduce operational risks. This group will expand over time as the protocol matures.\nThe list of sBTC signers is public and listed [here](https://bitcoinl2labs.com/sbtc-rollout#sbtc-signers).\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-security-measures-have-been-put-in-place-to-ensure-sbtc-is-safe)\nsBTC is always backed 1:1 against BTC, and it's verifiably secure through threshold cryptography. sBTC removes the need for 3rd party custodian or trusted setup. Instead, BTC is secured by a decentralized signer set.\nPartnerships with top-tier security experts have been established to ensure the protocol is fortified at every level:\n  1. **Asymmetric Research:** [Asymmetric Research](https://www.asymmetric.re) is a core security contributor. Known for their rigorous research and protocol audits, Asymmetric brings security expertise to sBTC to identify and mitigate potential vulnerabilities.\n  2. **ImmuneFi:** A robust bug bounty program incentivizes ethical hackers to uncover and address potential issues, adding an additional layer of defense.\n  3. **3rd Party Audits:** Several third-party security audits have been conducted on the sBTC system and can be referenced on the [sBTC Audits page](https://docs.stacks.co/concepts/sbtc/sbtc-audits).\n\n\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-sets-sbtc-apart)\nHere are the main differentiating characteristics of sBTC:\n  * sBTC is a true Bitcoin native product\n  * sBTC is backed by respected leaders in the Bitcoin community (signer network)\n  * sBTC's security is provided by a decentralized network of validators/signers rather than a single custodian, removing the need to trust a single entity or exchange\n  * sBTC leverages 100% Bitcoin finality\n  * sBTC's technology offers optimal UX and DevEx for an L2\n  * sBTC is a fully transparent project/product working in the open with public code\n\n\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#where-can-i-learn-more-about-the-sbtc-signers)\nRead the \"[Selection of sBTC Signer Set](https://github.com/stacks-network/sbtc/discussions/624)\" post for more information about each signer and their qualifications.\n### \n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-rewards-program)\nsBTC Rewards Program\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#where-does-the-yield-paid-in-btc-come-from)\nThe sBTC Rewards Program is powered by a group of Stackers \"Stacking\" STX to a designated reward address, contributing their BTC rewards to the program.\nWhen Stacking STX, Stackers receive BTC through Stack's [Proof-of-Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer) (PoX) consensus mechanism. For example, over a given 2-week period, the Stacks protocol has historically [distributed around 10% APY to Stackers](https://www.stacking-tracker.com/), paid in BTC.\nTo enable the sBTC Rewards Program, these stackers contribute the corresponding Proof of Transfer BTC rewards to the sBTC incentive pool. This BTC from the incentive pool is directly deposited into a smart contract that bridges the BTC to sBTC and distributes the rewards pro rata to sBTC holders.\nThe program is designed to increase sBTC liquidity and drive early usage of the protocol.\nHere's a handy illustration to show the sBTC incentives design:\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252F1lWKhl1OxT25XsUdwt4A%252Fsbtc-design.png%3Falt%3Dmedia%26token%3D564bdfb6-df8a-4348-a200-c7081a786d04&width=300&dpr=4&quality=100&sign=965caa03&sv=2)\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#how-are-rewards-distributed)\nsBTC is automatically distributed every two weeks to the STX address used to enroll in your non-custodial wallet.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-do-i-have-to-do-to-be-eligible-for-rewards)\nTo be eligible, you must enroll in the rewards program at bitcoinismore.org.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#do-i-need-to-re-enroll-in-the-sbtc-rewards-program-if-i-previously-enrolled-in-the-sbtc-rewards-prog)\nNo re-enrollment is needed. The Yield smart contract will automatically calculate enrolled users updated balance, as long as the sBTC contract address remains the same.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-level-of-rewards-should-i-expect)\nThe level of rewards users can expect will vary based on the amount of STX in the rewards pool, the PoX yield rate, and the amount of sBTC that has been minted.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-is-the-difference-between-pox-rewards-and-the-sbtc-rewards-program)\nPoX Bitcoin rewards are earned by Stackers who lock up their STX tokens to secure the Stacks network, a process that has been ongoing since the launch of Stacks.\nThe sBTC Rewards Program, on the other hand, offers additional BTC rewards specifically for early adopters who hold sBTC without requiring them to participate in network consensus or lock up any tokens.\n### \n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#using-sbtc)\nUsing sBTC\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#when-will-sbtc-be-available)\nsBTC deposits first went live on December 16, 2024, quickly hitting the 1,000 BTC cap. The second cap will go live on February 25th, 2025, quickly hitting the 3,000 BTC cap. Withdrawals went live on April 30, 2025.\nFull decentralization of the Signer set will follow in [a subsequent phase](https://bitcoinl2labs.com/sbtc-rollout), gradually expanding beyond the initial 15 community-elected signers.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-wallets-are-supported-for-sbtc)\n[Xverse](https://www.xverse.app) and [Leather](https://leather.io) wallets are supported ‚Äî two leading wallets with seamless integrations designed for Bitcoin and Stacks users.\nIn addition, [Ledger](https://www.ledger.com/) and [Asigna](https://www.asigna.io/) support sBTC.\nWe are actively working with institutional custodians, staking providers, and other 3rd party wallets to support sBTC. More will be announced.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#why-is-there-a-.01-btc-minimum-for-btc-to-sbtc-deposits)\nA .01 BTC minimum is imposed for BTC to sBTC deposits to ensure the system does not get spammed by many smaller transactions. We are exploring reducing the deposit minimum for future phases.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#what-are-the-steps-to-use-the-sbtc-bridge-and-earn-rewards)\nIn the Stacks Documentation, find a [video](https://www.youtube.com/watch?v=XZruuDgTo4k&t=1s) and a [more detailed walkthrough](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge).\n  1. Ensure BTC is accessible via one of the following non-custodial wallets: [Xverse](https://www.xverse.app), [Leather](https://leather.io), [Ledger](https://www.ledger.com/), or [Asigna](https://www.asigna.io/).\n  2. To interact with the sBTC protocol and mint sBTC, head to [app.stacks.co](http://app.stacks.co) and connect your non-custodial wallet with BTC ready to deposit.\n  3. Enter the BTC amount to convert to sBTC ([app.stacks.co](http://app.stacks.co) will guide you through this step).\n  4. Enter your Stacks receiving address to initiate the transfer ([app.stacks.co](http://app.stacks.co) will guide you through this step).\n  5. After your sBTC has been minted to your wallet, visit the rewards program site at [bitcoinismore.org](https://bitcoinismore.org/) and connect your wallet. Then click the 'Earn Rewards' button. Read more in [the Stacks Documentation](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards).\n  6. Seamlessly start earning sBTC rewards. sBTC is automatically paid every two weeks to the STX address used to enroll in your non-custodial wallet.\n\n\n**Note:** There is an initial lock-up period until withdrawals are activated in March. Following the lock-up period, sBTC can always be withdrawn.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#how-long-will-it-take-for-my-btc-deposit-to-confirm)\nsBTC facilitates rapid movement between BTC and sBTC.\n  1. BTC to sBTC conversion can be completed within 3 Bitcoin blocks (under an hour).\n  2. sBTC to BTC conversion can be completed within 6 Bitcoin blocks (Approximately two hours)\n\n\nRead more in the [Stacks Documentation](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times).\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#why-is-there-a-cap-on-the-total-btc-pegged-in)\nA BTC cap will be implemented to ensure a smooth rollout process with a focus on security.\nIn addition, the BTC cap will give developers the time to focus on the sBTC user experience and integration with DeFi applications across the Stacks ecosystem prior to opening sBTC for all users.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#are-there-any-associated-fees-with-minting-sbtc)\nThere are two transaction fees required to mint your sBTC. The first is set by the user manually when they initiate the deposit transaction within their wallet.\nThe second is a fee used to consolidate the deposit UTXOs into the single signer UTXO. This separate transaction fee happens automatically and is set to a max of 80k sats. This is automatically deducted from your minted sBTC. This is not a signer fee but a regular Bitcoin transaction fee.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#are-there-multi-signature-solutions-for-sbtc)\nYes. [Asigna](https://www.asigna.io) provides a multi-signature solution for sBTC users.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#are-custodians-available-to-support-sbtc)\nAt the moment, there is no custodian support for sBTC. However, we are actively working with institutional custodians to support sBTC.\nCopper and BitGo already support Stacks and Stacking; however, we are working to prioritize SIP-10 and sBTC integration.\n### \n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-troubleshooting)\nsBTC Troubleshooting\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#my-bitcoin-transaction-confirmed-but-im-not-seeing-the-sbtc-token-in-my-wallet)\nYou may need to enable the display of the sBTC token within your wallet by clicking on 'Manage Tokens' and enabling sBTC.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FHDRmiFgLNBlruFgIAA4g%252Fimage.png%3Falt%3Dmedia%26token%3Da65bc8fe-6ff4-41f8-bf6f-08e333aa51cf&width=300&dpr=4&quality=100&sign=5c649ae3&sv=2)\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#i-received-an-errors.invalid_transaction-error-when-using-an-xverse-wallet)\nIf you received a \"Errors.Invalid_Transaction\" error when using an Xverse Wallet, you may be using a \"Nested SegWit\" wallet. To resolve the issue, change your Xverse wallet to use the \"Native SegWit\".\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#sbtc-still-isnt-showing-up-in-wallet-after-3-bitcoin-blocks.-how-much-longer-do-i-have-to-wait)\nBTC to sBTC conversions are typically completed within 3 Bitcoin blocks. Due to the speed of Bitcoin blocks, deposits can take up to two hours to see sBTC in your wallet.\nHowever, there may be a lag with your Leather or Xverse wallet where the sBTC will take another 20 minutes to show up in the wallet.\n[](https://docs.stacks.co/concepts/sbtc/sbtc-faq#i-didnt-receive-a-confirmation-that-i-enrolled-in-the-rewards-program.-how-can-i-ensure-im-enrolled)\nVisit [bitcoinismore.org](https://bitcoinismore.org). On the enroll page, when your wallet is linked, it will say enrolled if you are enrolled in the program.\n[PrevioussBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)[NextsBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\nLast updated 23 days ago\nWas this helpful?\n",
      "wordCount": 1998,
      "title": "sBTC FAQ | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/sbtc/sbtc-audits",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [sBTC](https://docs.stacks.co/concepts/sbtc)\n\n\n# sBTC Audits\nSeveral third-party security audits have been conducted on the sBTC system and can be referenced here.\n[2MB Clarity Alliance - sBTC-2.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FsZgx6Hel7y0EA2R2PzK5%2FClarity%20Alliance%20-%20sBTC-2.pdf?alt=media&token=5ba88a49-00c3-4d6a-ab49-1c86f94e8ac3)\n[826KB CoinFabrik_WSTS.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2F4kVIrkbTxeaXtFcBUS0A%2FCoinFabrik_WSTS.pdf?alt=media&token=b429572d-abe2-4bbb-9157-ce842750fd09)\n[1012KB Ottersec - stacks_sbtc_audit_final.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2FxR9sRWlw2FPe4oLPkapD%2FOttersec%20-%20stacks_sbtc_audit_final.pdf?alt=media&token=14475a65-6a30-40fe-b705-247e573fa64d)\n[1MB Ottersec - stacks_wsts_audit_final.pdf pdf ](https://3192840851-files.gitbook.io/~/files/v0/b/gitbook-x-prod.appspot.com/o/spaces%2FkmQRCSAss8rGMUFc587c%2Fuploads%2F8nEIPzZzgOR0cFMvNxeU%2FOttersec%20-%20stacks_wsts_audit_final.pdf?alt=media&token=3dc02a96-251b-4a61-a613-26e104a12bc2)\n[PrevioussBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)[NextGaia](https://docs.stacks.co/concepts/gaia)\nLast updated 23 days ago\nWas this helpful?\n",
      "wordCount": 589,
      "title": "sBTC Audits | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/gaia",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Understand Gaia in the Stacks architecture](https://docs.stacks.co/concepts/gaia#understand-gaia-in-the-stacks-architecture)\n  * [User control or how is Gaia decentralized?](https://docs.stacks.co/concepts/gaia#user-control-or-how-is-gaia-decentralized)\n  * [Understand data storage](https://docs.stacks.co/concepts/gaia#understand-data-storage)\n  * [Gaia versus other storage systems](https://docs.stacks.co/concepts/gaia#gaia-versus-other-storage-systems)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Gaia\nApps built with the Stacks blockchain can store off-chain data using a storage system called Gaia.\nGaia is a unique approach to decentralized storage that focuses primarily on user-ownership of data, rather than immutable on-chain storage. The emphasis here is on user control.\nWhile on-chain storage solutions like IPFS and Arweave are designed for immutable, censorship-resistant permanent storage, they cannot be deemed as providing user control of the data since the user cannot modify or remove the data once it has been deployed.\nGaia solves a different problem of allowing users to be in control of where their data is stored while connecting the access of that data to their on-chain Stacks identity.\nWhereas public transactional metadata is best stored on the Stacks blockchain, user application data can often be stored more efficiently and privately in Gaia storage.\nStoring data off of the blockchain ensures that Stacks applications can provide users with high performance and high availability for data reads and writes without introducing central trust parties.\n### \n[](https://docs.stacks.co/concepts/gaia#understand-gaia-in-the-stacks-architecture)\nUnderstand Gaia in the Stacks architecture\nThe following diagram depicts the Stacks architecture and Gaia's place in it:\nBlockchains require consensus among large numbers of people, so they can be slow. Additionally, a blockchain is not designed to hold a lot of data. This means using a blockchain for every bit of data a user might write and store is expensive. For example, imagine if an application were storing every tweet in the chain.\nThe Stacks blockchain addresses performance problems using a layered approach. The base layer consists of the Stacks blockchain and the Blockchain Naming System (BNS). The blockchain governs ownership of identities in the Stacks network. Identities can be names such as domain names, usernames, or application names.\nWhen an identity is created, its creation is recorded in the Stacks blockchain. Identities make up the primary data stored into the Stacks blockchain. These identities correspond to routing data in the OSI stack. The routing data is stored in the Atlas Peer Network, the second layer. Every core node that joins the Stacks Network is able to obtain an entire copy of this routing data. Stacks uses the routing data to associate identities (domain names, user names, and application names) with a particular storage location in the final layer, the Gaia Storage System.\nA Gaia Storage System consists of a _hub service_ and storage resource on a cloud software provider. The storage provider can be any commercial provider such as Azure, DigitalOcean, Amazon EC2, and so forth. Typically the compute resource and the storage resource reside same cloud vendor, though this is not a requirement. Gaia currently has driver support for S3, Azure Blob Storage, Google Cloud Platform and local disk, but the driver model allows for other backend support as well.\nGaia stores data as a simple key-value store. When an identity is created, a corresponding data store is associated with that identity on Gaia. When a user logs into a dApp, the authentication process gives the application the URL of a Gaia hub, which then writes to storage on behalf of that user.\nThe Stacks blockchain stores only identity data. Data created by the actions of an identity is stored in a Gaia Storage System. Each user has profile data. When a user interacts with a decentralized dApp that application stores application data on behalf of the user. Because Gaia stores user and application data off the blockchain, a Stacks DApp is typically more performant than DApps created on other blockchains.\n### \n[](https://docs.stacks.co/concepts/gaia#user-control-or-how-is-gaia-decentralized)\nUser control or how is Gaia decentralized?\nA Gaia hub runs as a service which writes to data storage. The storage itself is a simple key-value store. The hub service writes to data storage by requiring a valid authentication token from a requestor. Typically, the hub service runs on a compute resource and the storage itself on separate, dedicated storage resource. Typically, both resources belong to the same cloud computing provider.\nGaia's approach to decentralization focuses on user control of data and its storage. Users can choose a Gaia hub provider. If a user can choose which Gaia hub provider to use, then that choice is all the decentralization required to enable user-controlled applications. Moreover, Gaia defines a uniform API for applications to access that data.\nThe control of user data lies in the way that user data is accessed. When an application fetches a file `data.txt` for a given user `alice.id`, the lookup will follow these steps:\n  1. Fetch the `zonefile` for `alice.id`.\n  2. Read her profile URL from her `zonefile`.\n  3. Fetch Alice's profile.\n  4. _Verify_ that the profile is signed by `alice.id`'s key\n  5. Find the read-only url out of the profile's `appsMeta` section (e.g. `https://example-app.gaia.alice.org`).\n  6. Fetch the file from `https://example-app.gaia.alice.org/data.txt`.\n\n\nBecause `alice.id` has access to her [zonefile](https://docs.stacks.co/references/bns-contract#name-update), she can change where her profile is stored. For example, she may do this if the current profile's service provider or storage is compromised. To change where her profile is stored, she changes her Gaia hub URL to another Gaia hub URL. If a user has sufficient compute and storage resources, a user may run their own Gaia Storage System and bypass a commercial Gaia hub provider all together.\nUsers with existing identities cannot yet migrate their data from one hub to another.\nApplications writing directly on behalf of `alice.id` do not need to perform a lookup. Instead, the [Stacks authentication flow](https://stacks.js.org) provides Alice's chosen gaia hub URL to the application. This authentication flow _is also_ within Alice's control because Alice's wallet _must_ generate the authentication response.\n### \n[](https://docs.stacks.co/concepts/gaia#understand-data-storage)\nUnderstand data storage\nA Gaia hub stores the written data _exactly_ as given. It offers minimal guarantees about the data. It does not ensure that data is validly formatted, contains valid signatures, or is encrypted. Rather, the design philosophy is that these concerns are client-side concerns.\nClient libraries (such as [`Stacks.js`](https://stacks.js.org/)) are capable of providing these guarantees. A liberal definition of the [end-to-end principle](https://en.wikipedia.org/wiki/End-to-end_principle) guides this design decision.\nWhen an application writes to a Gaia hub, an authentication token, key, and the data are passed to the Gaia hub.\nThe token ensures the app has the authorization to write to the hub on the user's behalf.\n### \n[](https://docs.stacks.co/concepts/gaia#gaia-versus-other-storage-systems)\nGaia versus other storage systems\nHere's how Gaia stacks up against other decentralized storage systems. Features that are common to all storage systems are omitted for brevity.\nFeatures\n[Gaia](https://github.com/stacks-network/gaia)\n[Sia](https://sia.tech/)\n[Storj](https://storj.io/)\n[IPFS](https://ipfs.io/)\n[DAT](https://datproject.org/)\n[SSB](https://www.scuttlebutt.nz/)\nUser controls where data is hosted\nX\nData can be viewed in a normal Web browser\nX\nX\nData is read/write\nX\nX\nX\nData can be deleted\nX\nX\nX\nData can be listed\nX\nX\nX\nX\nX\nDeleted data space is reclaimed\nX\nX\nX\nX\nData lookups have predictable performance\nX\nX\nWrites permission can be delegated\nX\nListing permission can be delegated\nX\nSupports multiple backends natively\nX\nX\nData is globally addressable\nX\nX\nX\nX\nX\nNeeds a cryptocurrency to work\nX\nX\nData is content-addressed\nX\nX\nX\nX\nX\n[PrevioussBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)[NextConfiguration](https://docs.stacks.co/concepts/gaia/configuration)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1738,
      "title": "Gaia | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/gaia/configuration",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Configuration files](https://docs.stacks.co/concepts/gaia/configuration#configuration-files)\n  * [GAIA Admin Service](https://docs.stacks.co/concepts/gaia/configuration#gaia-admin-service)\n  * [Driver Selection](https://docs.stacks.co/concepts/gaia/configuration#driver-selection)\n  * [Note on SSL](https://docs.stacks.co/concepts/gaia/configuration#note-on-ssl)\n  * [Require Correct Hub URL](https://docs.stacks.co/concepts/gaia/configuration#require-correct-hub-url)\n  * [The readURL parameter](https://docs.stacks.co/concepts/gaia/configuration#the-readurl-parameter)\n  * [Minimum Proofs Requirement](https://docs.stacks.co/concepts/gaia/configuration#minimum-proofs-requirement)\n  * [CDN & Replicated Hubs](https://docs.stacks.co/concepts/gaia/configuration#cdn-and-replicated-hubs)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Gaia](https://docs.stacks.co/concepts/gaia)\n\n\n# Configuration\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#configuration-files)\nConfiguration files\nThe following configuration files exist in the folder `deploy/configs/gaia/`:\nCopy```\nadmin-config.json\nhub-config.json\nreader-config.json\n```\n\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#gaia-admin-service)\nGAIA Admin Service\nYou can also use the GAIA Admin Service to remotely administer it with an API Key. It will require you to install `npm` with a `apt install npm`. Once `npm` is installed you can continue with the steps in the [GAIA Admin Service](https://github.com/stacks-network/gaia/blob/master/admin/README.md).\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#driver-selection)\nDriver Selection\nThe Gaia hub currently supports the following drivers:\nCopy```\n'aws' == Amazon S3\n'azure' == Azure Blob Storage\n'disk' == Local disk\n'google-cloud' === Google Cloud Storage\n```\n\nSet the driver you wish to use in your [config.json](https://github.com/stacks-network/gaia/blob/master/hub/config.sample.json) file with the `driver` parameter. Many drivers additionally accept the `bucket` parameter, which controls the bucket name that files should be written to.\nThese driver may require you to provide additional credentials for performing writes to the backends. See `config.sample.json` for fields for those credentials. In some cases, the driver can use a system configured credential for the backend (e.g., if you are logged into your AWS CLI account, and run the hub from that environment, it won't need to read credentials from your `config.json`).\n:::caution The disk driver requires a *nix like filesystem interface, and will not work correctly when trying to run in a Windows environment. :::\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#note-on-ssl)\nNote on SSL\nWe _strongly_ recommend that you deploy your Gaia hub with SSL enabled. Otherwise, the tokens used to authenticate with the Gaia hub may be stolen by attackers, which could allow them to execute writes on your behalf. Configuration options are available to run the hub with an `https` Node.js server. Otherwise, a reverse proxy web server such as nginx or Apache can be used.\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#require-correct-hub-url)\nRequire Correct Hub URL\nIf you turn on the `requireCorrectHubUrl` option in your `config.json` file, your Gaia hub will require that authentication requests correctly include the `hubURL` they are trying to connect with. This is used to prevent a malicious gaia hub from using an authentication token for itself on other Gaia hubs.\nBy default, the Gaia hub will validate that the supplied URL matches `https://${config.serverName}`, but if there are multiple valid URLs for clients to reach the hub at, you can include a list in your `config.json`:\nCopy```\n{\n  ....\n  serverName: \"normalserver.com\"\n  validHubUrls: [ \"https://specialserver.com/\",\n                  \"https://legacyurl.info\" ]\n  ....\n}\n```\n\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#the-readurl-parameter)\nThe readURL parameter\nBy default, the gaia hub drivers will return read URLs which point directly at the written content. For example, an S3 driver would return the URL directly to the S3 file. However, if you configure a CDN or domain to point at that same bucket, you can use the `readURL` parameter to tell the gaia hub that files can be read from the given URL. For example, the `hub.blockstack.org` Gaia Hub is configured to return a read URL that looks like `https://gaia.blockstack.org/hub/`.\nUnset this configuration parameter if you do not intend to deploy any caching.\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#minimum-proofs-requirement)\nMinimum Proofs Requirement\nThe gaia hub can also be configured to require a minimum number of social proofs in a user's profile to accept writes from that user. This can be used as a kind of spam-control mechanism. However, we recommend for the smoothest operation of your gaia hub, to set the `proofsConfig.proofsRequired` configuration key to `0`.\n### \n[](https://docs.stacks.co/concepts/gaia/configuration#cdn-and-replicated-hubs)\nCDN & Replicated Hubs\n  * https://docs.microsoft.com/en-us/azure/storage/blobs/storage-https-custom-domain-cdn\n  * The hub implementation is designed to be ran from a single Node.js instance. If the hub instance is sharded (e.g. replicated hubs via load balancing), then any given `bucket` (identified by URI segment) must be served by the same instance, At least a couple elements of the Gaia Hub depend on this: token invalidation in-memory caching, and resource endpoint 409 contention behavior.\n\n\n[PreviousGaia](https://docs.stacks.co/concepts/gaia)[NextDeploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1201,
      "title": "Configuration | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/gaia/deploy-gaia-hub",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Gaia](https://docs.stacks.co/concepts/gaia)\n\n\n# Deploy Gaia Hub\n### \n[](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub#deploy-your-gaia-hub)\nDeploy your GAIA hub\nTutorials to deploy your own GAIA hub are currently available for Linux, MacOS and Amazon EC2 / CloudFormation.\nRegardless of what server the Gaia Hub runs on, the storage it uses can currently be deployed on multiple platforms:\n  * Local disk (the server itself)\n  * Amazon S3\n  * Azure Blob Storage\n  * Google Cloud\n\n\n[PreviousConfiguration](https://docs.stacks.co/concepts/gaia/configuration)[NextAmazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 611,
      "title": "Deploy Gaia Hub | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/gaia/amazon-ec2",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/gaia/amazon-ec2#introduction)\n  * [Prerequisites](https://docs.stacks.co/concepts/gaia/amazon-ec2#prerequisites)\n  * [Setup steps](https://docs.stacks.co/concepts/gaia/amazon-ec2#setup-steps)\n  * [Accessing your Gaia hub with SSH](https://docs.stacks.co/concepts/gaia/amazon-ec2#accessing-your-gaia-hub-with-ssh)\n  * [Graphical representation of the cloudformation template](https://docs.stacks.co/concepts/gaia/amazon-ec2#graphical-representation-of-the-cloudformation-template)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Gaia](https://docs.stacks.co/concepts/gaia)\n\n\n# Amazon EC2\n### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#introduction)\nIntroduction\nThe template provided on this page provides an easy way to deploy a Gaia hub directly to Amazon EC2. You can use this template to deploy your own Gaia hub to your Amazon Web Services (AWS) account. Amazon EC2 is an affordable and convenient cloud computing provider. The template provides a one-click deploy for Amazon EC2 with either S3 or EBS as a storage provider.\n### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#prerequisites)\nPrerequisites\nThis procedure uses Amazon CloudFormation to configure an EC2 cloud compute provider to run the Gaia hub service with an S3 or EBS provider for file storage. You should have access to an AWS account either through your personal account or through a corporate account. This account should have permissions to create resources.\nAdditionally, you must also own a domain name and be able to update the DNS records associated with that domain name.\n### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#setup-steps)\nSetup steps\n#### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#step-1-create-stack)\nStep 1 - Create Stack\nUse a link in the table to launch the [CloudFormation](https://console.aws.amazon.com/cloudformation/) template in the AWS region that you wish to deploy a Gaia hub.\n#### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#step-2-setup-stack-using-template)\nStep 2 - Setup stack using template\nYou need to configure the template with the appropriate values for your hub and domain it runs on.\nSelect `Template is ready` and `Amazon S3 URL` and enter the following Amazon S3 URL:\nCopy```\nhttps://s3-external-1.amazonaws.com/cf-templates-vzldibfi2mw8-us-east-1/2022160J6G-cloudformation.yaml\n```\n\nIf you prefer you can instead select `Template is ready` and `Upload a template file` to upload the template file `cloudformation.yaml`.\nThe latest `cloudformation.yaml` file can be downloaded [here](https://raw.githubusercontent.com/stacks-network/gaia/master/deploy/cloudformation.yaml). On most browsers you can right-click on that page and click on `Save page as` to download the file. Alternatively, you can copy/paste the text into a text file called `cloudformation.yaml`.\nThen click `Next`.\n#### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#step-3-specify-stack-details)\nStep 3 - Specify stack details\nSpecify the stack details and then click `Next`:\nField\nValue\nNotes\nStack name\n_a unique name in your AWS account_\ne.g.: my_gaia_hub\nDomainName\n_your-domain_\nEmailAddress\n_your email address_\nGaiaBucketName\n_S3 bucket name_\nThe template combines this name with the stack name to create a unique S3 bucket. The template ignores this field if GaiaStorageType is set to `disk`.\nGaiaStorageType\n`s3` or `disk`\nSelect the GaiaStorageType of which to use as a backend for the Gaia Hub. Selecting `s3` causes the template to create an S3 bucket based on the name given in the previous field. Selecting `disk` causes the template to attach a separate EBS volume to the EC2 instance for Hub storage.\nInstanceType\nt2.micro\nSelect the instance type you want. Default value is `t2.micro`.\nKeyName\nIn the KeyName drop-down, select an [EC2 KeyPair](https://console.aws.amazon.com/ec2/v2/home?region=us-east-1#KeyPairs:) to enable SSH access to the EC2 instance. You should download the `.pem` keyfile for this pair from the EC2 console. For more information see the [EC2 key pair documentation](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-key-pairs.html#prepare-key-pair)\nSSHLocation\n0.0.0.0/0\nLeave the SSHLocation field with the default value of `0.0.0.0/0` to enable SSH access from any IP address. If you wish to restrict SSH access to the EC2 instance to a certain IP, you can update this field.\nSubnetId\n_subnetid_\nSelect a public subnet\nVpcId\n_vpcid_\n#### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#step-4-configure-stack-options)\nStep 4 - Configure stack options\nConfigure any stack options that fit your desired setup and click `Next`. All these fields are optional.\n#### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#step-5-review)\nStep 5 - Review\nReview the configuration of your Gaia hub, select the checkbox to acknowledge that AWS may create IAM resources with custom names and click on `Create stack`.\n#### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#step-6-retrieve-the-public-ip-of-your-gaia-hub)\nStep 6 - Retrieve the public IP of your Gaia hub\nYour stack can take several minutes to launch. You can monitor the Events tab of your hub to review the current progress of the launch. When the launch is complete, the Outputs tab displays information about the hub. Select the PublicIP and copy it to configure your domain name.\nCreate an `A` DNS record pointing to the given IP in your domain.\nWait a few minutes for the DNS record to propagate, and your should be able to access your Gaia hub with SSH.\n### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#accessing-your-gaia-hub-with-ssh)\nAccessing your Gaia hub with SSH\nTo SSH into your Gaia hub EC2 host directly, you must have the keyfile used in container creation. Access the host with the following command in your terminal:\nCopy```\nssh -i <your keyfile.pem> admin@<public_ip_address>\n```\n\n:::tip If you can only access SSH with the IP but not with the DNS name and you wish to do so, you can optionally activate it by following these steps:\nCopy```\nOpen your [AWS Console](https://console.aws.amazon.com)\nClick on `Service` -> VPC\nOpen Your VPCs\nSelect your VPC connected to your Gaia Hub\nClick `Actions` -> `Edit DNS Hostnames` -> Change `DNS hostnames` to `Enable`\n```\n\n:::\n### \n[](https://docs.stacks.co/concepts/gaia/amazon-ec2#graphical-representation-of-the-cloudformation-template)\nGraphical representation of the cloudformation template\n[PreviousDeploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)[NextLinux](https://docs.stacks.co/concepts/gaia/linux)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1350,
      "title": "Amazon EC2 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/gaia/linux",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Gaia](https://docs.stacks.co/concepts/gaia)\n\n\n# Linux\nThis configuration will setup the following 4 docker containers:\n  * Nginx with certbot on TCP ports 80 and 443.\n  * Gaia hub on TCP port 3000.\n  * Gaia admin on TCP port 8009.\n  * Gaia reader on TCP port 8008\n\n\n**1. Update the system and install the dependencies and software we will use to test:**\nCopy```\naptupdate&&aptupgrade-y&&aptinstall-ygitvimgnupgjq\n```\n\n**2. Install** [**docker**](https://docs.docker.com/engine/install/debian/) **and** [**docker-compose**](https://docs.docker.com/compose/cli-command/#install-on-linux) in your OS. For our example we install _docker_ with:\nCopy```\ncurl-fsSLhttps://download.docker.com/linux/debian/gpg|sudogpg--dearmor-o/usr/share/keyrings/docker-archive-keyring.gpg\necho \\\n\"deb [arch=$(dpkg--print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian \\\n  $(lsb_release-cs) stable\"|sudotee/etc/apt/sources.list.d/docker.list>/dev/null\naptupdate&&aptinstall-ydocker-cedocker-ce-clicontainerd.io\n```\n\nInstall _docker-compose_ by downloading the [latest-release](https://github.com/docker/compose/releases):\nCopy```\nVERSION_DC=$(curl--silenthttps://api.github.com/repos/docker/compose/releases/latest|jq.name-r)\nDESTINATION_DC=~/.docker/cli-plugins\nmkdir-p ${DESTINATION_DC}\ncurl-SLhttps://github.com/docker/compose/releases/download/${VERSION_DC}/docker-compose-linux-x86_64-o ${DESTINATION_DC}/docker-compose\nchmod+x ${DESTINATION_DC}/docker-compose\n```\n\n**3. Clone the GAIA repository** and enter it's docker directory.\nCopy```\ngit clone https://github.com/stacks-network/gaia.git && cd gaia/deploy/docker\n```\n\n**4. Copy and edit appropriate .env file**. In the folder `./deploy/docker/` they are different sample files for different configurations like using aws, azure or disk among others. In this example we will store the data locally so we will copy the _disk_ file and update the domain and email fields. Please change `gaia.site.com` and `gaiarocks@mydomain.com` accordingly. Note you need both for the SSL certificate to be created correctly.\nCopy```\nexport MYGAIADOMAIN=gaia.site.com\nexport MYGAIAEMAIL=gaiarocks@mydomain.com\ncp sample-disk.env disk.env\nsed -i 's/my-domain.com/'\"$MYGAIADOMAIN\"'/g' disk.env\nsed -i 's/my-email@example.com/'\"$MYGAIAEMAIL\"'/g' disk.env\n\n```\n\n**5. Start GAIA HUB service**\nTo start GAIA HUB\nCopy```\n./gaiahub.sh start\n```\n\nTo stop GAIA HUB\nCopy```\n./gaiahub.sh stop\n```\n\nTo view GAIA HUB status\nCopy```\n./gaiahub.sh status\n```\n\n**6. Verify server works locally** with the following command:\nCopy```\ncurl -sk http://localhost/hub_info | jq\n```\n\nA correct result should look similar to this:\nCopy```\n    {\n      \"challenge_text\": \"[\\\"gaiahub\\\",\\\"0\\\",\\\"gaia-0\\\",\\\"blockstack_storage_please_sign\\\"]\",\n      \"latest_auth_version\": \"v1\",\n      \"max_file_upload_size_megabytes\": 20,\n      \"read_url_prefix\": \"https://gaia.site.com/reader/\"\n    }\n```\n\n**7. Test your GAIA HUB** Running `gaia_test.js` will test your GAIA Hub, by trying to connect to it, uploading a file and downloading it again.\nFirst install all required dependencies with:\nCopy```\nnpm install\n```\n\nThen, from the root folder of the project type:\nCopy```\nnode ./deploy/gaia_test.js https://yourgaiaurl\n```\n\nA correct result will be something like this:\nCopy```\nWill run a test for the GAIA HUB: https://gaia.mydomain.com\nGenerating some test keys...\nPrivate key:  5aacc60fc2a429e1f02be139f3cac82061c6a980********************\nPublic key:   025691f17f2ab80dc4af363bb9c7aac59e9e1db6ae8ff668202582a3f4ec9678ff\nAddress:      15n8Xo8acRvSZghJG2dxJ8dCdzDMYicUuS\n[DEBUG] connectToGaiaHub: https://gaia.mydomain.com/hub_info\n[DEBUG] uploadToGaiaHub: uploading testing.txt to https://gaia.mydomain.com\nFile uploaded successfully.\nUpload to gaia hub thinks it can read it from: https://gaia.mydomain.com/reader/15n8Xo8acRvSZghJG2dxJ8dCdzDMYicUuS/testing.txt\nHub info thinks it can read it from          : https://gaia.mydomain.com/reader/15n8Xo8acRvSZghJG2dxJ8dCdzDMYicUuS/testing.txt\nLet's now try to fetch the uploaded file...\nFile fetched successfully. Contents of file: GAIA ROCKS!\n```\n\n[PreviousAmazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)[NextMac OS](https://docs.stacks.co/concepts/gaia/mac-os)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 950,
      "title": "Linux | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts/gaia/mac-os",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Gaia](https://docs.stacks.co/concepts/gaia)\n\n\n# Mac OS\nThe following assumes you have [Docker Installed](https://docs.docker.com/docker-for-mac/install/)\n  * Recommended to also have [MacOS Homebrew](https://docs.brew.sh/Installation) installed\n  * Use Homebrew to install jq with `brew install jq`\n\n\nIn your working directory:\n**1. Clone a copy of the** [**gaia repo**](https://github.com/stacks-network/gaia)**:**\nCopy```\n$gitclone-bmaster--single-branchhttps://github.com/stacks-network/gaia\n```\n\n**2. Change your cwd:**\nCopy```\n$cdgaia/deploy/docker\n```\n\n**3. Create a copy of sample-disk.env and fill out the values:**\nCopy```\n$ cp sample-disk.env disk.env\n# Update the DOMAIN_NAME variable to `localhost`\n```\n\n**4. Start the server:**\nCopy```\n$ docker-compose -f docker-compose-base.yaml -f docker-compose-disk.yaml --env-file disk.env up\n```\n\n**5. Verify the server is responding locally:**\nCopy```\n$ curl -sk https://localhost/hub_info | jq\n  {\n    \"challenge_text\": \"[\\\"gaiahub\\\",\\\"0\\\",\\\"gaia-0\\\",\\\"blockstack_storage_please_sign\\\"]\",\n    \"latest_auth_version\": \"v1\",\n    \"max_file_upload_size_megabytes\": 20,\n    \"read_url_prefix\": \"https://localhost/reader/\"\n  }\n```\n\n#### \n[](https://docs.stacks.co/concepts/gaia/mac-os#modifying-the-configuration-for-your-gaia-hub)\nModifying the configuration for your gaia-hub\nTwo methods exist:\n  1. Edit the `gaia/deploy/configs/gaia/hub-config.json` using `vim` or other\n\n\n  * requires a restart of the containers: `docker-compose -f docker-compose-base.yaml -f docker-compose-disk.yaml --env-file disk.env restart`\n\n\n  1. Use the running `admin` container to modify any config values, and also reload the hub when complete:\n\n\n  * [GitHub - Gaia Admin README.md](https://github.com/stacks-network/gaia/blob/master/admin/README.md)\n\n\nCopy```\n$ export API_KEY=\"hello\"\n$ curl -s \\\n      -H \"Authorization: bearer $API_KEY\" \\\n      -H 'Content-Type: application/json' \\\n      -X POST \\\n      --data-raw '{\"serverName\": \"myserver\"}' \\\n  http://localhost:8009/v1/admin/config\n$ curl -s \\\n      -H \"Authorization: bearer $API_KEY\" \\\n      -X POST \\\n  http://localhost:8009/v1/admin/reload\n$ curl -s \\\n      -H \"Authorization: bearer $API_KEY\" \\\n  http://localhost:8009/v1/admin/config | jq\n```\n\n[PreviousLinux](https://docs.stacks.co/concepts/gaia/linux)[NextDeveloper Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 770,
      "title": "Mac OS | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Build Your First Stacks App in 30 Minutes](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#build-your-first-stacks-app-in-30-minutes)\n  * [Step 1: Set Up Your Wallet (5 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-1-set-up-your-wallet-5-minutes)\n  * [Install Leather Wallet](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#install-leather-wallet)\n  * [Step 2: Write Your First Clarity Contract (10 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-2-write-your-first-clarity-contract-10-minutes)\n  * [Write the Contract](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#write-the-contract)\n  * [Test the Contract](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-the-contract)\n  * [Key Clarity Concepts Explained](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#key-clarity-concepts-explained)\n  * [Step 3: Deploy Your Contract (5 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-3-deploy-your-contract-5-minutes)\n  * [Deploy via Stacks Explorer](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#deploy-via-stacks-explorer)\n  * [Test Your Deployed Contract](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-your-deployed-contract)\n  * [Step 4: Build the Frontend (10 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-4-build-the-frontend-10-minutes)\n  * [Set Up the Project](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#set-up-the-project)\n  * [Create the App Component](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#create-the-app-component)\n  * [Add Basic Styling](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#add-basic-styling)\n  * [Update the Contract Address](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#update-the-contract-address)\n  * [Run Your App](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#run-your-app)\n  * [Congratulations! üéâ](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#congratulations)\n  * [Next Steps](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#next-steps)\n  * [Learn More About Clarity](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#learn-more-about-clarity)\n  * [Explore Advanced Features](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#explore-advanced-features)\n  * [Development Tools](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#development-tools)\n  * [Community Resources](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#community-resources)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Developer Quickstart\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#build-your-first-stacks-app-in-30-minutes)\nBuild Your First Stacks App in 30 Minutes\nLooking to see what building on Stacks is all about? You're in the right place.\nThis tutorial will help you build a working Stacks application in just 30 minutes. You'll learn the essential tools and concepts needed to build decentralized applications on Stacks, the leading Bitcoin L2.\n**What you'll build:** A simple message board where users can post messages to the blockchain and read messages from others.\n**What you'll learn:**\n  * How to write a Clarity smart contract\n  * How to deploy contracts to Stacks testnet\n  * How to connect a wallet to your app\n  * How to interact with contracts from a frontend\n\n\n**Prerequisites:**\n  * Basic familiarity with web development (HTML, CSS, JavaScript)\n  * A modern web browser\n  * 30 minutes of your time\n\n\nLet's get started!\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-1-set-up-your-wallet-5-minutes)\nStep 1: Set Up Your Wallet (5 minutes)\nFirst, you'll need a Stacks wallet to interact with the blockchain.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#install-leather-wallet)\nInstall Leather Wallet\n  1. Visit [leather.io](https://leather.io) and install the browser extension\n  2. Create a new wallet or import an existing one\n  3. **Important** : Switch to the **Testnet** network in your wallet settings\n  4. Get testnet STX tokens from the [Stacks Testnet Faucet](https://explorer.hiro.so/sandbox/faucet?chain=testnet)\n\n\nTestnet STX tokens are free and used for testing. They have no real value but let you experiment with Stacks development without cost.\nYour wallet is now ready for testnet development!\nYou don't have to use Leather, two other wallets popular with Stacks users are [Xverse](https://xverse.app) and [Asigna](https://asigna.io) if you need a multisig.\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-2-write-your-first-clarity-contract-10-minutes)\nStep 2: Write Your First Clarity Contract (10 minutes)\nClarity is Stacks' smart contract language, designed for safety and predictability. Let's write a simple message board contract.\nClarity is inspired by LISP and uses a functional programming approach. Everything in Clarity is an expression wrapped in parentheses. This can be a bit overwhelming at first if you are used to languages like JavaScript or Solidity, but the learning curve is short and Clarity is a simple language to understand once you dive in and start using it.\nFor a more detailed introduction, check out the [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course) in the docs.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#write-the-contract)\nWrite the Contract\nOpen [Clarity Playground](https://play.hiro.so/) in your browser. This is an online IDE where you can write and test Clarity code without installing anything.\nDelete the existing code and replace it with this message board contract:\nCopy```\n;; Simple Message Board Contract\n;; This contract allows users to post and read messages\n;; Define a map to store messages\n;; Key: message ID (uint), Value: message content (string-utf8 280)\n(define-map messages uint (string-utf8 280))\n;; Define a map to store message authors\n(define-map message-authors uint principal)\n;; Counter for message IDs\n(define-data-var message-count uint u0)\n;; Public function to add a new message\n(define-public (add-message (content (string-utf8 280)))\n  (let ((id (+ (var-get message-count) u1)))\n    (map-set messages id content)\n    (map-set message-authors id tx-sender)\n    (var-set message-count id)\n    (ok id)))\n;; Read-only function to get a message by ID\n(define-read-only (get-message (id uint))\n  (map-get? messages id))\n;; Read-only function to get message author\n(define-read-only (get-message-author (id uint))\n  (map-get? message-authors id))\n;; Read-only function to get total message count\n(define-read-only (get-message-count)\n  (var-get message-count))\n;; Read-only function to get the last few messages\n(define-read-only (get-recent-messages (count uint))\n  (let ((total-count (var-get message-count)))\n    (if (> count total-count)\n      (map get-message (list u1 u2 u3 u4 u5))\n      (map get-message (list\n        (- total-count (- count u1))\n        (- total-count (- count u2))\n        (- total-count (- count u3))\n        (- total-count (- count u4))\n        (- total-count (- count u5)))))))\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-the-contract)\nTest the Contract\nClick \"Deploy\", and go to the command line in the bottom right corner and try calling the functions.\nWe are using the [contract-call?](https://docs.stacks.co/reference/functions#contract-call) method to call the functions in the contract that we just deployed within the playground.\nCopy```\n;; Test adding a message\n(contract-call? .contract-1 add-message u\"Hello, Stacks!\")\n;; Test reading the message\n(contract-call? .contract-1 get-message u1)\n;; Test getting the count\n(contract-call? .contract-1 get-message-count)\n```\n\nYou should see the contract working in the evaluation panel on the right!\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#key-clarity-concepts-explained)\nKey Clarity Concepts Explained\nNow that you've seen the contract in action, let's talk about the core Clarity concepts you just used. When you write `define-map`, you're creating a data structure for storing key-value pairs on the blockchain. Think of it like creating a table in a database. The `define-data-var` function creates a variable that persists on the blockchain, perfect for keeping track of counters or settings that need to survive between function calls.\nWhen you declare a function with `define-public`, you're creating a function that can modify blockchain state and be called by anyone externally. This is different from `define-read-only`, which creates functions that can only read existing data without changing anything. This separation helps prevent accidental state changes and makes your contract's behavior more predictable.\nThe `tx-sender` variable is particularly useful because it's automatically set by the blockchain to contain the address of whoever called your function. You can't fake this value, which makes it perfect for authentication. When you need to create temporary variables within a function, you'll use `let` to set up local variables that only exist during that function call.\nFinally, every public function in Clarity must return a response type, which is why you see `ok` wrapping our return values. This ensures that every function call has a clear success or failure outcome, making your contracts much more predictable and easier to debug.\n**üîç Deep Dive: Understanding the Contract Code (Optional)**[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#deep-dive-understanding-the-contract-code-optional)\nWant to understand exactly what each part of the contract is doing? Let's walk through every function and concept used in our message board contract. Links to the official documentation are included for each function, so you may dive deeper if you want.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#how-we-store-data-on-the-blockchain)\nHow We Store Data on the Blockchain\nLet's start with how we're storing our messages. We use [`define-map`](https://docs.stacks.co/reference/functions#define-map) to create what's essentially a database table on the blockchain:\nCopy```\n(define-map messages uint (string-utf8 280))\n```\n\nThink of this as creating a table where each message gets a unique number (the `uint` key) and the message content can be up to 280 characters (the `string-utf8 280` value). It's like having a simple database where message #1 might be \"Hello World!\", message #2 might be \"Learning Clarity!\", and so on.\nWe also create another map to track who wrote each message:\nCopy```\n(define-map message-authors uint principal)\n```\n\nThis links each message ID to a `principal` (that's Clarity's term for a blockchain address). So if you post message #1, we'll store your address alongside that message ID.\nFinally, we need a way to keep track of how many messages we've posted so far:\nCopy```\n(define-data-var message-count uint u0)\n```\n\nThe [`define-data-var`](https://docs.stacks.co/reference/functions#define-data-var) creates a single variable that persists on the blockchain. We start it at `u0` (that's how you write the number 0 for unsigned integers in Clarity). The `u` prefix might look weird if you're coming from other languages, but it's just Clarity's way of saying \"this is a positive integer.\"\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#the-heart-of-our-contract-adding-messages)\nThe Heart of Our Contract: Adding Messages\nNow let's break down the most important function, the one that actually adds messages to our board:\nCopy```\n(define-public (add-message (content (string-utf8 280)))\n  (let ((id (+ (var-get message-count) u1)))\n    (map-set messages id content)\n    (map-set message-authors id tx-sender)\n    (var-set message-count id)\n    (ok id)))\n```\n\nStep by step, this function performs:\nWhen you call [`define-public`](https://docs.stacks.co/reference/functions#define-public), you're creating a function that anyone can call from outside the contract. The function takes one parameter called `content` that must be a UTF-8 string of maximum 280 characters.\nInside the function, we use [`let`](https://docs.stacks.co/reference/functions#let) to create a local variable. This is like declaring a variable inside a function in other languages, but with Clarity's unique syntax. We're creating a variable called `id` and setting it to the current message count plus 1.\n_Here's where Clarity might trip you up if you're coming from other languages._ Notice how we write `(+ (var-get message-count) u1)` instead of something like `message-count + 1`. In Clarity, operators like `+`, `-`, `>`, and `<` are actually functions that use prefix notation. So `(+ 2 3)` means \"add 2 and 3\" (instead of `2 + 3` like you'd write in JavaScript or Python). This is part of Clarity's LISP-inspired syntax where everything is a function call.\nThe [`var-get`](https://docs.stacks.co/reference/functions#var-get) function reads the current value of our message counter, and [`+`](https://docs.stacks.co/reference/functions#add) adds 1 to create the next message ID.\nNext, we store the message content using [`map-set`](https://docs.stacks.co/reference/functions#map-set), which is like inserting a row into a database table. We store the message content with the new ID we just created.\nWe also store who posted the message using another [`map-set`](https://docs.stacks.co/reference/functions#map-set) call (_Notice how we use_` _tx-sender_`_here_). This is a special variable that Clarity automatically sets to the address of whoever called the function. You can't fake this or manipulate it, which makes it perfect for tracking message authors.\nWe update our message counter using [`var-set`](https://docs.stacks.co/reference/functions#var-set), and finally return [`ok`](https://docs.stacks.co/reference/functions#ok) with the new message ID. In Clarity, all public functions must return either `(ok value)` for success or `(err error)` for failure. This ensures that every function call has a predictable outcome.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#reading-messages-back)\nReading Messages Back\nNow let's look at how we read messages back from the blockchain. Our simplest function is:\nCopy```\n(define-read-only (get-message (id uint))\n  (map-get? messages id))\n```\n\nWhen you use [`define-read-only`](https://docs.stacks.co/reference/functions#define-read-only), you're creating a function that can only read data, never modify it. This is perfect for getter functions like this one.\nThe [`map-get?`](https://docs.stacks.co/reference/functions#map-get) function looks up a message by its ID. Notice the `?` at the end of the function name. This is Clarity's convention for functions that might not find what they're looking for. If the message exists, you'll get back `(some \"message content\")`. If it doesn't exist, you'll get `none`. This is much safer than null pointers in other languages because you have to explicitly handle both cases.\nWe have similar functions for getting the message author and the total message count:\nCopy```\n(define-read-only (get-message-author (id uint))\n  (map-get? message-authors id))\n(define-read-only (get-message-count)\n  (var-get message-count))\n```\n\nThe message count function is particularly simple because it just reads our counter variable and returns it. No parameters needed since there's only one counter.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#a-more-complex-function-getting-recent-messages)\nA More Complex Function: Getting Recent Messages\nLet's look at our most complex function:\nCopy```\n(define-read-only (get-recent-messages (count uint))\n  (let ((total-count (var-get message-count)))\n    (if (> count total-count)\n      (map get-message (list u1 u2 u3 u4 u5))\n      (map get-message (list\n        (- total-count (- count u1))\n        (- total-count (- count u2))\n        (- total-count (- count u3))\n        (- total-count (- count u4))\n        (- total-count (- count u5)))))))\n```\n\nThis function demonstrates several advanced Clarity concepts. We use [`if`](https://docs.stacks.co/reference/functions#if) for conditional logic. The [`>`](https://docs.stacks.co/reference/functions#greater-than) operator (remember, it's a function in prefix notation) compares whether the requested count is greater than our total messages.\nThe [`map`](https://docs.stacks.co/reference/functions#map) function applies another function to each item in a list. So `(map get-message (list u1 u2 u3))` would call `get-message` on each of the numbers 1, 2, and 3.\nWe use [`list`](https://docs.stacks.co/reference/functions#list) to create a list of message IDs, and [`-`](https://docs.stacks.co/reference/functions#subtract) for subtraction to calculate which recent messages to fetch.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#what-makes-clarity-special)\nWhat Makes Clarity Special\nNow that you've seen the code, let me explain some of the key concepts that make Clarity different from other smart contract languages.\nOne of the most important things to understand about Clarity is its response types. Every public function must return either `(ok value)` or `(err error)`. This might seem annoying at first, but it ensures that every function call has a predictable outcome. If a function returns `err`, any changes it made to the blockchain are automatically rolled back. If it returns `ok`, the changes are committed. This prevents a lot of the bugs that plague other blockchain platforms.\nClarity also uses optional types extensively. Functions like `map-get?` return `(some value)` or `none` instead of potentially null values. This forces you to handle the case where data might not exist, which eliminates an entire class of bugs that you see in other languages where developers may neglect to check for null values.\nUnderstanding data persistence on the blockchain is another key concept. While Clarity does provide functions like `map-delete` and `map-set` that can modify or remove data, the decision of whether to make data mutable is entirely up to the contract developer. Notice how our contract doesn't have any functions to edit or delete messages. This is a deliberate design choice for our message board - we want messages to be permanent and trustworthy once posted. You could easily add update or delete functionality if your use case requires it, but for a message board, immutability makes sense.\nEvery operation on the blockchain has execution costs, and Clarity is designed to make these costs predictable. Simple operations like reading a variable cost very little, while complex operations cost more. This is why we [avoid unbounded loops and recursion in Clarity](https://docs.stacks.co/concepts/clarity/decidability) at the language level - they can lead to unpredictable costs and potentially infinite execution.\nThe automatic sender tracking through the `tx-sender` variable gives you built-in authentication without having to implement it yourself. This variable is automatically set by the blockchain and can't be spoofed, making it perfect for knowing who called your function.\n**Important** : Be careful when using `tx-sender` vs `contract-caller` in your contracts. While `tx-sender` refers to the original transaction sender and remains constant throughout the entire transaction chain, `contract-caller` refers to the most recent principal in the transaction chain and can change with each internal function or contract call. This difference is crucial for security - malicious contracts can potentially exploit `tx-sender`'s persistent context to bypass admin checks if you're not careful. For simple contracts like our message board, `tx-sender` is appropriate, but for more complex authorization logic, consider whether you need the original sender or the immediate caller.\nFor more details on this, check out [this excellent blog post](https://www.setzeus.com/public-blog-post/clarity-carefully-tx-sender) from Clarity developer [setzeus](https://x.com/setzeus).\nClarity's type safety means every variable and parameter has an explicit type. While Clarity is an interpreted language (not compiled), it performs comprehensive static analysis at deployment time through a multi-pass analysis system. This analysis catches type mismatches, undefined variables, and other errors before your contract is deployed, preventing runtime errors that could cause your contract to fail unexpectedly. Tools like `clarinet check` use this same analysis system to catch errors during development.\nFinally, Clarity's predictable execution model and [decidability](https://docs.stacks.co/concepts/clarity/decidability) mean that every function will terminate, and execution costs are predictable. Clarity doesn't allow recursion or unbounded loops, which makes Clarity contracts more reliable and easier to reason about than contracts written in other languages.\nThis contract demonstrates the core patterns you'll use in most Clarity smart contracts: storing data in maps and variables, creating public functions for state changes, read-only functions for data access, and proper error handling with response types.\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-3-deploy-your-contract-5-minutes)\nStep 3: Deploy Your Contract (5 minutes)\nNow let's deploy your contract to the Stacks testnet so you can interact with it from a web application.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#deploy-via-stacks-explorer)\nDeploy via Stacks Explorer\n  1. Visit the [Stacks Explorer Sandbox](https://explorer.hiro.so/sandbox/deploy?chain=testnet)\n  2. Connect your Leather wallet (make sure you're on testnet)\n  3. Paste your contract code into the editor\n  4. Give your contract a name (e.g., \"message-board\") or just use the default generated name\n  5. Click \"Deploy Contract\"\n  6. Confirm the transaction in your wallet\n\n\nThe deployment should only take a few seconds. Once complete, you'll see your contract address in the explorer. Here's [an example transaction](https://explorer.hiro.so/txid/0x3df7b597d1bbb3ce1598b1b0e28b7cbed38345fcf3fb33ae387165e13085e5d8?chain=testnet) deploying this contract.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-your-deployed-contract)\nTest Your Deployed Contract\n  1. In the explorer, find your deployed contract\n  2. Scroll down a bit and click on \"Available Functions\" to view its functions\n  3. Try calling `add-message` with a test message (you'll need to change the post conditions toggle to allow mode, there is a dedicated docs page talking about [Post Conditions on Stacks](https://docs.stacks.co/concepts/transactions/post-conditions))\n  4. Call `get-message` with ID `u1` to read it back\n  5. Call `get-message-count` to see the total\n\n\nYour contract is now live and functional on the blockchain!\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-4-build-the-frontend-10-minutes)\nStep 4: Build the Frontend (10 minutes)\nLet's create a simple web interface to interact with your contract.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#set-up-the-project)\nSet Up the Project\nCreate a new React project:\nCopy```\nnpm create vite@latest my-message-board -- --template react\ncd my-message-board\nnpm install\n```\n\nInstall the Stacks.js libraries:\nCopy```\nnpm install @stacks/connect @stacks/transactions @stacks/network\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#create-the-app-component)\nCreate the App Component\nReplace the contents of `src/App.jsx` with the following:\nSince this is a quickstart, we won't dive into a long explanation of exacly what this code is doing. We suggest going and checking out [Hiro's Docs](https://docs.hiro.so/stacks/stacks.js) in order to get a handle on how stacks.js works.\nCopy```\nimport { useState, useEffect } from \"react\";\nimport { connect, disconnect, isConnected, request } from \"@stacks/connect\";\nimport {\n  fetchCallReadOnlyFunction,\n  stringUtf8CV,\n  uintCV,\n} from \"@stacks/transactions\";\nimport \"./App.css\";\nconst network = \"testnet\";\n// Replace with your contract address\nconst CONTRACT_ADDRESS = \"YOUR_CONTRACT_ADDRESS_HERE\";\nconst CONTRACT_NAME = \"message-board\";\nfunction App() {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setConnected(isConnected());\n    if (isConnected()) {\n      loadMessages();\n    }\n  }, []);\n  // Check for connection changes\n  useEffect(() => {\n    const checkConnection = () => {\n      const connectionStatus = isConnected();\n      if (connectionStatus !== connected) {\n        setConnected(connectionStatus);\n        if (connectionStatus) {\n          loadMessages();\n        }\n      }\n    };\n    const intervalId = setInterval(checkConnection, 500);\n    return () => clearInterval(intervalId);\n  }, [connected]);\n  const connectWallet = async () => {\n    try {\n      await connect({\n        appDetails: {\n          name: \"Message Board\",\n          icon: window.location.origin + \"/logo.svg\",\n        },\n        onFinish: () => {\n          setConnected(true);\n          // Small delay to ensure connection is fully established\n          setTimeout(() => {\n            loadMessages();\n          }, 100);\n        },\n      });\n    } catch (error) {\n      console.error(\"Connection failed:\", error);\n    }\n  };\n  const disconnectWallet = () => {\n    disconnect();\n    setConnected(false);\n    setMessages([]);\n  };\n  const loadMessages = async () => {\n    try {\n      // Get message count\n      const countResult = await fetchCallReadOnlyFunction({\n        contractAddress: CONTRACT_ADDRESS,\n        contractName: CONTRACT_NAME,\n        functionName: \"get-message-count\",\n        functionArgs: [],\n        network,\n        senderAddress: CONTRACT_ADDRESS,\n      });\n      const count = parseInt(countResult.value);\n      // Load recent messages\n      const messagePromises = [];\n      for (let i = Math.max(1, count - 4); i <= count; i++) {\n        messagePromises.push(\n          fetchCallReadOnlyFunction({\n            contractAddress: CONTRACT_ADDRESS,\n            contractName: CONTRACT_NAME,\n            functionName: \"get-message\",\n            functionArgs: [uintCV(i)],\n            network,\n            senderAddress: CONTRACT_ADDRESS,\n          })\n        );\n      }\n      const messageResults = await Promise.all(messagePromises);\n      const loadedMessages = messageResults\n        .map((result, index) => ({\n          id: count - messageResults.length + index + 1,\n          content: result.value.value,\n        }))\n        .filter((msg) => msg.content !== undefined);\n      setMessages(loadedMessages);\n    } catch (error) {\n      console.error(\"Error loading messages:\", error);\n    }\n  };\n  const postMessage = async () => {\n    if (!newMessage.trim()) return;\n    setLoading(true);\n    try {\n      const result = await request(\"stx_callContract\", {\n        contract: `${CONTRACT_ADDRESS}.${CONTRACT_NAME}`,\n        functionName: \"add-message\",\n        functionArgs: [stringUtf8CV(newMessage)],\n        network,\n      });\n      console.log(\"Transaction submitted:\", result.txid);\n      setNewMessage(\"\");\n      // Reload messages after a delay to allow the transaction to process\n      setTimeout(() => {\n        loadMessages();\n        setLoading(false);\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error posting message:\", error);\n      setLoading(false);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>üìù Stacks Message Board</h1>\n        {!connected ? (\n          <button onClick={connectWallet} className=\"connect-button\">\n            Connect Wallet\n          </button>\n        ) : (\n          <button onClick={disconnectWallet} className=\"disconnect-button\">\n            Disconnect\n          </button>\n        )}\n      </header>\n      {connected && (\n        <main className=\"App-main\">\n          <div className=\"post-message\">\n            <h2>Post a Message</h2>\n            <div className=\"message-input\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"What's on your mind?\"\n                maxLength={280}\n                disabled={loading}\n              />\n              <button\n                onClick={postMessage}\n                disabled={loading || !newMessage.trim()}\n              >\n                {loading ? \"Posting...\" : \"Post\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"messages\">\n            <h2>Recent Messages</h2>\n            <button onClick={loadMessages} className=\"refresh-button\">\n              Refresh\n            </button>\n            {messages.length === 0 ? (\n              <p>No messages yet. Be the first to post!</p>\n            ) : (\n              <ul>\n                {messages.map((message) => (\n                  <li key={message.id}>\n                    <strong>Message #{message.id}:</strong> {message.content}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </main>\n      )}\n    </div>\n  );\n}\nexport default App;\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#add-basic-styling)\nAdd Basic Styling\nUpdate `src/App.css`:\nCopy```\n.App {\n  max-width: 800px;\n  width: 100%;\n  padding: 20px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n    \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n    \"Helvetica Neue\", sans-serif;\n}\n.App-header {\n  text-align: center;\n  margin-bottom: 40px;\n  padding: 20px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n.App-header h1 {\n  color: white;\n  margin-bottom: 20px;\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.connect-button,\n.disconnect-button {\n  background-color: rgba(255, 255, 255, 0.2);\n  color: white;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  padding: 12px 28px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n}\n.connect-button:hover,\n.disconnect-button:hover {\n  background-color: rgba(255, 255, 255, 0.3);\n  border-color: rgba(255, 255, 255, 0.5);\n  transform: translateY(-2px);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n.post-message {\n  margin-bottom: 40px;\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n}\n.message-input {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n.message-input input {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 16px;\n}\n.message-input button {\n  background-color: #10b981;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.message-input button:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n.messages {\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n}\n.refresh-button {\n  background-color: #6b7280;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-bottom: 20px;\n}\n.messages ul {\n  list-style: none;\n  padding: 0;\n}\n.messages li {\n  padding: 10px;\n  border-bottom: 1px solid #e5e7eb;\n  margin-bottom: 10px;\n}\n.messages li:last-child {\n  border-bottom: none;\n}\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#update-the-contract-address)\nUpdate the Contract Address\n  1. Go back to the Stacks Explorer and find your deployed contract\n  2. Copy the contract address (it looks like `ST1ABC...123.message-board`)\n  3. Replace `YOUR_CONTRACT_ADDRESS_HERE` in the App.jsx file with your actual contract address and the contract name with the actual name\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#run-your-app)\nRun Your App\nCopy```\nnpm run dev\n```\n\nVisit `http://localhost:5173` and you should see your message board app! Connect your wallet and try posting a message.\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#congratulations)\nCongratulations! üéâ\nYou've just built your first Stacks application! Here's what you accomplished:\n  1. ‚úÖ Wrote a Clarity smart contract with data storage and public functions\n  2. ‚úÖ Deployed the contract to Stacks testnet\n  3. ‚úÖ Built a React frontend that connects to a Stacks wallet\n  4. ‚úÖ Integrated your frontend with your smart contract\n  5. ‚úÖ Posted and read data from the blockchain\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#next-steps)\nNext Steps\nNow that you have the basics down, here are some ways to continue your Stacks development journey:\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#learn-more-about-clarity)\nLearn More About Clarity\n  * [**Clarity Book**](https://book.clarity-lang.org/): Comprehensive guide to Clarity development\n  * [**Clarity Reference**](https://docs.stacks.co/docs/clarity): Complete documentation of Clarity functions\n  * [**Clarity Crash Course**](https://docs.stacks.co/docs/clarity-crash-course): Quick introduction to Clarity concepts\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#explore-advanced-features)\nExplore Advanced Features\n  * **Error Handling** : Learn about Clarity's `try!` and `unwrap!` functions\n  * **Access Control** : Implement admin functions and permissions\n  * **Token Standards** : Build fungible (SIP-010) and non-fungible (SIP-009) tokens\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#development-tools)\nDevelopment Tools\n  * [**Clarinet**](https://github.com/hirosystems/clarinet): Local development environment for Clarity\n  * [**Hiro Platform**](https://platform.hiro.so): Hosted development environment\n  * [**Stacks Explorer**](https://explorer.stacks.co): View transactions and contracts on mainnet\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#community-resources)\nCommunity Resources\n  * [**Stacks Discord**](https://discord.gg/stacks): Connect with other developers\n  * [**Stacks Forum**](https://forum.stacks.org): Ask questions and share projects\n  * [**Stacks GitHub**](https://github.com/stacks-network): Contribute to the ecosystem\n\n\nHappy building! üöÄ\n[PreviousMac OS](https://docs.stacks.co/concepts/gaia/mac-os)[NextClarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 4458,
      "title": "Developer Quickstart | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/clarity-crash-course",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Clarity Crash Course\nYou now understand why Clarity exists and what problems it was designed to solve. :::note If you didn't read the previous section, go ahead and do that first. :::\nNow let's do a really quick introduction to Clarity so you can familiarize yourself with the language and syntax.\nThis crash course is designed for people who have some experience with programming but are new to Clarity. You don't need smart contract development experience, but if you do, with something like Solidity, you'll pick this up really quick.\nOnce you've familiarized yourself with the language, if you'd like to continue your journey and master Clarity to become a smart contract developer, we recommend either the book, [Clarity of Mind](https://book.clarity-lang.org/title-page.html), or the course, [Clarity Universe](https://clarity-lang.org/universe), which has both a self-paced and guided cohort-based version.\n### \n[](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course#your-first-clarity-smart-contract)\nYour First Clarity Smart Contract\nWe're going to build a basic Clarity smart contract using [Clarity Tools](https://clarity.tools/code/new), so you won't have to install anything for this introduction.\nVisit that link, and it will open up a new contract for you.\nAlready we can take a look at a few basic features of both Clarity and Clarity Tools. First, on the left you'll see that our Clarity code is being evaluated in real-time for us. This is really nice for experimenting and demonstrating basic Clarity code.\nNext up we can see our first bit of Clarity code.\nThose two semicolons are how we denote comments in Clarity.\nThen the next line down we have a public function declaration.\nHere is our first glimpse of Clarity's syntax, which may be new to you depending on your development background.\nFor those new to Clarity, it's a little weird and uncomfortable at first, but one of the core design tenets of Clarity is simplicity and readability, and the more you work with it the more you come to appreciate the succinctness and _clarity_ (sorry) of the code you are writing.\nClarity takes inspiration from LISP, and you can think of everything in Clarity as a list inside of a list, or an expression inside of an expression. Everything in Clarity is wrapped in parentheses, function definitions, variable declarations, function parameters, etc.\nSo here we are saying that we want to:\n  1. Call a function called `define-read-only`. This is a built-in function, one of many that you can refer to in the docs.\n  2. Pass it a parameter of hello, which corresponds to the method signature type.\n  3. Pass it a parameter of \"Hello\", which corresponds to the function body.\n\n\nYou can refer to the [`define-read-only`](https://docs.stacks.co/docs/write-smart-contracts/clarity-language/language-functions#define-read-only) documentation to see these parameters.\nWhy am I describing this as if we are calling a function? Because we are, and it's an important concept in Clarity that everything is an expression inside of an expression.\nLet's expand on this concept a bit by deleting this and writing a new function.\nCopy```\n(define-data-var count int 0)\n(define-public (add-number (number int))\n    (let\n        (\n            (current-count count)\n        )\n        (var-set count (+ 1 number))\n        (ok (var-get count))\n    )\n)\n(add-number 5)\n```\n\nIf you type that into Clarity Tools, you'll see the result that gets printed is 6.\nOkay there are actually a lot of Clarity concepts packed into this simple code.\nLet's go over what this code is doing, and you'll pick up some Clarity concepts along the way.\nThe first thing we are doing here is defining a new variable called `count` and setting its initial value to 0.\nThis will be a persistent state variable, so this is actually getting written to the blockchain. If you are new to smart contract development, the fact that data is persisted within the file like this might take some getting used to.\nSo if we were to write and deploy this contract (which you can do in the Stacks Explorer if you like), as soon as it gets deployed, it will run through the contract line by line executing anything at the root level.\nRemember that Clarity is interpreted, no compiled, so there's not compile step when developing Clarity contracts.\nSo this `define-data-var` will be evaluated and the `count` variable will be initialized with a value of 0.\nNext we are defining a public function called `add-number`, which will be created (but not called) on deploy as well.\n:::note In Clarity, we have public, private, and read only functions. Public allow you to modify chain state and can be called from anywhere, private do the same except they can only be called from within the contract, and read only will fail if they attempt to modify state. :::\nThis function is taking a single parameter, called `number` that is a type of `int`.\nNow, what is this `let` business all about? Remember that we said that everything in Clarity is an expression and declaring new functions is just a matter of calling the `define-public` function?\nWell the second argument to this is the function body, but it can only evaluate a single expression.\nSo this `let` function is a way of wrapping a multi-step function into a single argument.\nBut it does one other crucial thing at the beginning. This line:\nCopy```\n(current-count count)\n```\n\nSets a variable that only exists in the context of this particular function. So here we are saying, create a new variable called `current-count` and set it equal to the value of `count`.\nThen we use that in our actual function body down below.\nIn the next step we are setting the value of our `count` variable to 1 plus whatever number we passed in. The `+` is just another call to a function where the parameters are the numbers we want to add.\nThen, finally, we are returning the new value of `count` with our `ok` response, indicating that the function completed successfully.\nThen in the very last line we are actually calling this function, passing in 5.\nThis was a very brief overview of Clarity just to get your feet wet and give you a taste of how it works.\nIf you are interested in diving into the details, we highly recommend going through either the [Clarity Book](https://book.clarity-lang.org/title-page.html) or [Clarity Universe](https://clarity-lang.org/universe), depending on your learning style.\nIf you prefer to dive directly into the docs, there are several guides and example contracts for you to learn from.\n[PreviousDeveloper Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)[NextBuild a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1601,
      "title": "Clarity Crash Course | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Build a Borrowing & Lending Protocol\nIn this in-depth tutorial, you'll get a holistic overview of the entire Stacks development process by building a very simple borrowing and lending protocol called Lagoon.\nWe'll utilize the Hiro Platform to quickly get our contract set up and written. In an upcoming version of this tutorial, we'll also be creating the frontend and tests for our contract.\nA written version is also in the works.\nWe'll also dig into sBTC a bit, the upcoming decentralized BTC peg, and how you can begin experimenting with it now.\n[PreviousClarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)[NextBitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 643,
      "title": "Build a Borrowing & Lending Protocol | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/bitcoin-integration",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Bitcoin Integration\nOne of the unique features of the Stack chain and the Clarity language is that it allows for directly reading from the Bitcoin chain itself. These tutorials walk you through some different ways you can accomplish that.\n[PreviousBuild a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)[NextSending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 595,
      "title": "Bitcoin Integration | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n\n\n# Sending Bitcoin with Leather Wallet\nUsing Leather's web wallet, we can easily initiate a simple Bitcoin transaction using only a few lines of code.\nYou'll need to be authenticated with the Leather wallet for this to work, which you can see how to do in the Authentication with Stacks.js tutorial.\nOnce you have the wallet hooked up, you can use the Leather wallet API to initiate a simple Bitcoin transaction in your JS app like this.\nCopy```\nconstsendBitcoin=async () => {\nconstresp=awaitwindow.btc?.request(\"sendTransfer\", {\n    address:\"tb1qya9wtp4dyq67ldxz2pyuz40esvgd0cgx9s3pjl\",//replace this with whatever address you want to send to\n    amount:\"10000\",// the amount you want to send denoted in satoshis\n  });\n// Storing txid in local storage\n// We'll get back the transaction IF, which we can then use to do whatever we want\nif (typeof window !==\"undefined\") {\nlocalStorage.setItem(\"txid\",JSON.stringify(resp.result.txid));\n  }\n// We may want to do something once this transaction has confirmed, so we can set it to pending here and then use an API like mempool.space to query the Bitcoin chain for information about this transaction\nlocalStorage.setItem(\"txStatus\",\"pending\");\n};\n```\n\nThen all we would do is hook up our button to call this `sendBitcoin` function.\nCopy```\n<buttononClick={sendBitcoin}>Send Bitcoin</button>\n```\n\nYou can take a look at the Verifying a transaction on the BTC chain recipe to see a more complex user flow of verifying a transaction was mined using this returned ID as a starting point.\nYou can take a look at a bit more info about this simple API on the[ wallet developer docs](https://hirowallet.gitbook.io/developers/bitcoin/sign-transactions/sending-bitcoin).\n[PreviousBitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)[NextVerifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 802,
      "title": "Sending Bitcoin with Leather Wallet | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n\n\n# Verifying a Bitcoin Transaction\nOne of the coolest things about Clarity is that it allows us to have visibility into the state of the Bitcoin blockchain. Since Stacks blocks are mined in lockstep with Bitcoin blocks, we can directly read the burnchain header info of each Bitcoin block using Clarity's built-in [`get-burn-block-info?`](https://docs.stacks.co/docs/clarity/language-functions#get-burn-block-info-clarity2) function.\nThere are quite a few relatively complex things that need to happen to do this successfully, but a [clarity-bitcoin library](https://github.com/friedger/clarity-bitcoin/) exists to make the process a lot easier and handle some of the heavy lifting for us.\nLet's take a look at how to verify a Bitcoin transaction was mined using Clarity using the library. If you take a look at the `clarity-bitcoin.clar` file in the linked repo, you'll find a function called `was-tx-mined-compact`. That's what we'll be working with, and it looks like this:\nCopy```\n(define-read-only (was-tx-mined-compact (height uint) (tx (buff1024)) (header (buff80)) (proof { tx-index: uint, hashes: (list14 (buff32)), tree-depth: uint}))\n    (let ((block (unwrap! (parse-block-header header) (err ERR-BAD-HEADER))))\n      (was-tx-mined-internal height tx header (get merkle-root block) proof)))\n```\n\nThe transaction itself is relatively simple, but there's a lot happening within other private function calls. I encourage you to read the contract for yourself and trace what is happening, step-by-step, when we call this function.\nFor now, we'll just go over how to actually call this function successfully.\nYou can see that it takes a few pieces of information:\n  * `(height uint)` the block height you are looking to verify the transaction within\n  * `(tx (buff 1024))` the raw transaction hex of the transaction you are looking to verify\n  * `(header (buff 80))` the block header of the block\n  * `(proof { tx-index: uint, hashes: (list 14 (buff 32)), tree-depth: uint})` a merkle proof formatted as a tuple\n\n\n:::info\nA Merkle proof is a compact way to prove that a transaction is included in a block in the Bitcoin blockchain. Here's how it works:\n  1. Transactions in a block are hashed and paired, then the hashes of the pairs are hashed and paired, and so on until a single hash remains - this is called the Merkle root.\n  2. The Merkle root is included in the block header. By providing the hashes that lead from a transaction's hash up to the Merkle root, along with the block header, one can prove that the transaction is included in that block.\n  3. These hashes that connect a transaction to the Merkle root are called the Merkle proof or Merkle path. By providing the Merkle proof along with the transaction hash and block header, anyone can verify that the transaction is part of that block.\n  4. This allows for efficient decentralized verification of transactions without having to download the entire blockchain. One only needs the transaction hash, Merkle proof, and block header to verify.\n\n\n:::\nOnce we have this information, we can call into the `clarity-bitcoin.clar` contract and pass in this data. A common practice would be to get this data from a Bitcoin block explorer API like Mempool.space or Blockstream's esplora, parse it into the correct format for this helper, and then pass it to this function.\nWe could do that directly via this contract if we just need a direct response on if the transaction was included or not, but more likely we would want to integrate this functionality into a Clarity contract of our own where we can `asserts!` that a transaction was mined before taking another action.\nHere's a basic example where we are calling [Blockstream's API](https://github.com/Blockstream/esplora/blob/master/API.md) using JavaScript, parsing the data into the right format, and then calling into our own `mint` function to only mint an NFT if the selected transaction was mined.\nWe can get all the information we need with nothing but the transaction ID, which will usually be passed to us when we use a wallet like [Hiro's web wallet](https://hirowallet.gitbook.io/developers/bitcoin/sign-transactions/sending-bitcoin) to initiate the Bitcoin transaction.\nLet's go through the code we can use to implement this. For full context, this code is taken from the example [bitbadge](https://github.com/kenrogers/bitbadge) repo, which you can take a look at. For a complete step-by-step walkthrough of how to implement this, check out the [Bitcoin Primer](https://bitcoinprimer.dev).\nHere's the mint function:\nCopy```\n(define-public (mint (recipient principal) (height uint) (tx (buff 1024)) (header (buff 80)) (proof { tx-index: uint, hashes: (list 14 (buff 32)), tree-depth: uint}))\n    (let\n        (\n            (token-id (+ (var-get last-token-id) u1))\n            (tx-was-mined (try! (contract-call? .clarity-bitcoin was-tx-mined-compact height tx header proof)))\n        )\n        (asserts! (is-eq tx-sender contract-owner) err-owner-only)\n        (asserts! (is-eq tx-was-mined true) err-tx-not-mined)\n        (try! (nft-mint? bitbadge token-id recipient))\n        (var-set last-token-id token-id)\n        (ok token-id)\n    )\n)\n```\n\nNote the `(asserts! (is-eq tx-was-mined true) err-tx-not-mined)` line. This is what is doing the heavy lifting.\n:::caution Right now the clarity-bitcoin library only supports legacy transactions. Work is in-progress to add support for segwit, but until then we have to do a bit of work on the front end to strip the witness data from the raw transaction hex. :::\nHere's the JavaScript code we can use to get the data we need.\nFirst we get the raw transaction and the merkle proof (we do this when we first get the transaction ID back).\nThe `useEffect` here is so that we can check to see if the transaction was confirmed every 10 seconds before we get the rest of the information.\nCopy```\n// Effect hook to check and see if the tx has been confirmed using blockstream API\nuseEffect(() => {\n  const intervalId = setInterval(() => {\n    const txid = JSON.parse(localStorage.getItem(\"txid\"));\n    if (txid) {\n      fetch(`https://blockstream.info/testnet/api/tx/${txid}/status`)\n        .then((response) => response.json())\n        .then(async (status) => {\n          // set txStatus in localStorage if it is confirmed, otherwise we want to leave it pending\n          if (status.confirmed) {\n            localStorage.setItem(\"txStatus\", \"confirmed\");\n            // set the block details\n            const blockDetails = {\n              block_height: status.block_height,\n              block_hash: status.block_hash,\n            };\n            setBlockDetails(blockDetails);\n            localStorage.setItem(\"blockDetails\", JSON.stringify(blockDetails));\n            // fetch and set the tx raw\n            const rawResponse = await fetch(\n              `https://blockstream.info/testnet/api/tx/${txid}/hex`\n            );\n            const txRaw = await rawResponse.text();\n            localStorage.setItem(\"txRaw\", txRaw);\n            // fetch and set the merkle proof\n            const proofResponse = await fetch(\n              `https://blockstream.info/testnet/api/tx/${txid}/merkle-proof`\n            );\n            const txMerkleProof = await proofResponse.json();\n            localStorage.setItem(\n              \"txMerkleProof\",\n              JSON.stringify(txMerkleProof)\n            );\n            clearInterval(intervalId);\n          }\n        })\n        .catch((err) => console.error(err));\n    }\n  }, 10000);\n  return () => clearInterval(intervalId); // Clean up on component unmount\n}, []);\n```\n\nThen we get and parse the rest of the data when we call the actual mint function.\nCopy```\n// This function retrieves raw transaction and merkle proof from localStorage and calls the mint Clarity function\nconst mintBitbadge = async () => {\n  // Retrieving rawTx and merkleProof from local storage\n  let txRaw = \"\";\n  let txMerkleProof = \"\";\n  if (typeof window !== \"undefined\") {\n    txRaw = removeWitnessData(localStorage.getItem(\"txRaw\"));\n    txMerkleProof = JSON.parse(localStorage.getItem(\"txMerkleProof\"));\n  }\n  // First we need to verify that the sender of this transaction is the same as the user that is signed in\n  if (!verifyCorrectSender()) {\n    console.log(\"wrong sender\");\n    return false;\n  }\n  const blockHeight = blockDetails.block_height;\n  // Fetch the block hash\n  const blockHashResponse = await fetch(\n    `https://blockstream.info/testnet/api/block-height/${blockHeight}`\n  );\n  const blockHash = await blockHashResponse.text();\n  // Fetch the block header\n  const blockHeaderResponse = await fetch(\n    `https://blockstream.info/testnet/api/block/${blockHash}/header`\n  );\n  const blockHeaderHex = await blockHeaderResponse.text();\n  const txIndex = txMerkleProof.pos;\n  const hashes = txMerkleProof.merkle.map(\n    (hash) => bufferCV(hexToBytes(hash).reverse()) // lib needs reversed hashes\n  ); // Convert each hash to BufferCV and reverse it\n  const functionArgs = [\n    principalCV(userData.profile.stxAddress.testnet),\n    uintCV(blockHeight),\n    bufferCV(Buffer.from(txRaw, \"hex\")),\n    bufferCV(Buffer.from(blockHeaderHex, \"hex\")),\n    tupleCV({\n      \"tx-index\": uintCV(txIndex),\n      hashes: listCV(hashes),\n      \"tree-depth\": uintCV(txMerkleProof.merkle.length),\n    }),\n  ];\n  const contractAddress = \"ST3QFME3CANQFQNR86TYVKQYCFT7QX4PRXM1V9W6H\"; // Replace with your contract address\n  const contractName = \"bitbadge-v3\"; // Replace with your contract name\n  const functionName = \"mint\"; // Replace with your function name\n  const options = {\n    contractAddress,\n    contractName,\n    functionName,\n    functionArgs,\n    appDetails: {\n      name: \"BitBadge\",\n      icon: \"https://freesvg.org/img/bitcoin.png\",\n    },\n    onFinish: (data) => {\n      console.log(data);\n    },\n  };\n  await openContractCall(options);\n};\n```\n\n[PreviousSending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)[NextParsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1820,
      "title": "Verifying a Bitcoin Transaction | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n\n\n# Parsing a Bitcoin Transaction\nWhile we can verify that a transaction was mined using a library and Clarity's built-in functions, as outlined in the Verifying a transaction on the BTC chain docs, we can parse a Bitcoin transaction using Clarity as well.\nThis doesn't actually require having access to the chain, all we need is the raw transaction hex.\nIf you aren't familiar with how Bitcoin transactions are encoded in raw form, take a quick look at that.\nThe short version is that all of the data from a Bitcoin transaction is encoded in hex form in a string of numbers, we can slice out pieces of that hex value to pull out all of our transaction data.\nThe process to do this is relatively complex, but the Clarity-Bitcoin library comes with a function called `parse-tx` that makes this simple.\nAll we need to do is pass it a raw transaction hex and we can get back the data of the transaction, including inputs and outputs.\n:::caution Note that currently the library only supports legacy transactions, although work to support segwit and taproot transactions is currently underway. :::\nYou can view a [deployed version of the library](https://explorer.hiro.so/txid/0xd493b9ada8899be8773d3f55b21d300ef83ac5c0dd38c8a4dd52a295bd71d539?chain=mainnet) on the explorer and the [GitHub repo here](https://github.com/friedger/clarity-bitcoin).\nThe `parse-tx` function looks like this.\nCopy```\n(define-read-only (parse-tx (tx (buff1024)))\n    (let ((ctx { txbuff: tx, index: u0})\n          (parsed-version (try! (read-uint32 ctx)))\n          (parsed-txins (try! (read-txins (get ctx parsed-version))))\n          (parsed-txouts (try! (read-txouts (get ctx parsed-txins))))\n          (parsed-locktime (try! (read-uint32 (get ctx parsed-txouts)))))\n     (ok {version: (get uint32 parsed-version),\nins: (get txins parsed-txins),\nouts: (get txouts parsed-txouts),\nlocktime: (get uint32 parsed-locktime)})))\n```\n\nWe can get the raw transaction hex from a Bitcoin block explorer API like mempool, and it will be returned back to use looking something like this:\n`0200000000010196277c04c986c1ad78c909287fd12dba2924324699a0232e0533f46a6a3916bb0100000000ffffffff026400000000000000160014274ae586ad2035efb4c25049c155f98310d7e106ca16440000000000160014599bcef6387256c6b019030c421b4a4d382fe2600247304402204d94a1e4047ca38a450177ccb6f88585ca147f1939df343d8ac5d962c5f35bb302206f7fa42c21c47ebccdc460393d35c5dfd3b6f0a26cf10fac23d3e6fab71835c20121020cb972a66e3fb1cdcc9efcad060b4457ebec534942700d4af1c0d82a33aa13f100000000`.\nYou can paste this into a raw transaction decoder like [this one](https://live.blockcypher.com/btc/decodetx/) and see the data.\nIf we were using stacks.js, we would just need to pass this to our function as a buffer like this:\nCopy```\nbufferCV(Buffer.from(txRaw, \"hex\"));\n```\n\nWhere `txRaw` is just a string containing our raw transaction. When we do that, we are presented with the data of the transaction.\nWe can then take that data and pull out whatever we need from it.\n[PreviousVerifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)[NextCreate Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 922,
      "title": "Parsing a Bitcoin Transaction | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/tokens",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Create Tokens\nRather than needing to work with external libraries, Clarity has built-in functions that make working with fungible and non-fungible tokens a breeze.\n[PreviousParsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)[NextCreating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 576,
      "title": "Create Tokens | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Trait](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft#trait)\n  * [Clarity Code](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft#clarity-code)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n\n\n# Creating a NFT\nClarity makes creating NFTs incredibly easy. With built-in functions for creating and working with the token, you can have an NFT created in less than 10 minutes of work.\nLet's see how.\n:::tip For a more in-depth discussion of NFTs in Clarity and how to create them, check out the [NFTs chapter in the Clarity book](https://book.clarity-lang.org/ch10-01-sip009-nft-standard.html). :::\n### \n[](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft#trait)\nTrait\nThe first thing we need when we create an NFT is a trait. A trait is an interface that allows us to create an NFT with a defined set of functions. Its primary purpose is to ensure that NFTs are composable and different tools know how to interact with them.\nBy implementing a trait that the community agrees on, all protocols and products know how they can interact with an NFT.\nThe official mainnet trait can be [found on the Stacks Explorer](https://explorer.stacks.co/txid/0x80eb693e5e2a9928094792080b7f6d69d66ea9cc881bc465e8d9c5c621bd4d07?chain=mainnet) and looks like this:\nCopy```\n(define-trait nft-trait\n  (\n;; Last token ID, limited to uint range\n    (get-last-token-id () (responseuintuint))\n;; URI for metadata associated with the token\n    (get-token-uri (uint) (response (optional (string-ascii256)) uint))\n;; Owner of a given token identifier\n    (get-owner (uint) (response (optionalprincipal) uint))\n;; Transfer from the sender to a new principal\n    (transfer (uintprincipalprincipal) (responsebooluint))\n  )\n)\n```\n\nAll we are doing here is defining the function signatures for functions we'll need to implement in our Clarity contract, which we can see a simple version of below.\n### \n[](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft#clarity-code)\nClarity Code\nThis is the Clarity code we need in order to create an NFT, with one additional function, `mint` that allows us to actually create a new NFT. This `mint` function is not needed to adhere to the trait.\nCopy```\n(impl-trait 'SP2PABAF9FTAJYNFZH93XENAJ8FVY99RRM50D2JG9.nft-trait.nft-trait)\n(define-non-fungible-token amazing-aardvarks uint)\n(define-data-var last-token-id uint u0)\n(define-constant contract-owner tx-sender)\n(define-constant err-owner-only (err u100))\n(define-constant err-not-token-owner (err u101))\n(define-read-only (get-last-token-id)\n    (ok (var-get last-token-id))\n)\n(define-read-only (get-token-uri (token-id uint))\n    (ok none)\n)\n(define-read-only (get-owner (token-id uint))\n    (ok (nft-get-owner? amazing-aardvarks token-id))\n)\n(define-public (transfer (token-id uint) (sender principal) (recipient principal))\n    (begin\n        (asserts! (is-eq tx-sender sender) err-not-token-owner)\n        (nft-transfer? amazing-aardvarks token-id sender recipient)\n    )\n)\n(define-public (mint (recipient principal))\n    (let\n        (\n            (token-id (+ (var-get last-token-id) u1))\n        )\n        (asserts! (is-eq tx-sender contract-owner) err-owner-only)\n        (try! (nft-mint? amazing-aardvarks token-id recipient))\n        (var-set last-token-id token-id)\n        (ok token-id)\n    )\n)\n```\n\n[PreviousCreate Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)[NextCreating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 929,
      "title": "Creating a NFT | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Trait](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token#trait)\n  * [Clarity Code](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token#clarity-code)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n\n\n# Creating a Fungible Token\nMuch the same as creating an NFT, Clarity also makes creating a fungible token (FT) trivial as well.\nThe process and code are much the same.\n### \n[](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token#trait)\nTrait\nJust like with the NFT, it's a good idea to create a trait when you create a fungible token so that different tools and protocols and be confident in building interfaces for those tokens.\nSince FTs may be divisible, the [FT official mainnet deployment trait address](https://explorer.stacks.co/txid/0x99e01721e57adc2c24f7d371b9d302d581dba1d27250c7e25ea5f241af14c387?chain=mainnet) has additional functions.\nCopy```\n(define-trait sip-010-trait\n  (\n;; Transfer from the caller to a new principal\n    (transfer (uintprincipalprincipal (optional (buff34))) (responsebooluint))\n;; the human readable name of the token\n    (get-name () (response (string-ascii32) uint))\n;; the ticker symbol, or empty if none\n    (get-symbol () (response (string-ascii32) uint))\n;; the number of decimals used, e.g. 6 would mean 1_000_000 represents 1 token\n    (get-decimals () (responseuintuint))\n;; the balance of the passed principal\n    (get-balance (principal) (responseuintuint))\n;; the current total supply (which does not need to be a constant)\n    (get-total-supply () (responseuintuint))\n;; an optional URI that represents metadata of this token\n    (get-token-uri () (response (optional (string-utf8256)) uint))\n  )\n)\n```\n\nNow let's see how we might implement this in Clarity, just like we would an NFT.\n### \n[](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token#clarity-code)\nClarity Code\nCopy```\n(impl-trait 'SP3FBR2AGK5H9QBDH3EEN6DF8EK8JY7RX8QJ5SVTE.sip-010-trait-ft-standard.sip-010-trait)\n(define-constant contract-owner tx-sender)\n(define-constant err-owner-only (err u100))\n(define-constant err-not-token-owner (err u101))\n;; No maximum supply!\n(define-fungible-token clarity-coin)\n(define-public (transfer (amount uint) (sender principal) (recipient principal) (memo (optional (buff 34))))\n    (begin\n        (asserts! (is-eq tx-sender sender) err-not-token-owner)\n        (try! (ft-transfer? clarity-coin amount sender recipient))\n        (match memo to-print (print to-print) 0x)\n        (ok true)\n    )\n)\n(define-read-only (get-name)\n    (ok \"Clarity Coin\")\n)\n(define-read-only (get-symbol)\n    (ok \"CC\")\n)\n(define-read-only (get-decimals)\n    (ok u6)\n)\n(define-read-only (get-balance (who principal))\n    (ok (ft-get-balance clarity-coin who))\n)\n(define-read-only (get-total-supply)\n    (ok (ft-get-supply clarity-coin))\n)\n(define-read-only (get-token-uri)\n    (ok none)\n)\n(define-public (mint (amount uint) (recipient principal))\n    (begin\n        (asserts! (is-eq tx-sender contract-owner) err-owner-only)\n        (ft-mint? clarity-coin amount recipient)\n    )\n)\n```\n\n[PreviousCreating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)[NextBuild a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 876,
      "title": "Creating a Fungible Token | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/frontend",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Build a Frontend\nA major part of building full-stack Stacks applications will involve building out a UI with a solid user experience. One of your primary tools in accomplishing this will be Stacks.js, a JavaScript library built by Hiro to make working with contracts and the chain itself easier.\nHiro has excellent documentation in place to help you utilize Stacks.js to build out a great frontend to your Clarity contracts.\n[PreviousCreating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)[NextPost Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 623,
      "title": "Build a Frontend | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [STX Post Condition](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#stx-post-condition)\n  * [Fungible Token Post Condition](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#fungible-token-post-condition)\n  * [NFT Post Condition](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#nft-post-condition)\n  * [Sample App](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#sample-app)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n\n\n# Post Conditions with Stacks.js\nThe content in this recipe has been pulled from the [tutorial on post conditions](https://dev.to/stacks/understanding-stacks-post-conditions-e65). Post conditions are an additional safety feature built into the Stacks chain itself that help to protect end users.\nRather than being a function of Clarity smart contracts, they are implemented on the client side and meant to be an additional failsafe against malicious contracts.\nPut simply, post conditions are a set of conditions that must be met before a user's transaction will execute. The primary goal behind post conditions is to limit the amount of damage that can be done to a user's assets due to a bug, intentional or otherwise.\nSo they are sent as part of the transaction when the user initiates it, meaning we need a frontend library to utilize them.\nWhenever you are transferring an asset (fungible or non-fungible) from one address to another, you should take advantage of post conditions.\nWe're going to use [Stacks.js](https://github.com/hirosystems/stacks.js/tree/master/packages/transactions#post-conditions) to familiarize ourselves with them.\n### \n[](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#stx-post-condition)\nSTX Post Condition\nCopy```\nimport {\n  FungibleConditionCode,\n  makeStandardSTXPostCondition,\n  makeContractSTXPostCondition,\n} from\"@stacks/transactions\";\n// With a standard principal\nconstpostConditionAddress=\"SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE\";\nconstpostConditionCode=FungibleConditionCode.GreaterEqual;\nconstpostConditionAmount=12345n;\nconststandardSTXPostCondition=makeStandardSTXPostCondition(\n  postConditionAddress,\n  postConditionCode,\n  postConditionAmount\n);\n// With a contract principal\nconstcontractAddress=\"SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X\";\nconstcontractName=\"test-contract\";\nconstcontractSTXPostCondition=makeContractSTXPostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  postConditionAmount\n);\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#fungible-token-post-condition)\nFungible Token Post Condition\nCopy```\nimport {\n  FungibleConditionCode,\n  createAssetInfo,\n  makeStandardFungiblePostCondition,\n} from \"@stacks/transactions\";\n// With a standard principal\nconst postConditionAddress = \"SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE\";\nconst postConditionCode = FungibleConditionCode.GreaterEqual;\nconst postConditionAmount = 12345n;\nconst assetAddress = \"SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ\";\nconst assetContractName = \"test-asset-contract\";\nconst fungibleAssetInfo = createAssetInfo(assetAddress, assetContractName);\nconst standardFungiblePostCondition = makeStandardFungiblePostCondition(\n  postConditionAddress,\n  postConditionCode,\n  postConditionAmount,\n  fungibleAssetInfo\n);\n// With a contract principal\nconst contractAddress = \"SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X\";\nconst contractName = \"test-contract\";\nconst assetAddress = \"SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ\";\nconst assetContractName = \"test-asset-contract\";\nconst fungibleAssetInfo = createAssetInfo(assetAddress, assetContractName);\nconst contractFungiblePostCondition = makeContractFungiblePostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  postConditionAmount,\n  fungibleAssetInfo\n);\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#nft-post-condition)\nNFT Post Condition\nCopy```\nimport {\n  NonFungibleConditionCode,\n  createAssetInfo,\n  makeStandardNonFungiblePostCondition,\n  makeContractNonFungiblePostCondition,\n  bufferCVFromString,\n} from \"@stacks/transactions\";\n// With a standard principal\nconst postConditionAddress = \"SP2ZD731ANQZT6J4K3F5N8A40ZXWXC1XFXHVVQFKE\";\nconst postConditionCode = NonFungibleConditionCode.Owns;\nconst assetAddress = \"SP62M8MEFH32WGSB7XSF9WJZD7TQB48VQB5ANWSJ\";\nconst assetContractName = \"test-asset-contract\";\nconst assetName = \"test-asset\";\nconst tokenAssetName = bufferCVFromString(\"test-token-asset\");\nconst nonFungibleAssetInfo = createAssetInfo(\n  assetAddress,\n  assetContractName,\n  assetName\n);\nconst standardNonFungiblePostCondition = makeStandardNonFungiblePostCondition(\n  postConditionAddress,\n  postConditionCode,\n  nonFungibleAssetInfo,\n  tokenAssetName\n);\n// With a contract principal\nconst contractAddress = \"SPBMRFRPPGCDE3F384WCJPK8PQJGZ8K9QKK7F59X\";\nconst contractName = \"test-contract\";\nconst contractNonFungiblePostCondition = makeContractNonFungiblePostCondition(\n  contractAddress,\n  contractName,\n  postConditionCode,\n  nonFungibleAssetInfo,\n  tokenAssetName\n);\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js#sample-app)\nSample App\nHere's a [sample application](https://github.com/kenrogers/fabulous-frogs) that utilizes post conditions on the front end to secure user assets.\n[PreviousBuild a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)[NextAuthentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 972,
      "title": "Post Conditions with Stacks.js | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n\n\n# Authentication with Stacks.js\nAuthenticating with a Stacks wallet is a very common task when building Stacks dapps.\nLet's see how to set this up on the front end.\nCode here is pulled from the Hello Stacks tutorial.\n### \n[](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js#stacks.js-code)\nStacks.js Code\nWe're using React here, but you can modify this for whatever frontend code you are using.\nBefore you add the frontend code, you need to install the correct NPM package.\nCopy```\nyarnadd@stacks/connect\n```\n\nAnd here's the JS code we'll need to implement.\nCopy```\nimport {\n  AppConfig,\n  UserSession,\n  AuthDetails,\n  showConnect,\n} from\"@stacks/connect\";\nimport { useState, useEffect } from\"react\";\nfunctionApp() {\nconst [message,setMessage] =useState(\"\");\nconst [transactionId,setTransactionId] =useState(\"\");\nconst [currentMessage,setCurrentMessage] =useState(\"\");\nconst [userData,setUserData] =useState(undefined);\nconstappConfig=newAppConfig([\"store_write\"]);\nconstuserSession=newUserSession({ appConfig });\nconstappDetails= {\n    name:\"Hello Stacks\",\n    icon:\"https://freesvg.org/img/1541103084.png\",\n  };\nconstconnectWallet= () => {\nshowConnect({\n      appDetails,\nonFinish: () =>window.location.reload(),\n      userSession,\n    });\n  };\nuseEffect(() => {\nif (userSession.isSignInPending()) {\nuserSession.handlePendingSignIn().then((userData) => {\nsetUserData(userData);\n      });\n    } elseif (userSession.isUserSignedIn()) {\nsetUserData(userSession.loadUserData());\n    }\n  }, []);\nreturn (\n    <divclassName=\"flex flex-col justify-center items-center h-screen gap-8\">\n      <button\nclassName=\"p-4 bg-indigo-500 rounded text-white\"\nonClick={connectWallet}\n      >\n        Connect Wallet\n      </button>\n      <h1className=\"text-6xl font-black\">Hello Stacks</h1>\n    </div>\n  );\n}\nexportdefault App;\n```\n\nThis is all the code we need to authenticate and access the user data in the UI.\nBut how do we actually use it?\nLet's implement a `connectWallet` button to see how we can utilize the data we're pulling here.\nCopy```\n{\n  !userData && (\n    <button\n      className=\"p-4 bg-indigo-500 rounded text-white\"\n      onClick={connectWallet}\n    >\n      Connect Wallet\n    </button>\n  );\n}\n```\n\n[PreviousPost Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)[NextSending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 795,
      "title": "Authentication with Stacks.js | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n\n\n# Sending Transactions with Stacks.js\nAny Stacks dapp is going to require sending transaction at some point, so how do we do that? We use the `@stacks/transactions` package.\nAgain, this particular snippet is pulled from our Hello Stacks tutorial.\nWhen you send Stacks transactions, don't forget to utilize post conditions.\nBut first, you'll need to install the right NPM package.\nCopy```\nyarnadd@stacks/transactions\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js#stacks.js-frontend-code)\nStacks.js Frontend Code\nAssuming you are authenticated, you'll need to import from the `network` package to connect and import the right Clarity values to convert.\nYou need to convert values from JS into the right format for Clarity values to ingest. You can view the complete list of types on the [Stacks.js docs](https://stacks.js.org/modules/_stacks_transactions#constructing-clarity-values).\nCopy```\nimport { StacksMocknet } from\"@stacks/network\";\nimport { stringUtf8CV } from\"@stacks/transactions\";\n```\n\nLet's assume we have a message that we need to send.\nCopy```\nHello this is something I need to say.\n```\n\nCopy```\nconstsubmitMessage=async (e) => {\ne.preventDefault();\nconstnetwork=newStacksMocknet();\nconstoptions= {\n    contractAddress:\"ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM\",\n    contractName:\"hello-stacks\",\n    functionName:\"write-message\",\n    functionArgs: [stringUtf8CV(message)],\n    network,\n    appDetails,\nonFinish: ({ txId }) =>console.log(txId),\n  };\nawaitopenContractCall(options);\n};\n```\n\nFor more details on the different types of transactions you can send, the [Stacks.js docs](https://stacks.js.org/modules/_stacks_transactions) have multiple examples.\n[PreviousAuthentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)[NextTesting Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 748,
      "title": "Sending Transactions with Stacks.js | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Testing Smart Contracts\nSmart contracts are immutable once deployed. Bugs are permanent. Test them thoroughly.\nThis section covers testing Clarity contracts.\n  * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing): Use Rendezvous to hammer your contract with random inputs. It helps expose edge cases and vulnerabilities.\n  * [Clarity Unit Testing](https://github.com/stacks-network/clarunit)\n\n\nMore guides will follow.\n[PreviousSending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)[NextFuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\nLast updated 5 months ago\nWas this helpful?\n",
      "wordCount": 599,
      "title": "Testing Smart Contracts | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [What is Fuzz Testing?](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#what-is-fuzz-testing)\n  * [What is Rendezvous?](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#what-is-rendezvous)\n  * [Property-Based Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#property-based-testing)\n  * [Invariant Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#invariant-testing)\n  * [Why Test in Clarity?](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#why-test-in-clarity)\n  * [Getting Started](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#getting-started)\n  * [Installation](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#installation)\n  * [Rendezvous Docs](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#rendezvous-docs)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n\n\n# Fuzz Testing\nSmart contracts on Stacks are immutable. Bugs are forever. Test early. Test often. Fuzzing finds edge cases that unit tests often miss.\n## \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#what-is-fuzz-testing)\nWhat is Fuzz Testing?\nFuzzing hits your code with random inputs. It helps uncover unexpected behavior and subtle bugs. Unlike unit tests, it explores paths you didn't think of.\n## \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#what-is-rendezvous)\nWhat is Rendezvous?\nRendezvous (`rv`) is a Clarity fuzzer. It supports:\n### \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#property-based-testing)\nProperty-Based Testing\nYou extract properties about your smart contract using Clarity. Rendezvous checks them multiple times with random inputs, in a stateful manner (the smart contract's state is not refreshed during the run).\n**What is a property?**\nA property is a universal truth about your smart contract's state, functions, etc.\n**How to extract a property?**\nSay that your smart contract has a function that reverses a list of `uint`s. In this case, one property can be that \"reversing a list twice returns the original list\". The property will look like this:\nCopy```\n(define-public (test-reverse-list (seq (list127uint)))\n  (begin\n    (asserts!\n      (is-eq seq\n        (reverse-uint\n          (reverse-uint seq)\n        )\n      )\n      (erru999)\n    )\n    (oktrue)\n  )\n)\n```\n\n**Making your property valid for Rendezvous**\n> For a property to be cosidered valid by Rendezvous, it has to comply with the following rules:\n>   * Function name starts with `test-`\n>   * Function is declared as `public`\n>   * Test passes when it returns `(ok true)`\n>   * Test would be discarded if it returned `(ok false)`\n>   * Test fails if it returns an error or throws an exception\n> \n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#invariant-testing)\nInvariant Testing\nYou define read-only conditions in Clarity that must always hold true. Rendezvous attempts to create state transitions in your smart contract and continuously checks the conditions you defined to hold.\n**What is an invariant?**\nAn invariant is a general truth regarding your smart contract's internal state. It will not be able to mutate the state, its role being solely to check the integrity of the state.\n**How to extract an invariant?**\nSay that you have a counter contract, having functions to `increment` and `decrement`. In this case, you could use the Rendezvous [`context`](https://stacks-network.github.io/rendezvous/chapter_6.html#the-rendezvous-context) to extract an invariant regarding your smart contract's internal state:\nCopy```\n(define-read-only (invariant-counter-gt-zero)\n  (let\n    (\n      (increment-num-calls\n        (default-to u0 (get called (map-get? context \"increment\")))\n      )\n      (decrement-num-calls\n        (default-to u0 (get called (map-get? context \"decrement\")))\n      )\n    )\n    (if\n      (<= increment-num-calls decrement-num-calls)\n      true\n      (> (var-get counter) u0)\n    )\n  )\n)\n```\n\n**Making your invariant valid for Rendezvous**\n> For an invariant to be cosidered valid by Rendezvous, it has to complain to the following ruleset:\n>   * Function name starts with invariant-\n>   * Function is declared as read-only (not public)\n>   * Function returns a boolean value (true if the invariant holds, false if violated)\n>   * The test can use the special context map to access execution history\n> \n\n## \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#why-test-in-clarity)\nWhy Test in Clarity?\nRendezvous tests run in Clarity, just like your contracts.\n  1. Tests operate under the exact same constraints as production code.\n  2. Better understanding of Clarity.\n  3. No need to expose internals as public functions.\n  4. Fewer tools to manage.\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#getting-started)\nGetting Started\nPut tests next to contracts. Rendezvous will find them.\nCopy```\nmy-project/\n‚îú‚îÄ‚îÄ Clarinet.toml\n‚îú‚îÄ‚îÄ contracts/\n‚îÇ   ‚îú‚îÄ‚îÄ my-contract.clar       # Contract\n‚îÇ   ‚îú‚îÄ‚îÄ my-contract.tests.clar # Tests\n‚îî‚îÄ‚îÄ settings/\n    ‚îî‚îÄ‚îÄ Devnet.toml\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#installation)\nInstallation\nTo install Rendezvous as a dependency in your project, use `npm`:\nCopy```\nnpm install @stacks/rendezvous\n```\n\nThis will add Rendezvous to your project's `node_modules` and update your `package.json`.\n## \n[](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing#rendezvous-docs)\nRendezvous Docs\nSee full docs at: [https://stacks-network.github.io/rendezvous](https://stacks-network.github.io/rendezvous/)\n[PreviousTesting Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)[NextRun a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\nLast updated 5 months ago\nWas this helpful?\n",
      "wordCount": 1172,
      "title": "Fuzz Testing | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Run a Node\nThis section will walk through the technical setup steps required to run Stacks Blockchain nodes and miners. There are multiple options available for running a node, including Docker, Digital Ocean, and Render.\nRunning your own Stacks node is a great way to increase the decentralization of the ecosystem and not have to rely on any third-party, centralized providers.\nRegardless of your preferred setup, there are some minimum hardware recommendations you should be aware of:\nThe **minimum viable requirements** are listed below.\nWhile you _can_ run a node using these specs, it's _recommended_ to assign more than the minimum for better performance.\n  * ‚ö†Ô∏è [docker-compose](https://docs.docker.com/compose/install/) version `2.2.2` or greater is **required**\n  * **8GB memory if running only a Stacks node**\n  * **16 GB memory if running Stacks + Bitcoin node**\n  * **2 Vcpu**\n  * **1TB disk for Stacks node**\n  * **1TB disk space for Bitcoin node**\n\n\n[PreviousFuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)[NextRun a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\nLast updated 29 days ago\nWas this helpful?\n",
      "wordCount": 700,
      "title": "Run a Node | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Stacks Blockchain with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#stacks-blockchain-with-docker)\n  * [Requirements:](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#requirements)\n  * [Quickstart](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#quickstart)\n  * [Accessing the services](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#accessing-the-services)\n  * [Upgrades](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#upgrades)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n\n\n# Run a Node with Docker\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#stacks-blockchain-with-docker)\nStacks Blockchain with Docker\nRun your own Stacks Blockchain node using [docker-compose](https://docs.docker.com/compose/) with just few commands using [stacks-blockchain-docker](https://github.com/stacks-network/stacks-blockchain-docker)\n  * Quickstart\n  * [Requirements](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/requirements.md)\n  * [Docker Setup](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/docker.md)\n  * [Configuration](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/config.md)\n  * [Upgrading](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/upgrade.md)\n  * [Common Issues](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/issues.md)\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#requirements)\n**Requirements:**\nThe **minimum viable requirements** are listed below.\nWhile you _can_ run a node using these specs, it's _recommended_ to assign more than the minimum for better performance.\n  * ‚ö†Ô∏è [docker-compose](https://docs.docker.com/compose/install/) version `2.2.2` or greater is **required**\n  * **8GB memory if running only a Stacks node**\n  * **16 GB memory if running Stacks + Bitcoin node**\n  * **1 Vcpu** ( _minimum of 2 Vcpu is recommended_ )\n  * **500GB disk for Stacks node**\n  * **1TB disk space for Bitcoin node**\n\n\nMacOS with an ARM (M-series chip) processor is NOT recommended\nThe way Docker for Mac on an Arm CPU is designed makes the I/O incredibly slow, and blockchains are _**very**_ heavy on I/O. This only seems to affect MacOS with the M-series chip, other Arm based systems like Raspberry Pi work as expected.\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#quickstart)\n**Quickstart**\nThe `<network>` placeholder used below can be replaced with one of:\n  * mainnet\n  * testnet\n  * mocknet\n\n\n  1. **Clone the stacks-blockchain-docker repository locally**\n\n\nCopy```\ngit clone https://github.com/stacks-network/stacks-blockchain-docker && cd stacks-blockchain-docker\n```\n\n  1. **Start the Services**\n\n\nCopy```\n./manage.sh -n <network> -a start\n```\n\nWith an optional HTTP proxy on port 80:\nCopy```\n./manage.sh -n <network> -a start -f proxy\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#accessing-the-services)\n**Accessing the services**\nFor networks other than `mocknet`, downloading the initial headers can take several minutes. Until the headers are downloaded, the `/v2/info` endpoints won't return any data.\nFollow the logs to track the sync progress:\nCopy```\n./manage.sh -n <network> -a logs\n```\n\n**stacks-blockchain** :\n  * Ports `20443-20444` are exposed on `localhost`\n\n\nCopy```\ncurl -sL localhost:20443/v2/info | jq -r\n```\n\n**stacks-blockchain-api** :\n  * Port `3999` is exposed on `localhost`\n\n\nCopy```\ncurl -sL localhost:3999 | jq -r\n```\n\n**proxy** :\n  * Port `80` is exposed on `localhost`\n\n\nCopy```\ncurl -sL localhost/v2/info | jq -r\ncurl -sL localhost | jq -r\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker#upgrades)\nUpgrades\nFor schema-breaking upgrades to running instances of this repo, you'll need to [run an event-replay](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/upgrade.md).\n* * *\n[PreviousRun a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)[NextRun a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\nLast updated 5 months ago\nWas this helpful?\n",
      "wordCount": 935,
      "title": "Run a Node with Docker | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#introduction)\n  * [Steps](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#steps)\n  * [Getting started after deploying Stacks Blockchain](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#getting-started-after-deploying-stacks-blockchain)\n  * [Launching a Droplet using the DigitalOcean API](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#launching-a-droplet-using-the-digitalocean-api)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n\n\n# Run a Node with Digital Ocean\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#introduction)\nIntroduction\nThis is a step by step guide to deploy the [Stacks Blockchain](https://github.com/stacks-network/stacks-blockchain) on [DigitalOcean](https://digitalocean.com).\nBuild code is hosted on this [Github repository](https://github.com/stacksfoundation/stacks-machine-images) using the [methods from here](https://github.com/stacks-network/stacks-blockchain-docker)\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#steps)\nSteps\n**Step 1**\nGo to the [Stacks Blockchain page](https://marketplace.digitalocean.com/apps/stacks-blockchain) in DigitalOcean's marketplace. Click on `Create Stacks Blockchain Droplet`.\n**Step 2**\nChoose a plan (it will only allow you to select a droplet that meets the minimum requirements) and your preferred datacenter region.\n**Step 3**\nEnter a root password or [enable SSH keys](https://docs.digitalocean.com/products/droplets/how-to/add-ssh-keys/) if you prefer.\n**Step 4**\nYou can leave the rest of the options as they are and click on `Create Droplet`\n**Step 5**\nYou will need to wait a few seconds for the droplet to get created. Once created click on it to see more information.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#step-6)\nStep 6\nCongratulations! You are now running the Stacks Blockchain. You can click on `Console` for a terminal window to open or login using SSH to the public IP you've been assigned to with user `root`.\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#getting-started-after-deploying-stacks-blockchain)\nGetting started after deploying Stacks Blockchain\nOnce the droplet is launched, the initial startup can take several minutes while BNS data is imported (this is a one time operation) and the Bitcoin headers are synced.\nTo keep track of the progress, you can `ssh root@your_droplet_public_ipv4` to the host and run: `/opt/stacks-blockchain-docker/manage.sh -n mainnet -a logs`.\nAfter the stacks blockchain finishes the initial header sync and starts to sync with its peers, the application ports will open (`20443` and `3999`) and HTTP port `80` will now start proxying requests.\nUse `http://your_droplet_public_ipv4` to access the data directly, with output being similar to:\nCopy```\n{\n  \"server_version\": \"stacks-blockchain-api v6.2.3 (master:77ab3ae2)\",\n  \"status\": \"ready\",\n  \"chain_tip\": {\n    \"block_height\": 91820,\n    \"block_hash\": \"0x06b276e85f238151414616618ae0adaf5eeda4eac6cad5bbefceeb37948ab275\",\n    \"index_block_hash\": \"0x4d7c075d7ab0f90b1dbc175f5c42b7344265d00cfef202dd9681d95388eeed8c\",\n    \"microblock_hash\": \"0xcf4f9037cc10696b2812b617ca105885be625c6acf8ad67e71bb4c09fa6ebb21\",\n    \"microblock_sequence\": 4\n  }\n}\n```\n\n:::tip For the full list of API endpoints for the Stacks Blockchain, consult the [Hiro API Docs](https://docs.hiro.so/api) :::\nAll services are managed by a [systemd unit file](https://github.com/stacksfoundation/stacks-machine-images/blob/master/files/etc/systemd/system/stacks.service) that is set to start on boot.\nManual control is also possible via the [manage.sh script](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/manage.sh) at `/opt/stacks-blockchain-docker/manage.sh` on the host.\nFull details on how to use the manage.sh script is [available here](https://github.com/stacks-network/stacks-blockchain-docker/blob/master/docs/usage.md).\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean#launching-a-droplet-using-the-digitalocean-api)\nLaunching a Droplet using the DigitalOcean API\nIn addition to creating a Droplet from the Stacks Blockchain 1-Click App via the control panel, you can also use the [DigitalOcean API](https://digitalocean.com/docs/api).\nAs an example, to create a 4GB Stacks Blockchain Droplet in the SFO2 region, you can use the following curl command. You‚Äôll need to either save your [API access token](https://docs.digitalocean.com/reference/api/create-personal-access-token/) to an environment variable or substitute it into the command below.\n:::note _The_` _name_`_,_`_region_`_and_` _size_`_values below are hardcoded, so adjust as desired._ :::\nCopy```\n$ export TOKEN=<digitalocean API token>\n$ curl -X POST -H 'Content-Type: application/json' \\\n     -H 'Authorization: Bearer '$TOKEN'' -d \\\n    '{\"name\":\"stacks-blockchain\",\"region\":\"sfo2\",\"size\":\"s-2vcpu-4gb\",\"image\":\"stacksfoundation-stacksblockchain\"}' \\\n    \"https://api.digitalocean.com/v2/droplets\"\n```\n\n[PreviousRun a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)[NextRun a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1048,
      "title": "Run a Node with Digital Ocean | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider#quicknode)\n  * [Stacks on Render](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider#stacks-on-render)\n  * [Stacks on Fly](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider#stacks-on-fly)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n\n\n# Run a Node with a Hosted Provider\nWe're always looking for new hosting providers that enable anyone to run the Stacks Blockchain. Below, you'll find some examples of the current providers that are known to support running a node.\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider#quicknode)\nQuicknode\nPlease refer to the Quicknode Section for instructions on launching an instance with Quicknode.\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider#stacks-on-render)\nStacks on Render\nThe [render-stacks](https://github.com/stacksfoundation/render-stacks) GitHub repo has instructions so anyone can deploy a Stacks node to the hosted [Render](https://render.com) service in one click.\n:::note While it is _possible_ to use the free plan with some modifications, _ _**it is recommended to run this on paid plan**_ _ :::\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider#stacks-on-fly)\nStacks on Fly\nThe [fly-stacks](https://github.com/stacksfoundation/fly-stacks) GitHub repo has instructions so anyone can deploy a Stacks node to the hosted [Fly](https://fly.io) service.\n[PreviousRun a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)[NextRun a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 700,
      "title": "Run a Node with a Hosted Provider | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n\n\n# Run a Node with Quicknode\n[QuickNode](https://www.quicknode.com/) is a service for rapidly getting set up with a Stacks node.\nAs an easy and fast alternative to running your own node, you can utilize QuickNode to serve as an API.\nTo get started, [set up an account](https://www.quicknode.com/signup) on QuickNode.\nOnce you are signed in, getting set up with your own Stacks node is a matter of a few clicks, starting with 'Create an endpoint'.\nFrom there, you just need to select Stacks, your desired network, and your desired QuickNode plan level.\n_That's it._\nYou now have an API endpoint URL you can use to connect to Stacks.\nHow do you do that?\nIt depends on the frontend framework you are using, but let's see how to do it with Stacks.js.\nFirst, you'll need to install the `@stacks/network` package.\nNext we'll import it:\nCopy```\nimport { StacksTestnet } from\"@stacks/network\";\n```\n\nThen in your frontend, set up the network with the following line:\nCopy```\nconstnetwork=newStacksTestnet({ url:\"<QUICKNODE_ENDPOINT_HERE>\" });\n```\n\nThen you can call transactions like you normally would using the `@stacks/transactions` library.\nFor an example of how to do this, please refer to the Hello Stacks tutorial.\n[PreviousRun a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)[NextRun a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 752,
      "title": "Run a Node with Quicknode | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Requirements:](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#requirements)\n  * [Add bitcoin user and set file ownership](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#add-bitcoin-user-and-set-file-ownership)\n  * [Bitcoin Config](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#bitcoin-config)\n  * [Systemd unit file](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#systemd-unit-file)\n  * [Enable and start the Bitcoin service](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#enable-and-start-the-bitcoin-service)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n\n\n# Run a Bitcoin Node\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#requirements)\n**Requirements:**\nThis guide is written for a Unix based system. It's reasonable to expect some modifications will be required for other operating systems.\nWhen started, the Bitcoin node will take several days to reach chain tip.\n  * Bitcoin Core >= v25.0\n    * <https://github.com/bitcoin/bitcoin>\n    * <https://bitcoincore.org/en/download/>\n  * Host with a minimum of:\n    * 2 vCPU (a single dedicated cpu for the bitcoind process)\n    * 4GB Memory (during sync, more available memory will improve sync time)\n    * 1TB free disk space\n  * User account: `bitcoin:bitcoin`\n  * Chainstate directory located at: `/bitcoin/mainnet`\n    * `bitcoin` user must have read/write access.\n  * Config directory located at: `/etc/bitcoin`\n    * `bitcoin` user must have at least read access\n\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#add-bitcoin-user-and-set-file-ownership)\n**Add bitcoin user and set file ownership**\nCopy```\n$ sudo mkdir -p /bitcoin/mainnet\n$ sudo mkdir /etc/bitcoin\n$ sudo useradd bitcoin -d /bitcoin\n$ sudo chown -R bitcoin:bitcoin /bitcoin /etc/bitcoin/\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#bitcoin-config)\n**Bitcoin Config**\nBelow is a sample config used to sync a bitcoin node - feel free to adjust as needed.\nIf using the [systemd unit below](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#systemd-unit-file), save this file as `/etc/bitcoin/bitcoin.conf`\n  * `btuser:btcpass` is hardcoded as an rpcauth user/password ([generated using this script](https://github.com/bitcoin/bitcoin/tree/master/share/rpcauth)).\n  * Only localhost access is allowed (`127.0.0.1`) on the standard mainnet ports.\n  * `dbcache` is set to the maximum of 16GB.\n  * Wallet (and wallet rpc calls) are disabled.\n\n\nCopy```\n## [rpc]\n# Accept command line and JSON-RPC commands.\nserver=1\n# Allow JSON-RPC connections from specified source.\nrpcallowip=127.0.0.1/0\n# Bind to given address to listen for JSON-RPC connections.\nrpcbind=127.0.0.1:8332\n# Username and HMAC-SHA-256 hashed password for JSON-RPC connections.\n#   Use the script at https://github.com/bitcoin/bitcoin/tree/master/share/rpcauth to generate\n#   Note: may be specified multiple times for different users.\nrpcauth=btcuser:18857b4df4b1f0f5e6b1d7884617ab39$de6e02e1da8ee138ee702e13e0637e24679d844756216b066c3aeac4bcac5e10 # btuser:btcpass\n# Optional: rpcwhitelist can restrict listed RPC calls to specific rpcauth users.\n#   Uncomment the below the restrict the `limited` user to a small subset of `get` commands\n# rpcauth=limited:350c91a60895b567c4662c27e63e9a41$25188b0f51f2f974dcdc75c1e0d41174e8f7ae19fb96927abf68ac5bc1e8897b # limited:limited\n# rpcwhitelist=limited:getblockchaininfo,getblock,getblockcount,getblockhash,getblockheader,getnetworkinfo\n# rpcwhitelistdefault=0\n## [core]\n# Specify data directory\ndatadir=/bitcoin/mainnet\n# Do not keep transactions in the mempool longer than <n> hours (default: 336)\nmempoolexpiry=24\n# Bind to given address and always listen on it (default: 0.0.0.0)\nbind=127.0.0.1:8333\n# Maximum database cache size <n> MiB (4 to 16384, default: 450). In addition, unused mempool memory is shared for this cache\ndbcache=16384\n# Maintain a full transaction index, used by the getrawtransaction rpc call\ntxindex=1\n## [wallet]\n# Do not load the wallet and disable wallet RPC calls\ndisablewallet=1\n```\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#systemd-unit-file)\nSystemd unit file\nref: <https://github.com/bitcoin/bitcoin/blob/master/contrib/init/bitcoind.service>\nCopy```\n[Unit]\nDescription=Bitcoin daemon\nDocumentation=https://github.com/bitcoin/bitcoin/blob/master/doc/init.md\n# https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget/\nAfter=network-online.target\nWants=network-online.target\n[Service]\nExecStart=/usr/bin/bitcoind -pid=/run/bitcoind/bitcoind.pid \\\n                            -conf=/etc/bitcoin/bitcoin.conf \\\n                            -startupnotify='systemd-notify --ready' \\\n                            -shutdownnotify='systemd-notify --stopping'\n# Make sure the config directory is readable by the service user\nPermissionsStartOnly=true\nExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n# Process management\n####################\nType=notify\nNotifyAccess=all\nPIDFile=/run/bitcoind/bitcoind.pid\nRestart=on-failure\nTimeoutStartSec=infinity\nTimeoutStopSec=600\n# Directory creation and permissions\n####################################\n# Run as bitcoin:bitcoin\nUser=bitcoin\nGroup=bitcoin\n# /run/bitcoind\nRuntimeDirectory=bitcoind\nRuntimeDirectoryMode=0710\n# /etc/bitcoin\nConfigurationDirectory=bitcoin\nConfigurationDirectoryMode=0710\n# /var/lib/bitcoind\nStateDirectory=bitcoind\nStateDirectoryMode=0710\n# Hardening measures\n####################\n# Provide a private /tmp and /var/tmp.\nPrivateTmp=true\n# Mount /usr, /boot/ and /etc read-only for the process.\nProtectSystem=full\n# Deny access to /home, /root and /run/user\nProtectHome=true\n# Disallow the process and all of its children to gain\n# new privileges through execve().\nNoNewPrivileges=true\n# Use a new /dev namespace only populated with API pseudo devices\n# such as /dev/null, /dev/zero and /dev/random.\nPrivateDevices=true\n# Deny the creation of writable and executable memory mappings.\nMemoryDenyWriteExecute=true\n# Restrict ABIs to help ensure MemoryDenyWriteExecute is enforced\nSystemCallArchitectures=native\n[Install]\nWantedBy=multi-user.target\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node#enable-and-start-the-bitcoin-service)\n**Enable and start the Bitcoin service**\nCopy```\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable bitcoin.service\n$ sudo systemctl start bitcoin.service\n```\n\nOnce started, you may track the sync progress:\nCopy```\n$ sudo tail -f /bitcoin/mainnet/debug.log\n2024-12-05T19:35:31Z UpdateTip: new best=00000000000000000058990a84cc8f8eab25dbbd572f123f9190cea7256d7349 height=509258 version=0x20000000 log2_work=88.128280 tx=299522737 date='2018-02-15T03:42:14Z' progress=0.295203 cache=43.5MiB(172740txo)\n...\n$ bitcoin-cli \\\n    -rpcconnect=127.0.0.1 \\\n    -rpcport=8332 \\\n    -rpcuser=btcuser \\\n    -rpcpassword=btcpass \\\n    getblockcount\n509016\n```\n\n[PreviousRun a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)[NextRun a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 1226,
      "title": "Run a Bitcoin Node | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Requirements:](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#requirements)\n  * [Caveats](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#caveats)\n  * [Add bitcoin user and set file ownership](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#add-bitcoin-user-and-set-file-ownership)\n  * [Bitcoin Config](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#bitcoin-config)\n  * [Systemd unit file](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#systemd-unit-file)\n  * [Enable and start the Bitcoin service](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#enable-and-start-the-bitcoin-service)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n\n\n# Run a Pruned Bitcoin Node\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#requirements)\n**Requirements:**\nThis guide is written for a Unix based system. It's reasonable to expect some modifications will be required for other operating systems.\nWhen started, the pruned Bitcoin node will take roughly **~24** hours to reach chain tip.\nWhile bitcoin is syncing, it's recommended to keep a stacks-blockchain node at chain tip, or [use a stacks chainstate archive](https://docs.hiro.so/stacks/archive/guides/stacks-blockchain).\n  * Bitcoin Core >= v25.0\n    * <https://github.com/bitcoin/bitcoin>\n    * <https://bitcoincore.org/en/download/>\n  * Host with a minimum of:\n    * 2 vCPU (a single dedicated cpu for the bitcoind process)\n    * 4GB Memory (during sync, more available memory will improve sync time)\n    * 50GB free disk space (actual usage is closer to 20GB)\n  * User account: `bitcoin:bitcoin`\n  * Chainstate directory located at: `/bitcoin/mainnet`\n    * `bitcoin` user must have read/write access.\n  * Config directory located at: `/etc/bitcoin`\n    * `bitcoin` user must have at least read access\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#caveats)\n**Caveats**\n[BIP-0159](https://github.com/bitcoin/bips/blob/master/bip-0159.mediawiki)\nIn short, this BIP specifies that pruned nodes will advertise the service bit `NODE_NETWORK_LIMITED`, which restricts syncing blocks older than 288 blocks (~2 days).\nWhat this means is that in practice, a stacks-blockchain node:\n  * **Cannot** sync from genesis using a pruned node.\n  * **Must not** be offline or otherwise down for longer than ~2 days (or 288 Bitcoin blocks).\n\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#add-bitcoin-user-and-set-file-ownership)\n**Add bitcoin user and set file ownership**\nCopy```\n$ sudo mkdir -p /bitcoin/mainnet\n$ sudo mkdir /etc/bitcoin\n$ sudo useradd bitcoin -d /bitcoin\n$ sudo chown -R bitcoin:bitcoin /bitcoin /etc/bitcoin/\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#bitcoin-config)\n**Bitcoin Config**\nBelow is a sample config used to sync a pruned bitcoin node - feel free to adjust as needed.\nIf using the [systemd unit below](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#systemd-unit-file), save this file as `/etc/bitcoin/bitcoin.conf`\n  * `btuser:btcpass` is hardcoded as an rpcauth user/password ([generated using this script](https://github.com/bitcoin/bitcoin/tree/master/share/rpcauth)).\n  * Only localhost access is allowed (`127.0.0.1`) on the standard mainnet ports.\n  * Pruning is set to be small, storing only the last 1GB of blocks (for p2p traffic, this is more than enough).\n  * `dbcache` is set to the maximum of 16GB.\n  * Wallet (and wallet rpc calls) are disabled.\n\n\nCopy```\n## [rpc]\n# Accept command line and JSON-RPC commands.\nserver=1\n# Allow JSON-RPC connections from specified source.\nrpcallowip=127.0.0.1/0\n# Bind to given address to listen for JSON-RPC connections.\nrpcbind=127.0.0.1:8332\n# Username and HMAC-SHA-256 hashed password for JSON-RPC connections.\n#   Use the script at https://github.com/bitcoin/bitcoin/tree/master/share/rpcauth to generate\n#   Note: may be specified multiple times for different users.\nrpcauth=btcuser:18857b4df4b1f0f5e6b1d7884617ab39$de6e02e1da8ee138ee702e13e0637e24679d844756216b066c3aeac4bcac5e10 # btuser:btcpass\n# Optional: rpcwhitelist can restrict listed RPC calls to specific rpcauth users.\n#   Uncomment the below the restrict the `limited` user to a small subset of `get` commands\n# rpcauth=limited:350c91a60895b567c4662c27e63e9a41$25188b0f51f2f974dcdc75c1e0d41174e8f7ae19fb96927abf68ac5bc1e8897b # limited:limited\n# rpcwhitelist=limited:getblockchaininfo,getblock,getblockcount,getblockhash,getblockheader,getnetworkinfo\n# rpcwhitelistdefault=0\n## [core]\n# Specify data directory\ndatadir=/bitcoin/mainnet\n# Do not keep transactions in the mempool longer than <n> hours (default: 336)\nmempoolexpiry=24\n# Bind to given address and always listen on it (default: 0.0.0.0)\nbind=127.0.0.1:8333\n# Maximum database cache size <n> MiB (4 to 16384, default: 450). In addition, unused mempool memory is shared for this cache\ndbcache=16384\n# Maintain a full transaction index, used by the getrawtransaction rpc call (**Running a pruned node requires that this option is disabled**)\ntxindex=0\n# Reduce storage requirements by enabling pruning (deleting) of old\n# blocks. This allows the pruneblockchain RPC to be called to\n# delete specific blocks and enables automatic pruning of old\n# blocks if a target size in MiB is provided. This mode is\n# incompatible with -txindex. Warning: Reverting this setting\n# requires re-downloading the entire blockchain. (default: 0 =\n# disable pruning blocks, 1 = allow manual pruning via RPC, >=550 =\n# automatically prune block files to stay under the specified\n# target size in MiB)\nprune=1024 # 1GB of chainstate is enough for p2p block data (if using the RPC,this can be adjusted higher to store more blocks)\n## [wallet]\n# Do not load the wallet and disable wallet RPC calls\ndisablewallet=1\n```\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#systemd-unit-file)\nSystemd unit file\nref: <https://github.com/bitcoin/bitcoin/blob/master/contrib/init/bitcoind.service>\nCopy```\n[Unit]\nDescription=Bitcoin daemon\nDocumentation=https://github.com/bitcoin/bitcoin/blob/master/doc/init.md\n# https://www.freedesktop.org/wiki/Software/systemd/NetworkTarget/\nAfter=network-online.target\nWants=network-online.target\n[Service]\nExecStart=/usr/bin/bitcoind -pid=/run/bitcoind/bitcoind.pid \\\n                            -conf=/etc/bitcoin/bitcoin.conf \\\n                            -startupnotify='systemd-notify --ready' \\\n                            -shutdownnotify='systemd-notify --stopping'\n# Make sure the config directory is readable by the service user\nPermissionsStartOnly=true\nExecStartPre=/bin/chgrp bitcoin /etc/bitcoin\n# Process management\n####################\nType=notify\nNotifyAccess=all\nPIDFile=/run/bitcoind/bitcoind.pid\nRestart=on-failure\nTimeoutStartSec=infinity\nTimeoutStopSec=600\n# Directory creation and permissions\n####################################\n# Run as bitcoin:bitcoin\nUser=bitcoin\nGroup=bitcoin\n# /run/bitcoind\nRuntimeDirectory=bitcoind\nRuntimeDirectoryMode=0710\n# /etc/bitcoin\nConfigurationDirectory=bitcoin\nConfigurationDirectoryMode=0710\n# /var/lib/bitcoind\nStateDirectory=bitcoind\nStateDirectoryMode=0710\n# Hardening measures\n####################\n# Provide a private /tmp and /var/tmp.\nPrivateTmp=true\n# Mount /usr, /boot/ and /etc read-only for the process.\nProtectSystem=full\n# Deny access to /home, /root and /run/user\nProtectHome=true\n# Disallow the process and all of its children to gain\n# new privileges through execve().\nNoNewPrivileges=true\n# Use a new /dev namespace only populated with API pseudo devices\n# such as /dev/null, /dev/zero and /dev/random.\nPrivateDevices=true\n# Deny the creation of writable and executable memory mappings.\nMemoryDenyWriteExecute=true\n# Restrict ABIs to help ensure MemoryDenyWriteExecute is enforced\nSystemCallArchitectures=native\n[Install]\nWantedBy=multi-user.target\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node#enable-and-start-the-bitcoin-service)\n**Enable and start the Bitcoin service**\nCopy```\n$ sudo systemctl daemon-reload\n$ sudo systemctl enable bitcoin.service\n$ sudo systemctl start bitcoin.service\n```\n\nOnce started, you may track the sync progress:\nCopy```\n$ sudo tail -f /bitcoin/mainnet/debug.log\n2024-12-05T19:35:31Z UpdateTip: new best=00000000000000000058990a84cc8f8eab25dbbd572f123f9190cea7256d7349 height=509258 version=0x20000000 log2_work=88.128280 tx=299522737 date='2018-02-15T03:42:14Z' progress=0.295203 cache=43.5MiB(172740txo)\n...\n$ bitcoin-cli \\\n    -rpcconnect=127.0.0.1 \\\n    -rpcport=8332 \\\n    -rpcuser=btcuser \\\n    -rpcpassword=btcpass \\\n    getblockcount\n509016\n```\n\n[PreviousRun a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)[NextRun a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 1463,
      "title": "Run a Pruned Bitcoin Node | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/run-a-miner",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Run a Miner\nIf you are interested in running a Stacks miner, there are a few things you'll need to understand. Running a miner is similar to running a node, but you'll need to set up some additional configuration.\nThese guides will help you get up and running with both a testnet and mainnet Stacks miner.\n[PreviousRun a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)[NextMiner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 608,
      "title": "Run a Miner | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#prerequisites)\n  * [VM setup](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#vm-setup)\n  * [Scripted install](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#scripted-install)\n  * [Install required packages](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#install-required-packages)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n\n\n# Miner Prerequisites\n## \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#prerequisites)\nPrerequisites\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#vm-setup)\nVM setup\nThe VM will not need a lot of resources to run a miner - the most resources will be consumed during the blockchain syncs (for both Bitcoin and Stacks). For this example, we'll be assuming a [**Debian**](https://www.debian.org/) host with `x86_64` architecture (_commands may also work on any Debian-derived distribution_)\nA single CPU system with at least 4GB of memory and 1TB of disk space should be considered the minimum required specs to run the miner.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#vm-specs)\nVM Specs\n  * Minimum CPU of: `1 vCPU`\n  * Minimum Memory of: `4GB Memory`\n  * Minimum Storage of: `1TB Disk` to allow for chainstate growth\n    * as of **July 2022** :\n      * Bitcoin chainstate is roughly `420GB`\n      * Stacks chainstate is roughly `45GB`\n\n\n**Disk Configuration**\nTwo options here - either are fine but it's _recommended_ to mount the chainstate from a separate disk that only contains the chainstate (option 1)\n  1. Separate disks for chainstate(s) and OS:\n     * mount a dedicated disk for bitcoin at `/bitcoin` of 1TB\n     * mount a dedicated disk for stacks-blockchain at `/stacks-blockchain` of at least 100GB\n     * root volume `/` of at least 25GB\n  2. Combined Disk for all data:\n     * root volume `/` of at least 1TB\n\n\nCreate the required directories:\nCopy```\n$ sudo mkdir -p /bitcoin\n$ sudo mkdir -p /stacks-blockchain\n$ sudo mkdir -p /etc/bitcoin\n$ sudo mkdir -p /etc/stacks-blockchain\n```\n\n**If using mounted disks** : mount the disks to each filesystem created above - edit `/etc/fstab` to automount these disks at boot.\nExample:\nCopy```\n/dev/xvdb1 /bitcoin xfs rw,relatime,attr2,inode64,noquota\n/dev/xvdc1 /stacks-blockchain xfs rw,relatime,attr2,inode64,noquota\n```\n\nMount the disks `sudo mount -a`\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#scripted-install)\nScripted install\nYou can use the scripts/prerequisites.sh to install everything:\nCopy```\ncurl --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/stacksfoundation/miner-docs/main/scripts/prerequisites.sh | bash\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites#install-required-packages)\nInstall required packages\nThe following packages are required, and used by the rest of these docs\nCopy```\n$ curl -sL https://deb.nodesource.com/setup_16.x | sudo -E bash -\n$ sudo apt-get update -y && sudo apt-get install -y \\\n    build-essential \\\n    jq \\\n    netcat \\\n    nodejs \\\n    git \\\n    autoconf \\\n    libboost-system-dev \\\n    libboost-filesystem-dev \\\n    libboost-thread-dev \\\n    libboost-chrono-dev \\\n    libevent-dev \\\n    libzmq5 \\\n    libtool \\\n    m4 \\\n    automake \\\n    pkg-config \\\n    libtool \\\n    libboost-system-dev \\\n    libboost-filesystem-dev \\\n    libboost-chrono-dev \\\n    libboost-program-options-dev \\\n    libboost-test-dev \\\n    libboost-thread-dev \\\n    libboost-iostreams-dev\n$ curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh && source $HOME/.cargo/env\n$ sudo npm install -g @stacks/cli rimraf shx\n```\n\n[PreviousRun a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)[NextMiner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 971,
      "title": "Miner Prerequisites | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n\n\n# Miner Costs and Fees\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees#configuring-cost-and-fee-estimation)\nConfiguring Cost and Fee Estimation\nFee and cost estimators can be configured via the config section `[fee_estimation]`:\nCopy```\n[fee_estimation]\ncost_estimator = naive_pessimistic\nfee_estimator = fuzzed_weighted_median_fee_rate\nfee_rate_fuzzer_fraction =0.1\nfee_rate_window_size =5\ncost_metric = proportion_dot_product\nlog_error =true\nenabled =true\n```\n\nFee and cost estimators observe transactions on the network and use the observed costs of those transactions to build estimates for viable fee rates and expected execution costs for transactions. Estimators and metrics can be selected using the configuration fields above, though the default values are the only options currently. `log_error` controls whether or not the INFO logger will display information about the cost estimator accuracy as new costs are observed. Setting `enabled = false` turns off the cost estimators. Cost estimators are **not** consensus-critical components, but rather can be used by miners to rank transactions in the mempool or client to determine appropriate fee rates for transactions before broadcasting them.\nThe `fuzzed_weighted_median_fee_rate` uses a median estimate from a window of the fees paid in the last `fee_rate_window_size` blocks. Estimates are then randomly \"fuzzed\" using uniform random fuzz of size up to `fee_rate_fuzzer_fraction` of the base estimate.\nThere is also a [mining calculator](https://friedger.github.io/mining-calculator/) that can help you with this process, with the [source code available here](https://github.com/friedger/mining-calculator).\n[PreviousMiner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)[NextMine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 764,
      "title": "Miner Costs and Fees | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#introduction)\n  * [Running a Bitcoin Testnet Full Node](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#running-a-bitcoin-testnet-full-node)\n  * [Running a Stacks Blockchain miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#running-a-stacks-blockchain-miner)\n  * [Optional: Running a Stacks Blockchain miner with Docker](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#optional-running-a-stacks-blockchain-miner-with-docker)\n  * [Optional: Running in Kubernetes with Helm](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#optional-running-in-kubernetes-with-helm)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n\n\n# Mine Testnet Stacks Tokens\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#introduction)\nIntroduction\nFor more on the technical details of mining, please review the mining guide.\nThe following is an abridged version of the [walkthrough here](https://github.com/stacksfoundation/miner-docs/tree/testnet), written for a Linux system. If you're on Windows or MacOS, there will be some slight modifications needed (PR's welcome!).\nIf you're interested in mining on the Stacks testnet, you can find instructions on how to do that here:\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#running-a-bitcoin-testnet-full-node)\nRunning a Bitcoin Testnet Full Node\nTo participate as a miner on testnet, you must have access to a testnet bitcoin node with a wallet (and the wallet's private key). One way to accomplish this is to run bitcoin locally.\n  * [Ensure your computer meets the minimum hardware requirements before continuing.](https://bitcoin.org/en/bitcoin-core/features/requirements#system-requirements)\n\n\nFirst, download a [bitcoin binary](https://bitcoin.org/en/download), or [build from source](https://github.com/stacksfoundation/miner-docs/blob/testnet/bitcoin.md#source-install) (_there may be some extra requirements to building,_ [_defined here_](https://github.com/stacksfoundation/miner-docs/blob/testnet/prerequisites.md#install-required-packages)).\n**Tip:** It is recommended to use a persistent location for the chainstate, in the steps below we're using `/bitcoin`.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#update-the-bitcoin-configuration-file)\nUpdate the Bitcoin Configuration File\nNext, update the bitcoin configuration:\n  * **Optional, but recommended:** Use a persistent directory to store the Bitcoin chainstate, i.e. `datadir=/bitcoin`.\n  * **Optional, but recommended:** Update the `rpcallowip` value to only allow `127.0.0.1`, or the stacks miner IPv4.\n  * Modify the `rpcuser` and `rpcpassword` values from the defaults below.\n  * Store the following configuration somewhere on your filesystem (ex: `$HOME/bitcoin.conf`).\n\n\nCopy```\nserver=1\ntestnet=1\ndisablewallet=0\ndatadir=/bitcoin\nrpcuser=btcuser\nrpcpassword=btcpass\nrpcallowip=0.0.0.0/0\ndbcache=512\nbanscore=1\nrpcthreads=256\nrpcworkqueue=256\nrpctimeout=100\ntxindex=1\n[test]\nbind=0.0.0.0:18333\nrpcbind=0.0.0.0:18332\nrpcport=18332\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#start-bitcoin)\nStart Bitcoin\nFinally, start `bitcoind` as follows (adjust the `conf` path to where it was created in the previous step, i.e. `$HOME/bitcoin.conf`):\nCopy```\nbitcoind -conf=$HOME/bitcoin.conf\n```\n\n**Note:** It will take a few hours for the node to synchronize with Bitcoin Testnet.\nWhile it's syncing, you can track the progress with `bitcoin-cli` or the logfile (will be located where the chainstate is stored, i.e. `/bitcoin/testnet3/debug.log`):\nCopy```\n$ bitcoin-cli \\\n -rpcconnect=127.0.0.1 \\\n -rpcport=18332 \\\n -rpcuser=btcuser \\\n -rpcpassword=btcpass \\\ngetblockchaininfo | jq .blocks\n2583513\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#running-a-stacks-blockchain-miner)\nRunning a Stacks Blockchain miner\nFirst, download the latest tagged [stacks blockchain binary](https://github.com/stacks-network/stacks-blockchain/releases/latest), or [build from source](https://github.com/stacksfoundation/miner-docs/blob/testnet/stacks-blockchain.md#build-and-install-stacks-blockchain-from-source) (_there may be some extra requirements to building,_ [_defined here_](https://github.com/stacksfoundation/miner-docs/blob/testnet/prerequisites.md#install-required-packages)).\n**Tip:** It is recommended to use a persistent location for the chainstate, in the steps below we're using `/stacks-blockchain`.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#generate-a-keychain)\nGenerate a keychain\nFirst, a keychain needs to be generated. With this keychain, we'll get some testnet BTC from a faucet, and then use that BTC to start mining.\nTo create a keychain, the simplest way is to use the [stacks-cli](https://docs.hiro.so/references/stacks-cli) with the `make_keychain` command.\nCopy```\nnpx @stacks/cli make_keychain -t 2>/dev/null | jq -r\n```\n\nAfter this runs, you should see some JSON printed to the screen that looks like this:\nCopy```\n{\n  \"mnemonic\": \"spare decade dog ghost luxury churn flat lizard inch nephew nut drop huge divert mother soccer father zebra resist later twin vocal slender detail\",\n  \"keyInfo\": {\n    \"privateKey\": \"ooxeemeitar4ahw0ca8anu4thae7aephahshae1pahtae5oocahthahho4ahn7eici\",\n    \"address\": \"STTXOG3AIHOHNAEH5AU6IEX9OOTOH8SEIWEI5IJ9\",\n    \"btcAddress\": \"Ook6goo1Jee5ZuPualeiqu9RiN8wooshoo\",\n    \"wif\": \"rohCie2ein2chaed9kaiyoo6zo1aeQu1yae4phooShov2oosh4ox\",\n    \"index\": 0\n  }\n}\n```\n\n**Do not lose this information** - we'll need to use the `privateKey`, `btcAddress` and `wif` fields in later steps.\nThe above `wif` (`cPdTdMgww2njhnekUZmHmFNKsWAjVdCR4cfvD2Y4UQhFzMmwoW33`) will then need to be imported into the bitcoin testnet network.\nNext, a bitcoin wallet is created:\nCopy```\nbitcoin-cli \\\n  -rpcconnect=127.0.0.1 \\\n  -rpcport=18332 \\\n  -rpcuser=btcuser \\\n  -rpcpassword=btcpass \\\n  createwallet \"miner\" \\\n  false \\\n  false \\\n  \"\" \\\n  false \\\n  false \\\n  true\n```\n\nNow, import your wif (bitcoin private key) inside the newly created wallet.\n**Note:** Be sure to replace `<wif from JSON above>` with the wif value in the `Generate a keychain` step.\nCopy```\nbitcoin-cli \\\n  -rpcport=18332 \\\n  -rpcuser=btcuser \\\n  -rpcpassword=btcpassword \\\n  importprivkey <wif from JSON above>\n```\n\n**Note:** The import may take a while, because a wallet rescan is triggered. After the import has completed successfully, you can check that the address is imported with `getaddressinfo`.\nCopy```\nbitcoin-cli \\\n  -rpcconnect=127.0.0.1 \\\n  -rpcport=18332 \\\n  -rpcuser=btcuser \\\n  -rpcpassword=btcpass \\\n  getaddressinfo <btcAddress from JSON above>\n```\n\nOnce imported, we need to get some testnet BTC to that address. Grab the `btcAddress` field, and paste it into [this Bitcoin testnet faucet](https://tbtc.bitaps.com/). You'll be sent `0.01` testnet BTC to that address.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#update-the-stacks-blockchain-configuration-file)\nUpdate the Stacks Blockchain Configuration File\nNow, we need to configure our node to use this Bitcoin keychain. Copy the [sample testnet miner config](https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/testnet/stacks-node/conf/testnet-miner-conf.toml) to your local machine in a _memorable_ location like `$HOME/testnet-miner-conf.toml`.\nNext, update the stacks configuration:\n  * **Optional, but recommended:** Use a persistent directory to store the Stacks chainstate, i.e. `working_dir = \"/stacks-blockchain\"`\n  * From the `make_keychain` step, modify the `seed` value with `privatekey`\n  * Store the following configuration somewhere on your filesystem (ex: `$HOME/testnet-miner-conf.toml`)\n\n\nCopy```\n[node]\nworking_dir = \"/stacks-blockchain\"\nrpc_bind = \"0.0.0.0:20443\"\np2p_bind = \"0.0.0.0:20444\"\nseed = \"<privateKey from JSON above>\"\nminer = true\nbootstrap_node = \"029266faff4c8e0ca4f934f34996a96af481df94a89b0c9bd515f3536a95682ddc@seed.testnet.hiro.so:30444\"\nmine_microblocks = false\nwait_time_for_microblocks = 10000\n[burnchain]\nwallet_name = \"miner\"\nchain = \"bitcoin\"\nmode = \"xenon\"\npeer_host = \"127.0.0.1\"\nusername = \"<bitcoin config rpcuser>\"\npassword = \"<bitcoin config rpcpassword>\"\nrpc_port = 18332\npeer_port = 18333\n[[ustx_balance]]\naddress = \"ST2QKZ4FKHAH1NQKYKYAYZPY440FEPK7GZ1R5HBP2\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST319CF5WV77KYR1H3GT0GZ7B8Q4AQPY42ETP1VPF\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST221Z6TDTC5E0BYR2V624Q2ST6R0Q71T78WTAX6H\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST2TFVBMRPS5SSNP98DQKQ5JNB2B6NZM91C4K3P7B\"\namount = 10000000000000000\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#start-the-stacks-blockchain)\nStart the Stacks Blockchain\nTo run your miner, run this in the command line:\nCopy```\nstacks-node start --config $HOME/testnet-miner-conf.toml\n```\n\nYour node should start. It will take some time to sync, and then your miner will be running.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#enable-debug-logging)\nEnable Debug Logging\nIn case you are running into issues or would like to see verbose logging, you can run your node with debug logging enabled. In the command line, run:\nCopy```\nSTACKS_LOG_DEBUG=1 stacks-node start --config $HOME/testnet-miner-conf.toml\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#optional-running-a-stacks-blockchain-miner-with-docker)\nOptional: Running a Stacks Blockchain miner with Docker\nAlternatively, you can run a Stacks testnet miner with Docker.\nEnsure you have [Docker](https://docs.docker.com/get-docker/) installed.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#generate-a-keychain-and-get-some-tokens)\nGenerate a Keychain and Get Some Tokens\nGenerate a keychain:\nCopy```\ndocker run -i node:20-alpine npx @stacks/cli make_keychain 2>/dev/null | jq -r\n```\n\nNow, we need to get some tBTC. Grab the `btcAddress` field, and paste it into [this Bitcoin testnet faucet](https://tbtc.bitaps.com/). You'll be sent `0.01` tBTC to that address.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#update-stacks-blockchain-docker-configuration-file)\nUpdate Stacks Blockchain Docker Configuration File\nUse the steps outlined above to create the configuration file.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#start-the-stacks-blockchain-miner-with-docker)\nStart the Stacks Blockchain miner with Docker\n**Info:** The ENV VARS `RUST_BACKTRACE` and `STACKS_LOG_DEBUG` are optional. If removed, debug logs will be disabled.\nCopy```\ndocker run -d \\\n  --name stacks_miner \\\n  --rm \\\n  --network host \\\n  -e RUST_BACKTRACE=\"full\" \\\n  -e STACKS_LOG_DEBUG=\"1\" \\\n  -v \"$HOME/testnet-miner-conf.toml:/src/stacks-node/testnet-miner-conf.toml\" \\\n  -v \"/stacks-blockchain:/stacks-blockchain\" \\\n  -p 20443:20443 \\\n  -p 20444:20444 \\\n  blockstack/stacks-blockchain:latest \\\n/bin/stacks-node start --config /src/stacks-node/testnet-miner-conf.toml\n```\n\nYou can review the node logs with this command:\nCopy```\ndocker logs -f stacks_miner\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#optional-running-in-kubernetes-with-helm)\nOptional: Running in Kubernetes with Helm\nIn addition, you're also able to run a Stacks miner in a Kubernetes cluster using the [stacks-blockchain Helm chart](https://github.com/stacks-network/stacks-blockchain/tree/master/deployment/helm/stacks-blockchain).\nEnsure you have the following prerequisites installed:\n  * [Docker](https://docs.docker.com/get-docker/)\n  * [minikube](https://minikube.sigs.k8s.io/docs/start/) (Only needed if standing up a local Kubernetes cluster)\n  * [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n  * [helm](https://helm.sh/docs/intro/install/)\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#generate-keychain-and-get-some-tokens)\nGenerate keychain and get some tokens\nUse the steps outlined above\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens#install-the-chart-and-run-the-miner)\nInstall the chart and run the miner\nTo install the chart with the release name `my-release` and run the node as a miner:\nCopy```\nminikube start # Only run this if standing up a local Kubernetes cluster\nhelm repo add blockstack https://charts.blockstack.xyz\nhelm install my-release blockstack/stacks-blockchain \\\n  --set config.node.miner=true \\\n  --set config.node.seed=\"privateKey-from-generate-keychain-step\" \\\n```\n\nYou can review the node logs with this command:\nCopy```\nkubectl logs -l app.kubernetes.io/name=stacks-blockchain\n```\n\nFor more information on the Helm chart and configuration options, please refer to the [chart's homepage](https://github.com/stacks-network/stacks-blockchain/tree/master/deployment/helm/stacks-blockchain).\n[PreviousMiner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)[NextMine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1851,
      "title": "Mine Testnet Stacks Tokens | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#introduction)\n  * [Running a Bitcoin Mainnet Full Node](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#running-a-bitcoin-mainnet-full-node)\n  * [Running a Stacks Blockchain miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#running-a-stacks-blockchain-miner)\n  * [Optional: Running a Stacks Blockchain miner with Docker](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#optional-running-a-stacks-blockchain-miner-with-docker)\n  * [Optional: Running in Kubernetes with Helm](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#optional-running-in-kubernetes-with-helm)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n\n\n# Mine Mainnet Stacks Tokens\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#introduction)\nIntroduction\nFor more on the technical details of mining, please review the mining guide.\nThe following is an abridged version of the [walkthrough here](https://github.com/stacksfoundation/miner-docs), written for a Linux system. If you're on Windows or MacOS, there will be some slight modifications needed (PR's welcome!).\nIf you're interested in mining on the Stacks mainnet, you can find instructions on how to do that here:\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#running-a-bitcoin-mainnet-full-node)\nRunning a Bitcoin Mainnet Full Node\nTo participate as a miner on mainnet, you must have access to a mainnet bitcoin node with a wallet (and the wallet's private key). One way to accomplish this is to run bitcoin locally.\n  * [Ensure your computer meets the minimum hardware requirements before continuing.](https://bitcoin.org/en/bitcoin-core/features/requirements#system-requirements)\n\n\nFirst, download a [bitcoin binary](https://bitcoin.org/en/download), or [build from source](https://github.com/stacksfoundation/miner-docs/blob/main/bitcoin.md#source-install) (_there may be some extra requirements to building,_ [_defined here_](https://github.com/stacksfoundation/miner-docs/blob/main/prerequisites.md#install-required-packages)).\nIf you want to learn more about the technical details of mining, please review the mining guide:\n**Tip:** It is recommended to use a persistent location for the chainstate, in the steps below we're using `/bitcoin`.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#update-the-bitcoin-configuration-file)\nUpdate the Bitcoin Configuration File\nNext, update the bitcoin configuration:\n  * **Optional, but recommended:** Use a persistent directory to store the Bitcoin chainstate, i.e. `datadir=/bitcoin`.\n  * **Optional, but recommended:** Update the `rpcallowip` value to only allow `127.0.0.1`, or the stacks miner IPv4.\n  * Modify the `rpcuser` and `rpcpassword` values from the defaults below.\n  * Store the following configuration somewhere on your filesystem (ex: `$HOME/bitcoin.conf`).\n\n\nCopy```\nserver=1\ndisablewallet=0\ndatadir=/bitcoin\nrpcuser=btcuser\nrpcpassword=btcpass\nrpcallowip=0.0.0.0/0\nbind=0.0.0.0:8333\nrpcbind=0.0.0.0:8332\ndbcache=512\nbanscore=1\nrpcthreads=256\nrpcworkqueue=256\nrpctimeout=100\ntxindex=1\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#start-bitcoin)\nStart Bitcoin\nFinally, start `bitcoind` as follows (adjust the `conf` path to where it was created in the previous step, i.e. `$HOME/bitcoin.conf`):\nCopy```\nbitcoind -conf=$HOME/bitcoin.conf\n```\n\n**Note:** It will take a few hours for the node to synchronize with Bitcoin Mainnet.\nWhile it's syncing, you can track the progress with `bitcoin-cli` or the logfile (will be located where the chainstate is stored, i.e. `/bitcoin/debug.log`):\nCopy```\n$ bitcoin-cli \\\n -rpcconnect=127.0.0.1 \\\n -rpcport=8332 \\\n -rpcuser=btcuser \\\n -rpcpassword=btcpass \\\ngetblockchaininfo | jq .blocks\n836745\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#running-a-stacks-blockchain-miner)\nRunning a Stacks Blockchain miner\nFirst, download the latest tagged [stacks blockchain binary](https://github.com/stacks-network/stacks-blockchain/releases/latest), or [build from source](https://github.com/stacksfoundation/miner-docs/blob/main/stacks-blockchain.md#build-and-install-stacks-blockchain-from-source) (_there may be some extra requirements to building,_ [_defined here_](https://github.com/stacksfoundation/miner-docs/blob/main/prerequisites.md#install-required-packages)).\n**Tip:** It is recommended to use a persistent location for the chainstate, in the steps below we're using `/stacks-blockchain`.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#generate-a-keychain)\nGenerate a keychain\nFirst, a keychain needs to be generated. With this keychain, we'll purchase some BTC from a cryptocurrency exchange, and then use that BTC to start mining.\nTo create a keychain, the simplest way is to use the [stacks-cli](https://docs.hiro.so/references/stacks-cli) with the `make_keychain` command.\nCopy```\nnpx @stacks/cli make_keychain 2>/dev/null | jq -r\n```\n\nAfter this runs, you should see some JSON printed to the screen that looks like this:\nCopy```\n{\n  \"mnemonic\": \"spare decade dog ghost luxury churn flat lizard inch nephew nut drop huge divert mother soccer father zebra resist later twin vocal slender detail\",\n  \"keyInfo\": {\n    \"privateKey\": \"ooxeemeitar4ahw0ca8anu4thae7aephahshae1pahtae5oocahthahho4ahn7eici\",\n    \"address\": \"SPTXOG3AIHOHNAEH5AU6IEX9OOTOH8SEIWEI5IJ9\",\n    \"btcAddress\": \"Ook6goo1Jee5ZuPualeiqu9RiN8wooshoo\",\n    \"wif\": \"rohCie2ein2chaed9kaiyoo6zo1aeQu1yae4phooShov2oosh4ox\",\n    \"index\": 0\n  }\n}\n```\n\n**Do not lose this information** - we'll need to use the `privateKey`, `btcAddress` and `wif` fields in later steps.\nThe above `wif` (`Kyk49jsPGen5C1ThhyJJH4CndLk8yLESuQJVGsbbTV3FFF9CRTJG`) will then need to be imported into the bitcoin mainnet network.\nNext, a bitcoin wallet is created:\nCopy```\nbitcoin-cli \\\n  -rpcconnect=127.0.0.1 \\\n  -rpcport=8332 \\\n  -rpcuser=btcuser \\\n  -rpcpassword=btcpass \\\n  createwallet \\\n  wallet_name=\"miner\" \\\n  disable_private_keys=false \\\n  blank=false \\\n  passphrase=\"\" \\\n  avoid_reuse=false \\\n  descriptors=false \\\n  load_on_startup=true\n```\n\nNow, import your wif (bitcoin private key) inside the newly created wallet.\n**Note:** Be sure to replace `<wif from JSON above>` with the wif value in the `Generate a keychain` step.\nCopy```\nbitcoin-cli \\\n  -rpcport=8332 \\\n  -rpcuser=btcuser \\\n  -rpcpassword=btcpassword \\\n  importprivkey <wif from JSON above>\n```\n\n**Note:** The import may take a while, because a wallet rescan is triggered. After the import has completed successfully, you can check that the address is imported with `getaddressinfo`.\nCopy```\nbitcoin-cli \\\n  -rpcconnect=127.0.0.1 \\\n  -rpcport=8332 \\\n  -rpcuser=btcuser \\\n  -rpcpassword=btcpass \\\n  getaddressinfo <btcAddress from JSON above>\n```\n\nOnce imported, we need to get some BTC to that address. You should be able to transfer BTC to this address using a cryptocurrency exchange such as [Coinbase](https://www.coinbase.com), [Binance](https://www.binance.com), or [Kraken](https://www.kraken.com).\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#update-the-stacks-blockchain-configuration-file)\nUpdate the Stacks Blockchain Configuration File\nNow, we need to configure our node to use this Bitcoin keychain. Copy the [sample mainnet miner config](https://raw.githubusercontent.com/stacks-network/stacks-blockchain/master/testnet/stacks-node/conf/mainnet-miner-conf.toml) to your local machine in a _memorable_ location like `$HOME/mainnet-miner-conf.toml`.\nNext, update the stacks configuration:\n  * **Optional, but recommended:** Use a persistent directory to store the Stacks chainstate, i.e. `working_dir = \"/stacks-blockchain\"`\n  * From the `make_keychain` step, modify the `seed` and `mining_key` values with `privatekey`\n  * Store the following configuration somewhere on your filesystem (ex: `$HOME/mainnet-miner-conf.toml`)\n\n\nCopy```\n[node]\nworking_dir = \"/stacks-blockchain\"\nrpc_bind = \"0.0.0.0:20443\"\np2p_bind = \"0.0.0.0:20444\"\nseed = \"<privateKey from JSON above>\"\nminer = true\nbootstrap_node = \"02196f005965cebe6ddc3901b7b1cc1aa7a88f305bb8c5893456b8f9a605923893@seed.mainnet.hiro.so:20444,02539449ad94e6e6392d8c1deb2b4e61f80ae2a18964349bc14336d8b903c46a8c@cet.stacksnodes.org:20444,02ececc8ce79b8adf813f13a0255f8ae58d4357309ba0cedd523d9f1a306fcfb79@sgt.stacksnodes.org:20444,0303144ba518fe7a0fb56a8a7d488f950307a4330f146e1e1458fc63fb33defe96@est.stacksnodes.org:20444\"\nmine_microblocks = false\n[burnchain]\nwallet_name = \"miner\"\nchain = \"bitcoin\"\nmode = \"mainnet\"\npeer_host = \"127.0.0.1\"\nusername = \"<bitcoin config rpcuser>\"\npassword = \"<bitcoin config rpcpassword>\"\nrpc_port = 8332\npeer_port = 8333\nsatoshis_per_byte = 100\nburn_fee_cap = 450000\n[miner]\nmining_key = \"<privateKey from JSON above>\"\nactivated_vrf_key_path = \"/stacks-blockchain/saved_vrf_key.json\"\n[connection_options]\nprivate_neighbors = false\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#start-the-stacks-blockchain)\nStart the Stacks Blockchain\nTo run your miner, run this in the command line:\nCopy```\nstacks-node start --config $HOME/mainnet-miner-conf.toml\n```\n\nYour node should start. It will take some time to sync, and then your miner will be running.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#enable-debug-logging)\nEnable Debug Logging\nIn case you are running into issues or would like to see verbose logging, you can run your node with debug logging enabled. In the command line, run:\nCopy```\nSTACKS_LOG_DEBUG=1 stacks-node start --config $HOME/mainnet-miner-conf.toml\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#optional-running-a-stacks-blockchain-miner-with-docker)\nOptional: Running a Stacks Blockchain miner with Docker\nAlternatively, you can run a Stacks mainnet miner with Docker.\nEnsure you have [Docker](https://docs.docker.com/get-docker/) installed.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#generate-a-keychain-and-get-some-tokens)\nGenerate a Keychain and Get Some Tokens\nGenerate a keychain:\nCopy```\ndocker run -i node:20-alpine npx @stacks/cli make_keychain 2>/dev/null | jq -r\n```\n\nWe need to get some BTC to that address. You should be able to transfer BTC to this address using a cryptocurrency exchange such as [Coinbase](https://www.coinbase.com), [Binance](https://www.binance.com), or [Kraken](https://www.kraken.com).\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#update-stacks-blockchain-docker-configuration-file)\nUpdate Stacks Blockchain Docker Configuration File\nUse the steps outlined above to create the configuration file.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#start-the-stacks-blockchain-miner-with-docker)\nStart the Stacks Blockchain miner with Docker\n**Info:** The ENV VARS `RUST_BACKTRACE` and `STACKS_LOG_DEBUG` are optional. If removed, debug logs will be disabled.\nCopy```\ndocker run -d \\\n  --name stacks_miner \\\n  --rm \\\n  --network host \\\n  -e RUST_BACKTRACE=\"full\" \\\n  -e STACKS_LOG_DEBUG=\"1\" \\\n  -v \"$HOME/mainnet-miner-conf.toml:/src/stacks-node/mainnet-miner-conf.toml\" \\\n  -v \"/stacks-blockchain:/stacks-blockchain\" \\\n  -p 20443:20443 \\\n  -p 20444:20444 \\\n  blockstack/stacks-blockchain:latest \\\n/bin/stacks-node start --config /src/stacks-node/mainnet-miner-conf.toml\n```\n\nYou can review the node logs with this command:\nCopy```\ndocker logs -f stacks_miner\n```\n\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#optional-running-in-kubernetes-with-helm)\nOptional: Running in Kubernetes with Helm\nIn addition, you're also able to run a Stacks miner in a Kubernetes cluster using the [stacks-blockchain Helm chart](https://github.com/stacks-network/stacks-blockchain/tree/master/deployment/helm/stacks-blockchain).\nEnsure you have the following prerequisites installed:\n  * [Docker](https://docs.docker.com/get-docker/)\n  * [minikube](https://minikube.sigs.k8s.io/docs/start/) (Only needed if standing up a local Kubernetes cluster)\n  * [kubectl](https://kubernetes.io/docs/tasks/tools/install-kubectl/)\n  * [helm](https://helm.sh/docs/intro/install/)\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#generate-keychain-and-get-some-tokens)\nGenerate keychain and get some tokens\nUse the steps outlined above\n#### \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens#install-the-chart-and-run-the-miner)\nInstall the chart and run the miner\nTo install the chart with the release name `my-release` and run the node as a miner:\nCopy```\nminikube start # Only run this if standing up a local Kubernetes cluster\nhelm repo add blockstack https://charts.blockstack.xyz\nhelm install my-release blockstack/stacks-blockchain \\\n  --set config.node.miner=true \\\n  --set config.node.seed=\"your-privateKey-from-generate-keychain-step\" \\\n  --set config.burnchain.mode=\"mainnet\"\n```\n\nYou can review the node logs with this command:\nCopy```\nkubectl logs -l app.kubernetes.io/name=stacks-blockchain\n```\n\nFor more information on the Helm chart and configuration options, please refer to the [chart's homepage](https://github.com/stacks-network/stacks-blockchain/tree/master/deployment/helm/stacks-blockchain).\n[PreviousMine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)[NextVerify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 1856,
      "title": "Mine Mainnet Stacks Tokens | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Verify Configuration](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner#verify-configuration)\n  * [Verify Operations](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner#verify-operations)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n\n\n# Verify Miner\n## \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner#verify-configuration)\nVerify Configuration\nYou can verify that your node is operating as a miner by checking its log output to verify that it was able to find its Bitcoin UTXOs:\nCopy```\n$head-n1000/path/to/your/node/logs|grep-iutxo\nINFO [1630127492.031042] [testnet/stacks-node/src/run_loop/neon.rs:146] [main] Miner node: checking UTXOs at address: <redacted>\nINFO [1630127492.062652] [testnet/stacks-node/src/run_loop/neon.rs:164] [main] UTXOs found - will run as a Miner node\n```\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner#verify-operations)\nVerify Operations\nThe first transaction of the miner is a registration transaction on Bitcoin. It just contains an `OP_RETURN` utxo.\nThereafter, the miner creates for each block one transaction on Bitcoin with one date output, and two commit outputs to the stackers. The amount is half the value of the configured `burn_fee_cap` property.\nIf the miner won a sortition, the corresponding Stacks address will create a tenure change transaction and a coinbase transaction. The block rewards will be awarded 100 blocks later if mining was successful.\n[PreviousMine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)[NextRun a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\nLast updated 1 month ago\nWas this helpful?\n",
      "wordCount": 710,
      "title": "Verify Miner | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/running-a-signer",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [How to Use This Guide](https://docs.stacks.co/guides-and-tutorials/running-a-signer#how-to-use-this-guide)\n  * [Background and High-Level Process](https://docs.stacks.co/guides-and-tutorials/running-a-signer#background-and-high-level-process)\n  * [Knowledge Prerequisites](https://docs.stacks.co/guides-and-tutorials/running-a-signer#knowledge-prerequisites)\n  * [Minimum System Requirements](https://docs.stacks.co/guides-and-tutorials/running-a-signer#minimum-system-requirements)\n  * [Preflight Setup](https://docs.stacks.co/guides-and-tutorials/running-a-signer#preflight-setup)\n  * [Create a Configuration File](https://docs.stacks.co/guides-and-tutorials/running-a-signer#create-a-configuration-file)\n  * [Running the Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer#running-the-signer)\n  * [Set Up Your Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/running-a-signer#set-up-your-bitcoin-node)\n  * [Set Up Your Stacks Node](https://docs.stacks.co/guides-and-tutorials/running-a-signer#set-up-your-stacks-node)\n  * [Setup Your Stacks Accounts](https://docs.stacks.co/guides-and-tutorials/running-a-signer#setup-your-stacks-accounts)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Run a Signer\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#how-to-use-this-guide)\nHow to Use This Guide\nIf you are not familiar with the concept of signing and stacking, and how they work together, be sure to check out the [Stackers and Signing concept guide](https://docs.stacks.co/concepts/block-production/stackers-and-signing).\nThis guide is a step-by-step walkthrough for actually setting up and running a signer. If you need to troubleshoot your signer setup, you can check out the Signer Troubleshooting section.\nIf you need to Stack your STX, or have questions about how that process works, check out the Stack STX guide.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#background-and-high-level-process)\nBackground and High-Level Process\nIn order to run a signer, you'll need to run a signer and a Stacks node side-by-side. Specifically, you'll want to run a follower node. Instructions for doing this are listed below in the \"Running Your Stacks Node\" section. The signer will monitor for events coming from the stacks node and is in charge of using the generated account (next section) to sign incoming Stacks blocks sent from the Stacks node.\nThis doc will provide instructions on how to set up both using either Docker or using the release binaries available in the [stacks core](https://github.com/stacks-network/stacks-core/releases) repository.\nIt will also walk through how to set up the config files to get the signer and Stacks node communicating correctly.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#knowledge-prerequisites)\nKnowledge Prerequisites\n  * Docker and basic knowledge of pulling and running images\n  * Basic knowledge of [Stacks accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n  * Basic knowledge of [stacking](https://docs.stacks.co/concepts/block-production/stacking) and the [Stacking flow](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#signer-checklist)\nDetailed steps for each of these are laid out below, but this checklist is being included as a way to quickly reference if you have taken all the appropriate actions to run a signer.\n**Pre-Launch Setup**\n  * Ensure your system meets the [minimum system requirements](https://docs.stacks.co/guides-and-tutorials/running-a-signer#minimum-system-requirements).\n  * Acquire Docker and basic knowledge of Stacks accounts, stacking, and the Nakamoto stacking flow (links provided above).\n\n\n**Preflight Setup**\n  * Generate a new private key using stacks-cli.\n  * Save the generated account information securely.\n\n\n**Configuration Setup**\n  * Create a `signer-config.toml` file with necessary configurations:\n    * node_host\n    * endpoint\n    * network\n    * db_path\n    * auth_password\n    * stacks_private_key\n  * Store `signer-config.toml` securely and note down the values used.\n\n\n**Running the Signer**\n  * Decide whether to run the signer using Docker (recommended) or as a binary.\n  * If using Docker:\n    * Set up the necessary ports and volumes.\n    * Run the Docker container with the appropriate settings.\n  * If running as a binary:\n    * Build `stacks-core` from source or download the pre-built binary.\n    * Run the signer using the command: `stacks-signer run --config <path_to_config>`.\n\n\n**Verify Signer Operation**\n  * Check that the signer is listening on its configured endpoint.\n  * Confirm that there are no errors and the system is ready for connections.\n\n\n**Setting Up the Stacks Node**\n  * Create a `node-config.toml`, including the following necessary settings:\n    * connection_options.sauth_token\n    * events_observer.endpoint (matching the signer configuration)\n  * Decide whether to run the Stacks node using Docker or as a binary.\n  * If using Docker:\n    * Set up the Docker container with the correct ports and volumes.\n    * Run the Stacks node Docker container.\n  * If running as a binary:\n    * Build `stacks-core` from source or download the pre-built binary.\n    * Run it with the command: `./stacks-node start --config <path_to_config>`.\n\n\n**Verify Stacks Node Operation**\n  * Check the Stacks node logs for successful connection to the signer.\n  * Confirm that the node is syncing Bitcoin headers properly.\n\n\n**Setup Stacks Accounts**\n  * Set up a ‚Äúpool operator‚Äù wallet in a Stacks wallet (e.g., Leather or Xverse).\n  * Fund the pool operator wallet with sufficient STX for transaction fees.\n  * Share the pool operator wallet‚Äôs STX address with delegating parties.\n  * Fund your signer's STX wallet with enough STX to cover transaction fees (recommend at least 100-200 STX).\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#minimum-system-requirements)\nMinimum System Requirements\nThese are the **minimum required specs** to be able to run a node and signer, but it is recommended to have more than the minimum for optimal performance.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#signer-stacks-node-and-bitcoin-node)\nSigner, Stacks node and Bitcoin node\n  * 4 vcpu\n  * 8GB memory if running only a Stacks node and signer\n  * 16GB memory if running Stacks + Bitcoin node + signer\n  * 1.5+TB storage (1TB for Bitcoin node, 500GB for Stacks node, and 50 GB for signer)\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#preflight-setup)\nPreflight Setup\nBefore you get your signer set up, you'll need to [generate a new private key](https://docs.stacks.co/stacks-101/accounts#creation). The `stacks-cli` provides a mechanism for quickly generating a new account keychain via a simple CLI interface. The linked guide will show you how to create one of those accounts on testnet.\nOnce you follow the instructions linked above, be sure to save the information in a secure location, you'll need it in a future step.\n**What should the networking setup look like?**\nSigners are intended to work with a local node. The node<->signer connection is not run over SSL, which means you can be exposed to a man-in-the-middle attack if your signer and node are hosted on separate machines. Be sure you are aware of your networking setup, especially making sure your signer isn't allowing requests from the public internet. We recommend setting up your infrastructure to either have the signer and node running locally on the same machine or use only internal networking between them.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#create-a-configuration-file)\nCreate a Configuration File\nCreate a new file called `signer-config.toml`. In that file, put the contents from the example signer config file from the [Sample Configuration Files](https://docs.stacks.co/reference/sample-configuration-files) page. Each field is described on that page.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#running-the-signer)\nRunning the Signer\nThere are two options for running the signer: Docker and running with a binary. The recommended option is to use Docker. If you want to run as a binary, you will need to either build `stacks-core` from source, or download a signer release binary from the [stacks core releases page](https://github.com/stacks-network/stacks-core/releases). Instructions for how to do this are contained below in the relevant section.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#running-the-signer-with-docker)\nRunning the Signer with Docker\nYou can run the signer as a Docker container using the [`blockstack/stacks-signer:3.1.0.0.5.0`](https://hub.docker.com/layers/blockstack/stacks-signer/3.1.0.0.5.0/images/sha256-4f0c19225065754ed08594deb3d2c67dc1126558e9e50f8174a1bc1736fedb99) image.\nWhen running the Docker container, you‚Äôll need to ensure a few things:\n  * The port configured as the `endpoint` (in the above linked example, ‚Äú30000‚Äù) must be exposed to your Stacks node. Note that this endpoint should not be public, but must be exposed to your Stacks node.\n  * You‚Äôll need a volume with at least a few GB of available storage that contains the folder your `db_path` is in. In the above example, that would be `/var`.\n  * You‚Äôll need to mount your `signer-config.toml` file as a volume, noted below with the first `-v` flag.\n\n\nAn example command for running the Docker image with `docker run` is shown below.\nBe sure to replace the `STX_SIGNER_PATH` with the correct path to your config file and where you want to install and run the signer. In this example it will be done in the current directory.\nCopy```\nIMG=\"blockstack/stacks-signer\"\nVER=\"3.1.0.0.5.0\"\nSTX_SIGNER_PATH=\"./\"\nSTX_SIGNER_DATA=\"$STX_SIGNER_PATH/data\"\nSTX_SIGNER_CONFIG=\"$STX_SIGNER_PATH/signer-config.toml\"\ndocker run -d \\\n    -v $STX_SIGNER_CONFIG:/config.toml \\\n    -v $STX_SIGNER_DATA:/var/stacks \\\n    -p 30000:30000 \\\n    -e RUST_BACKTRACE=full \\\n    -e BLOCKSTACK_DEBUG=0 \\\n    --name stacks-signer \\\n    $IMG:$VER \\\n    stacks-signer run \\\n    --config /config.toml\n```\n\nIf you get an error saying that the manifest cannot be found or about the requested image platform not matching the host platform, you are probably running on system architecture other than x64 arch. Since you are using a PR release you'll need to specify your platform with the `--platform` flag.\nFor example, if you are running on M1 Mac, you would add `--platform=linux/amd64` to the above command.\nOr, with a custom Dockerfile:\nCopy```\nFROM blockstack/stacks-signer:3.1.0.0.5.0\nCOPY signer-config.toml /config.toml\nEXPOSE 30000\nCMD [\"stacks-signer\", \"run\", \"--config\", \"/config.toml\"]\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#running-the-signer-as-a-binary)\nRunning the Signer as a Binary\nIf you do not want to use Docker, you can alternatively run your stacks node as a binary.\nOfficial binaries are available from the [Stacks Core releases page on Github](https://github.com/stacks-network/stacks-core/releases). Each release includes pre-built binaries. Download the ZIP file for your server‚Äôs architecture and decompress it. Inside of that folder is a `stacks-signer` binary.\nYou can run the signer with the following command (be sure to replace `../signer-config.toml` with the actual path of your config file).\nCopy```\nstacks-signer run --config ../signer-config.toml\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#verify-the-signer-is-running)\nVerify the Signer is Running\nTo make sure your signer is running successfully, run `docker ps` to list your running containers.\nYou should see something like this\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fke3PaSiMvjSTVZc1koVU%252Fimage.png%3Falt%3Dmedia%26token%3Dd687f069-0a16-4ac8-b428-622915732f35&width=768&dpr=4&quality=100&sign=a30f0e2e&sv=2)\nNow check the logs of that container by running:\nCopy```\ndocker logs 877d478dfe7f\n```\n\nBe sure to replace the container ID at the end with your actual container ID.\nYou should see a message that says `Signer spawned successfully. Waiting for messages to process...`.\nYou may also see a message indicating that your signer is not registered, like this:\nCopy```\nWARN [1712003997.160121] [stacks-signer/src/runloop.rs:247] [signer_runloop] Signer is not registered for reward cycle 556. Waiting for confirmed registration...\n```\n\nThis means your signer is running successfully. Your next step is to begin stacking in order to get your signer registered. First, if you haven't yet, get your Stacks node up and running following the instructions below and then proceed to [How to Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow) to get started stacking.\nEven after you Stack, you may still see a message that says:\nCopy```\nSigner is not registered for the current reward cycle (557) or next reward cycle (558). Waiting for confirmed registration...\n```\n\nThis is normal and means that you have stacked, but have not yet reach the prepare phase for your chosen reward cycle. Assuming you have met the stacking minimum, your signer will be picked up and registered during this prepare phase.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#set-up-your-bitcoin-node)\nSet Up Your Bitcoin Node\nWhile optional, we strongly recommend running your own Bitcoin node in order to optimize signer health and performance.\nWe have created guides for running both a [full Bitcoin node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node) and a [pruned Bitcoin node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node) you can follow.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#set-up-your-stacks-node)\nSet Up Your Stacks Node\nOnce your signer is running, the next step is to set up and run a Stacks node. It‚Äôs important to have the signer already running, because the node will not run unless it is able to send events to the signer.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#stacks-node-configuration)\nStacks Node Configuration\nCreate a file called `node-config.toml`. On the [Sample Configuration Files](https://docs.stacks.co/reference/sample-configuration-files) page you'll find the full configuration file contents you'll need to add to this file.\nThe important aspects that you‚Äôll need to change are:\n  * `working_dir`: a directory path where the node will persist data\n  * `auth_token`: an authentication token that your signer uses to authenticate certain requests to your node. This must match the value you used as `auth_password` in the signer‚Äôs configuration.\n  * `events_observer.endpoint`: This is the host (IP address and port) where your signer is configured to listen for events. An example string would be ‚Äù`127.0.0.1:30000`‚Äù or ‚Äù`stacks-signer.local:30000`‚Äù\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#start-with-an-archive)\nStart with an archive\nIt will be much faster to start with an archive of the chain state rather than syncing from genesis.\nArchives can be found at <https://archive.hiro.so>. For the Stacks node mainnet, the latest snapshot can be found at <https://archive.hiro.so/mainnet/stacks-blockchain/mainnet-stacks-blockchain-latest.tar.gz>. You can also [browse all mainnet snapshots](https://archive.hiro.so/mainnet/stacks-blockchain/).\nYou‚Äôll want to download this on the same machine that will run the Stacks node. One way to do this is:\nCopy```\ncurl -# https://archive.hiro.so/mainnet/stacks-blockchain/mainnet-stacks-blockchain-latest.tar.gz -o stacks-snapshot.tar.gz\ntar -zxvf stacks-snapshot.tar.gz\n```\n\nThis will decompress the snapshot and create a `mainnet` folder in the same place that you downloaded the archive.\nFor the Stacks node to use this archive, you must specify `working_dir` in your config file to be the place where you can find the `mainnet` folder.\nFor example:\n  * The snapshot is available at /Users/blah/mainnet\n  * You will set working_dir to equal ‚Äù/Users/blah‚Äù\n    * Note that the string does not include the `mainnet` part\n\n\n**Warning:** It is always better to keep a local snapshot of the chain state for fast recovery and redundancy. This ensures you can quickly restore your node in case of data loss or corruption.\nSee [here](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate) for additional best practices to create a local chainstate snapshot.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#run-a-stacks-node-with-docker)\nRun a Stacks Node with Docker\nYou can run the Stacks node as a Docker container using the `blockstack/stacks-core` image, currently on [version 3.1.0.0.13](https://hub.docker.com/layers/blockstack/stacks-core/3.1.0.0.13/images/sha256:2f87331740c3afbe69b6e9bd572ebe991c95191731a9e135de66084871c1f2ad). When running the Docker container, you‚Äôll need to ensure a few things:\n  * The port configured for `p2p_bind` must be exposed to the internet\n  * The port configured for `rpc_bind` must be accessible by your signer\n  * `working_dir` needs to be on a volume with 500GB-1TB of available storage\n  * You‚Äôll need to include your `node-config.toml` file\n\n\nAn example for running the node‚Äôs Docker image with docker run is below. Be sure to run this from the same directory as your `node-config.toml` file or change the `STX_NODE_CONFIG` option.\nCopy```\nIMG=\"blockstack/stacks-core\"\nVER=\"3.1.0.0.13\"\nSTX_NODE_CONFIG=\"./node-config.toml\"\ndocker run -d \\\n    -v $STX_NODE_CONFIG:/config.toml \\\n    -v /var/stacks \\\n    -p 20443:20443 \\\n    -p 20444:20444 \\\n    -e RUST_BACKTRACE=full \\\n    --name stacks-node \\\n    $IMG:$VER \\\n    stacks-node start \\\n    --config /config.toml\n```\n\nOr, using a custom Dockerfile:\nCopy```\nFROM blockstack/stacks-core:3.1.0.0.13\nCOPY node-config.toml /config.toml\nEXPOSE 20444\nEXPOSE 20443\nCMD [\"stacks-node\", \"start\", \"--config\", \"/config.toml\"]\n```\n\nIf when running your node you get a connection refused error that looks like this, you may need to point your `event_observer`'s `endpoint` field to the Docker signer container.\nFirst, be sure that you have the proper entry point specified in your `node-config.toml` file.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FhKIP3Gwavu7GE7yyB32Z%252Fimage.png%3Falt%3Dmedia%26token%3Dc645645c-f317-4572-8e33-bc1afcb7369a&width=768&dpr=4&quality=100&sign=2314563a&sv=2)\nIf you are inside a Docker container with default bridging mode, then localhost is not available, and you'll need to point to the Docker host.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#run-a-stacks-node-with-a-binary)\nRun a Stacks Node with a Binary\nIf you do not want to use Docker, you can alternatively run your stacks node as a binary.\nOfficial binaries are available from the [Stacks Core releases page on Github](https://github.com/stacks-network/stacks-core/releases). Each release includes pre-built binaries. Download the ZIP file for your server‚Äôs architecture and decompress it. Inside of that folder is a `stacks-node` binary.\nYou can start the binary with the following command (be sure to replace node-config.toml with the actual path of your config file):\nCopy```\n./stacks-node start --config node-config.toml\n```\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#verify-stacks-node-is-running)\nVerify Stacks Node is Running\nOnce you‚Äôve started the Stacks node, you‚Äôll see logs that start like this:\nCopy```\nMar  6 19:35:08.212848 INFO stacks-node 0.1.0\nMar  6 19:35:08.213084 INFO Loading config at path ./Stacks-config.toml\nMar  6 19:35:08.216674 INFO Registering event observer at: localhost:30000\nMar  6 19:35:08.221603 INFO Migrating sortition DB to the latest schema version\nMar  6 19:35:08.224082 INFO Migrating chainstate DB to the latest schema version\nMar  6 19:35:08.227404 INFO Start syncing Bitcoin headers, feel free to grab a cup of coffee, this can take a while\n```\n\nIt‚Äôs important to ensure that you see the log message `Registering event observer at XXX` with your signer‚Äôs endpoint included. Once Bitcoin headers have been synced, you may also be able to send a GET request to `/v2/info` on your Stacks node‚Äôs RPC endpoint (port 20443 by default).\nYou may see a lot of messages while the node is syncing with Bitcoin blocks. You can check the [How to Read the Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs) section if any of these concern you, but in all likelihood you can ignore any messages until Bitcoin blocks are synced.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#setup-your-stacks-accounts)\nSetup Your Stacks Accounts\nFor more information on the relationship between stacking and signing and how stacking works, check out the [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx) guide.\nAs a signer you‚Äôll need to fund and manage two Stacks accounts:\n  1. A ‚Äúpool operator‚Äù wallet, which commits delegated STX to your signer\n  2. Your signer‚Äôs wallet\n\n\nFor testing, make sure that you are using testnet, and not mainnet STX. You can change network settings within your wallet, and testnet STX can be [requested from a faucet](https://explorer.hiro.so/sandbox/faucet?chain=testnet).\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer#setup-your-pool-operator-wallet)\nSetup Your Pool Operator Wallet\nYou can set up your pool operator wallet using any Stacks wallet, such as [Leather](https://leather.io) or [Xverse](https://www.xverse.app). You may choose to generate a new account or use an existing one. If you prefer to use a hardware wallet, Leather has support for the Ledger hardware wallet.\nOnce your wallet has been created, you‚Äôll need to fund it with enough STX to cover transaction fees. For testnet, you can use a [faucet exposed by the Stacks Explorer](https://explorer.hiro.so/sandbox/faucet?chain=testnet).\nFinally, share this wallet‚Äôs STX address with the parties that will be delegating STX to you. For improved user experience, you might want to use the helper contract that allows to specify a btc address for stackers ([pox4-pools](https://explorer.hiro.so/txid/SP001SFSMC2ZY76PD4M68P3WGX154XCH7NE3TYMX.pox4-pools?chain=mainnet)) and to add your pool to [earn.leather.io](https://earn.leather.io).\n[PreviousVerify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)[NextSigner Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 3300,
      "title": "Run a Signer | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Step 1 - Prerequisites](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-1-prerequisites)\n  * [Step 2 - Set Up Your Stacks Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-2-set-up-your-stacks-signer)\n  * [Download the stacks-signer binary](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#download-the-stacks-signer-binary)\n  * [Create the configuration file](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#create-the-configuration-file)\n  * [Verify the setup](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#verify-the-setup)\n  * [Start the signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#start-the-signer)\n  * [Step 3a - Set up a Bitcoin node (Optional but strongly recommended)](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-3a-set-up-a-bitcoin-node-optional-but-strongly-recommended)\n  * [Step 3b - Set Up Your Stacks Node](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-3b-set-up-your-stacks-node)\n  * [Download the stacks-node binary](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#download-the-stacks-node-binary)\n  * [Create the configuration file](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#create-the-configuration-file-1)\n  * [Optional: Start the node with a data archive](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#optional-start-the-node-with-a-data-archive)\n  * [Verify the setup](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#verify-the-setup-1)\n  * [Start the node](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#start-the-node)\n  * [Step 5 - Generate your signer signature](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-5-generate-your-signer-signature)\n  * [Step 6 - Start stacking](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-6-start-stacking)\n  * [Step 7 - Monitoring](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-7-monitoring)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n\n\n# Signer Quickstart\n**Current Signer and Stacks Node Versions**\n**Stacks Signer - latest**\n  * [Docker Image](https://hub.docker.com/layers/blockstack/stacks-signer/latest)\n  * [GitHub Release](https://github.com/stacks-network/stacks-core/releases/latest)\n\n\n**Stacks Node - latest**\n  * [Docker Image](https://hub.docker.com/layers/blockstack/stacks-core/latest)\n  * [GitHub Release](https://github.com/stacks-network/stacks-core/releases/latest)\n\n\nIf you want to get up and running as an active signer as quickly as possible, here is a list of the commands you need to run and actions to take.\nIf you are not familiar with how signing works yet, be sure to check out the [Stackers and Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing) concept guide.\nIf you would like a more detailed walkthrough of all of these steps, take a look at the [Running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) guide.\nThe CLI examples below may show outdated release versions. For the latest releases, always refer to the links above in the top info block.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-1-prerequisites)\nStep 1 - Prerequisites\nMainnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-mainnet)\nTestnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-testnet)\nCopy```\n# Create the required directories\nmkdir-p~/stacks-signer/data\nmkdir-p~/stacks-node/data\n# Install needed packages\nsudoaptinstall-ynpmwgetunzipjqtar\n# Install Stacks CLI globally\nnpminstall--global@stacks/cli\n# Generate a new account and store details in a file\nstxmake_keychain|jq>~/stacks-signer/keychain.json\n```\n\nCopy```\n# Create the required directories\nmkdir-p~/stacks-signer/data\nmkdir-p~/stacks-node/data\n# Install needed packages\nsudoaptinstall-ynpmwgetunzipjqtar\n# Install Stacks CLI globally\nnpminstall--global@stacks/cli\n# Generate a new account and store details in a file\n# '-t' option makes this a testnet account\nstxmake_keychain-t|jq>~/stacks-signer/keychain.json\n```\n\nThe account file previously created looks like this:\nCopy```\n{\n  \"mnemonic\": \"aaa bbb ccc ddd ...\",\n  \"keyInfo\": {\n    \"privateKey\": \"65f3...\",\n    \"publicKey\": \"03a3...\",\n    \"address\": \"SP1G...\",\n    \"btcAddress\": \"19tg...\",\n    \"wif\": \"Kzdt...\",\n    \"index\": 0\n  }\n}\n```\n\nFrom this file, you'll need the `privateKey` value.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-2-set-up-your-stacks-signer)\nStep 2 - Set Up Your Stacks Signer\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#download-the-stacks-signer-binary)\nDownload the stacks-signer binary\nOfficial binaries are available from the [Stacks Core releases page on Github](https://github.com/stacks-network/stacks-core/releases). Each release includes pre-built binaries. Download the [latest signer release ZIP file](https://github.com/stacks-network/stacks-core/releases/tag/signer-3.1.0.0.5.0) for your server‚Äôs architecture and decompress it. Inside of that folder is a `stacks-signer` binary.\nAssuming a `Linux x64 glibc` machine, the commands to download and uncompress the signer binary look like this:\nCopy```\n# Enter the signer directory\ncd ~/stacks-signer\n# Download the signer binary zip\nwget https://github.com/stacks-network/stacks-core/releases/download/signer-3.1.0.0.5.0/linux-glibc-x64.zip\n# Unzip the signer binary archive\nunzip linux-glibc-x64.zip\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#create-the-configuration-file)\nCreate the configuration file\nCreate the configuration file required to start the signer (be sure to replace `<your_token>` and `<your_private_key>` with your auth token and private key values):\nMainnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-mainnet-1)\nTestnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-testnet-1)\nCopy```\n# Set environment variables\nAUTH_TOKEN=<your_token> # Used for signer-node authentication\nPRIVATE_KEY=<your_private_key> # privateKey from Step 1, this is the signer's private key\n# Create the signer's configuration file\ncat <<EOF> ~/stacks-signer/signer-config.toml\nnode_host = \"127.0.0.1:20443\"\nendpoint = \"127.0.0.1:30000\"\nnetwork = \"mainnet\"\ndb_path = \"$HOME/stacks-signer/data/signer.sqlite\"\nauth_password = \"$AUTH_TOKEN\"\nstacks_private_key = \"$PRIVATE_KEY\"\nmetrics_endpoint = \"127.0.0.1:9154\"\nblock_proposal_timeout_ms = 180000\ntenure_idle_timeout_secs = 120\nEOF\n```\n\nCopy```\n# Set environment variables\nAUTH_TOKEN=<your_token> # Used for signer-node authentication\nPRIVATE_KEY=<your_private_key> # privateKey from Step 1, this is the signer's private key\n# Create the signer's configuration file\ncat <<EOF> ~/stacks-signer/signer-config.toml\nnode_host = \"127.0.0.1:20443\"\nendpoint = \"127.0.0.1:30000\"\nnetwork = \"testnet\"\ndb_path = \"$HOME/stacks-signer/data/signer.sqlite\"\nauth_password = \"$AUTH_TOKEN\"\nstacks_private_key = \"$PRIVATE_KEY\"\nmetrics_endpoint = \"127.0.0.1:9154\"\nblock_proposal_timeout_ms = 180000\nEOF\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#verify-the-setup)\nVerify the setup\nTo ensure the signer has been set up correctly, you can run the following commands:\nCopy```\n# Verify the signer's version\n~/stacks-signer/stacks-signer --version\n# Output:\nstacks-signer stacks-signer signer-3.1.0.0.5.0 (release/signer-3.1.0.0.5.0:513dbc5, release build, linux [x86_64])\n# Verify the config file\n~/stacks-signer/stacks-signer check-config -c ~/stacks-signer/signer-config.toml \n# Output:\nConfig: \nStacks node host: 127.0.0.1:20443\nSigner endpoint: 127.0.0.1:30000\nStacks address: SP1G... # address from keychain file\nPublic key: 03a3... # publicKey from keychain file\nNetwork: mainnet # or testnet\nChain ID: 0x1 # or 0x80000000 for testnet\nDatabase path: /home/admin/stacks-signer/data/signer.sqlite\nMetrics endpoint: 127.0.0.1:9154\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#start-the-signer)\nStart the signer\nIf the outputs of the previous commands are correct, you can proceed and start the signer:\nCopy```\n~/stacks-signer/stacks-signer run -c ~/stacks-signer/signer-config.toml\n```\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-3a-set-up-a-bitcoin-node-optional-but-strongly-recommended)\nStep 3a - Set up a Bitcoin node (Optional but strongly recommended)\nIn order to optimize signer health and performance, we highly recommend setting up your own Bitcoin node rather than relying on a third-party node.\nWe have created guides for running both a [full Bitcoin node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node) and a [pruned Bitcoin node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node) you can follow.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-3b-set-up-your-stacks-node)\nStep 3b - Set Up Your Stacks Node\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#download-the-stacks-node-binary)\nDownload the stacks-node binary\nOfficial binaries are available from the [Stacks Core releases page on Github](https://github.com/stacks-network/stacks-core/releases). Each release includes pre-built binaries. Download the [latest node release ZIP file](https://github.com/stacks-network/stacks-core/releases/latest) for your server‚Äôs architecture and decompress it. Inside of that folder is a `stacks-node` binary.\nAssuming a `Linux x64 glibc` machine, the commands to download and uncompress the node binary look like this:\nCopy```\n# Enter the node directory\ncd ~/stacks-node\n# Download the node binary zip\nwget https://github.com/stacks-network/stacks-core/releases/download/3.1.0.0.5/linux-glibc-x64.zip\n# Unzip the node binary archive\nunzip linux-glibc-x64.zip\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#create-the-configuration-file-1)\nCreate the configuration file\nCreate the configuration file required to start the node (be sure to replace `<your_token>` with your auth token value):\nMainnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-mainnet-2)\nTestnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-testnet-2)\nFor mainnet, we strongly recommended that you run your own bitcoin node (you can follow guides on how to run a [full Bitcoin node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node) or a [pruned Bitcoin node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)) in order to ensure you have no connection issues when downloading bitcoin blocks. A hosted bitcoin node may cause your stacks node to fall behind tip and remain unsynced.\nIf you run your own bitcoin node, you'll have to update `peer_host` and optionally add `rpc_port`, `peer_port`, `username` and `password` fields under the `[burnchain]` section of the node's configuration file.\nCopy```\n# Set environment variables\nAUTH_TOKEN=<your_token> # Used for signer-node authentication, same token as the one set up in the signer configuration\n# Create the node's configuration file\ncat <<EOF> ~/stacks-node/node-config.toml\n[node]\nworking_dir = \"$HOME/stacks-node/data\"\nrpc_bind = \"127.0.0.1:20443\"\np2p_bind = \"0.0.0.0:20444\"\nprometheus_bind = \"127.0.0.1:9153\" \nbootstrap_node = \"02196f005965cebe6ddc3901b7b1cc1aa7a88f305bb8c5893456b8f9a605923893@seed.mainnet.hiro.so:20444,02539449ad94e6e6392d8c1deb2b4e61f80ae2a18964349bc14336d8b903c46a8c@cet.stacksnodes.org:20444,02ececc8ce79b8adf813f13a0255f8ae58d4357309ba0cedd523d9f1a306fcfb79@sgt.stacksnodes.org:20444,0303144ba518fe7a0fb56a8a7d488f950307a4330f146e1e1458fc63fb33defe96@est.stacksnodes.org:20444\"\nstacker = true\n[burnchain]\nchain = \"bitcoin\"\nmode = \"mainnet\"\npeer_host = \"bitcoin.mainnet.stacks.org\"\n[connection_options]\nauth_token = \"$AUTH_TOKEN\"\n[[events_observer]]\nendpoint = \"127.0.0.1:30000\"\nevents_keys = [\"stackerdb\", \"block_proposal\", \"burn_blocks\"]\nEOF\n```\n\nCopy```\n# Set environment variables\nAUTH_TOKEN=<your_token> # Used for signer-node authentication, same token as the one set up in the signer configuration\n# Create the node's configuration file\ncat <<EOF> ~/stacks-node/node-config.toml\n[node]\nworking_dir = \"$HOME/stacks-node/data\"\nrpc_bind = \"127.0.0.1:20443\"\np2p_bind = \"0.0.0.0:20444\"\nbootstrap_node = \"029266faff4c8e0ca4f934f34996a96af481df94a89b0c9bd515f3536a95682ddc@seed.testnet.hiro.so:30444\"\nprometheus_bind = \"127.0.0.1:9153\" \nstacker = true\npox_sync_sample_secs = 30\nalways_use_affirmation_maps = true\nrequire_affirmed_anchor_blocks = true\n[burnchain]\nmode = \"krypton\"\npeer_host = \"bitcoin.regtest.hiro.so\"\npeer_port = 18444\npox_prepare_length = 100\npox_reward_length = 900\n[connection_options]\nauth_token = \"$AUTH_TOKEN\"\nprivate_neighbors = false\n[[events_observer]]\nendpoint = \"127.0.0.1:30000\"\nevents_keys = [\"stackerdb\", \"block_proposal\", \"burn_blocks\"]\n[[ustx_balance]]\naddress = \"ST2QKZ4FKHAH1NQKYKYAYZPY440FEPK7GZ1R5HBP2\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST319CF5WV77KYR1H3GT0GZ7B8Q4AQPY42ETP1VPF\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST221Z6TDTC5E0BYR2V624Q2ST6R0Q71T78WTAX6H\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST2TFVBMRPS5SSNP98DQKQ5JNB2B6NZM91C4K3P7B\"\namount = 10000000000000000\n[[burnchain.epochs]]\nepoch_name = \"1.0\"\nstart_height = 0\n[[burnchain.epochs]]\nepoch_name = \"2.0\"\nstart_height = 0\n[[burnchain.epochs]]\nepoch_name = \"2.05\"\nstart_height = 1\n[[burnchain.epochs]]\nepoch_name = \"2.1\"\nstart_height = 2\n[[burnchain.epochs]]\nepoch_name = \"2.2\"\nstart_height = 3\n[[burnchain.epochs]]\nepoch_name = \"2.3\"\nstart_height = 4\n[[burnchain.epochs]]\nepoch_name = \"2.4\"\nstart_height = 5\n[[burnchain.epochs]]\nepoch_name = \"2.5\"\nstart_height = 6\n[[burnchain.epochs]]\nepoch_name = \"3.0\"\nstart_height = 1_900\n[[burnchain.epochs]]\nepoch_name = \"3.1\"\nstart_height = 2_000\nEOF\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#optional-start-the-node-with-a-data-archive)\nOptional: Start the node with a data archive\nYou can [download a chainstate archive](https://archive.hiro.so/) in order to quickly sync your node, otherwise it will take a long time to get up-to-date with the other nodes.\nMainnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-mainnet-3)\nTestnet\n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#tab-testnet-3)\nCopy```\n# Enter the node's datadir\ncd ~/stacks-node/data\n# Download the archive\nwget https://archive.hiro.so/mainnet/stacks-blockchain/mainnet-stacks-blockchain-latest.tar.gz\n# Decompress the archive\ntar -xvf mainnet-stacks-blockchain-latest.tar.gz\n# Remove the archive\nrm mainnet-stacks-blockchain-latest.tar.gz\n```\n\nCopy```\n# Enter the node's datadir\ncd ~/stacks-node/data\n# Download the archive\nwget https://archive.hiro.so/testnet/stacks-blockchain/testnet-stacks-blockchain-latest.tar.gz\n# Decompress the archive\ntar -xvf testnet-stacks-blockchain-latest.tar.gz\n# Remove the archive\nrm testnet-stacks-blockchain-latest.tar.gz\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#verify-the-setup-1)\nVerify the setup\nTo ensure the node has been set up correctly, you can run the following commands:\nCopy```\n# Verify the node's version\n~/stacks-node/stacks-node version\n# Output:\nINFO [1738695915.769633] [testnet/stacks-node/src/main.rs:278] [main] stacks-node 3.1.0.0.5 (release/3.1.0.0.5:513dbc5, release build, linux [x86_64])\nstacks-node 3.1.0.0.5 (release/3.1.0.0.5:513dbc5, release build, linux [x86_64])\n# Verify the node's config\n~/stacks-node/stacks-node check-config --config ~/stacks-node/node-config.toml\n# Output:\nINFO [1738695915.769633] [testnet/stacks-node/src/main.rs:278] [main] stacks-node 3.1.0.0.5 (release/3.1.0.0.5:513dbc5, release build, linux [x86_64])\nINFO [1729788064.913175] [testnet/stacks-node/src/main.rs:318] [main] Loading config at path /home/admin/stacks-node/node-config.toml\nINFO [1729788064.969551] [testnet/stacks-node/src/main.rs:331] [main] Loaded config!\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#start-the-node)\nStart the node\nIf the outputs of the previous commands are correct, you can proceed and start the node:\nCopy```\n~/stacks-node/stacks-node start --config ~/stacks-node/node-config.toml\n```\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-5-generate-your-signer-signature)\nStep 5 - Generate your signer signature\nIn order to stack, you'll need your signer signature. The fields required are further explained in the [Generate a signer key signature](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-2-generate-a-signer-key-signature) guide.\nThe command to generate a signature looks like this:\nCopy```\n~/stacks-signer/stacks-signer generate-stacking-signature \\\n  --method stack-stx \\\n  --max-amount 1000000000000 \\\n  --auth-id 195591226970828652622091037492597751808 \\\n  --period 12 \\\n  --reward-cycle 100 \\\n  --pox-address 19tg... \\\n  --config ~/stacks-signer/signer-config.toml \\\n  --json\n```\n\nThe generated JSON can be then copy-pasted directly in the [Leather Earn](https://earn.leather.io) website mentioned in the next step.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-6-start-stacking)\nStep 6 - Start stacking\nThe simplest route is to solo stack. You can do that by using [Leather Earn](https://earn.leather.io). Click on the 'Stack Independently' button and follow the instructions there.\nIf you would like to learn more about solo stacking or running a pool operator, take a look at the [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx) guide.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart#step-7-monitoring)\nStep 7 - Monitoring\nIf you would like to learn more about monitoring your signer and its corresponding node, you can check the [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer) guide.\n[PreviousRun a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)[NextHow to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\nLast updated 0 minutes ago\nWas this helpful?\n",
      "wordCount": 2198,
      "title": "Signer Quickstart | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Successful](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs#successful)\n  * [Informational](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs#informational)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n\n\n# How to Read Signer Logs\nThere are a lot of different messages you can get in the logs when running a signer, getting a good grasp on what some of these logs mean can help you troubleshoot effectively and determine if your signer is running successfully or not.\nThere are really three types of log messages we should be aware of:\n  * Successful\n  * Informational\n  * Errors\n\n\nSuccessful log messages indicate that you are on track and everything is working as expected. However, there are various success stages depending on several factors including your stacking status and the timing of where we are in the current reward cycle.\nThere are also several information/warning logs that you don't necessarily need to take action on, but may be informational about the status of something occurring in the network.\nFinally, error logs indicate something has gone wrong and you need to take some kind of action.\nLet's go through some of the common log messages you might see, what they mean, and what action to take.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs#successful)\nSuccessful\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs#signer-uninitialized-or-not-registered)\nSigner uninitialized or not registered\nIf you get a message like the following, saying that your signer is uninitialized, it means that your signer is not registered for the current or upcoming reward cycle (or the burnchain block height is not yet at the second block in the prepare phase) for the signer to know if it is registered. Your signer is running successfully, there is just another action you need to take.\n`Signer spawned successfully. Waiting for messages to process... INFO [1711088054.872542] [stacks-signer/src/runloop.rs:278] [signer_runloop] Running one pass for signer ID# 0. Current state: Uninitialized`\nThis warning may also look like this:\nCopy```\nWARN [1712003997.160121] [stacks-signer/src/runloop.rs:247] [signer_runloop] Signer is not registered for reward cycle 556. Waiting for confirmed registration...\n```\n\nAt this point if you want your signer to do something you need someone to either delegate or you need to stack on your own for an upcoming reward cycle.\nFor more on this, be sure to check out the [How to Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow) doc.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs#informational)\nInformational\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs#peer-not-connecting)\nPeer not connecting\nIf you get an error about a peer not connecting that looks like the following:\nCopy```\nINFO [1711988555.021567] [stackslib/src/net/neighbors/walk.rs:1015] [p2p-(0.0.0.0:20444,0.0.0.0:20443)] local.80000000://(bind=0.0.0.0:20444)(pub=Some(10.0.19.16:20444)): Failed to connect to facade0b+80000000://172.16.60.18:20444: PeerNotConnected\n```\n\nThat means that your node is trying to connect to some external node on the network, but is unable to. This is common and can happen for a variety of reasons.\nIt is not a cause for concern and doesn't impact whether or not your signer is running correctly.\n[PreviousSigner Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)[NextHow to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 987,
      "title": "How to Read Signer Logs | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Requirements](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#requirements)\n  * [Creating a Grafana Cloud account](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#creating-a-grafana-cloud-account)\n  * [Configuring the Signer and the Stacks node](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#configuring-the-signer-and-the-stacks-node)\n  * [Install Alloy](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#install-alloy)\n  * [Configure Alloy](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#configure-alloy)\n  * [Visualizing the metrics](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#visualizing-the-metrics)\n  * [Bonus: monitoring the host](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#bonus-monitoring-the-host)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n\n\n# How to Monitor a Signer\nWe will use [Grafana Cloud](https://grafana.com) to observe and monitor both the Signer and its corresponding Stacks node.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#requirements)\nRequirements\nGrafana's application observability docs have a [great quick-start](https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/). We will use:\n  * Grafana Cloud to collect metrics and visualize them.\n  * Grafana Alloy, on the Signer host, to push the metrics.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#creating-a-grafana-cloud-account)\nCreating a Grafana Cloud account\nBefore we begin, create a [Grafana Cloud](https://grafana.com/docs/grafana-cloud/monitor-applications/application-observability/grafana-cloud/) account (they offer a free tier that you can use).\nOnce done, access your dashboard and:\n  1. Click on \"Connections\", then\n  2. \"Add new connection\", and\n  3. select \"Hosted Prometheus metrics\".\n  4. Now select \"Via Grafana Alloy\", then\n  5. On step 2, select \"Run Grafana Alloy\" to generate an API token.\n\n\nNote the token `GCLOUD_RW_API_KEY` and the parameters `GCLOUD_HOSTED_METRICS_URL` and `GCLOUD_HOSTED_METRICS_ID`, we will use them later.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#configuring-the-signer-and-the-stacks-node)\nConfiguring the Signer and the Stacks node\nEnsure both your Signer configuration and your node configuration include the following lines:\nCopy```\n# signer-config.toml\n# ...\n# Adjust to 0.0.0.0:30001 if running in Docker.\nmetrics_endpoint = \"127.0.0.1:30001\"\n```\n\nCopy```\n# node-config.toml\n[node]\n# ...\n# Adjust to 0.0.0.0:9153 if running in Docker.\nprometheus_bind = \"127.0.0.1:9153\"\n```\n\nThe pre-compiled binaries already include the monitoring feature. However, if you are compiling the application binaries yourself, remember to enable the Cargo feature `monitoring_prom` while building them, for example:\nCopy```\ncargo build --features monitoring_prom,slog_json --release\n```\n\nOnce both binaries are running with the updated configuration, you can peek at the metrics being exposed:\nCopy```\ncurl 127.0.0.1:30001/metrics\n# HELP stacks_signer_current_reward_cycle The current reward cycle\n# TYPE stacks_signer_current_reward_cycle gauge\nstacks_signer_current_reward_cycle 95\n# HELP stacks_signer_node_rpc_call_latencies_histogram Time (seconds) measuring round-trip RPC call latency to the Stacks node\n# TYPE stacks_signer_node_rpc_call_latencies_histogram histogram\n...\nstacks_signer_node_rpc_call_latencies_histogram_bucket{path=\"/v2/info\",le=\"0.005\"} 0\nstacks_signer_node_rpc_call_latencies_histogram_bucket{path=\"/v2/info\",le=\"0.01\"} 0\nstacks_signer_node_rpc_call_latencies_histogram_bucket{path=\"/v2/info\",le=\"0.025\"} 0\nstacks_signer_node_rpc_call_latencies_histogram_bucket{path=\"/v2/info\",le=\"0.05\"} 985\nstacks_signer_node_rpc_call_latencies_histogram_bucket{path=\"/v2/info\",le=\"0.1\"} 1194\n...\n```\n\nAlso, you'll have a `/info` endpoint on the same port:\nCopy```\ncurl 127.0.0.1:30001/info\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#install-alloy)\nInstall Alloy\nFollow these instructions to install [Grafana Alloy](https://grafana.com/docs/alloy/latest/set-up/install/linux/).\nOn Debian-based distributions:\nCopy```\nsudo apt install gpg\nsudo mkdir -p /etc/apt/keyrings/\nwget -q -O - https://apt.grafana.com/gpg.key | gpg --dearmor | sudo tee /etc/apt/keyrings/grafana.gpg > /dev/null\necho \"deb [signed-by=/etc/apt/keyrings/grafana.gpg] https://apt.grafana.com stable main\" | sudo tee /etc/apt/sources.list.d/grafana.list\nsudo apt-get update\nsudo apt-get install alloy\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#configure-alloy)\nConfigure Alloy\nEdit the file `/etc/alloy/config.alloy` as follows, by taking care of replacing the placeholders related to the `prometheus` endpoint with the parameters obtained when creating a [Grafana Cloud account before](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#creating-a-grafana-cloud-account):\n  * `GCLOUD_HOSTED_METRICS_URL`\n  * `GCLOUD_HOSTED_METRICS_ID`\n  * `GCLOUD_RW_API_KEY`\n\n\nCopy```\n// For a full configuration reference, see https://grafana.com/docs/alloy\n// For a default configuration, integrating all environmental variables from Grafana Cloud\n// see https://storage.googleapis.com/cloud-onboarding/alloy/config/config.alloy\nlogging {\n  level = \"warn\"\n}\nprometheus.exporter.unix \"default\" {\n  include_exporter_metrics = true\n  disable_collectors       = [\"mdadm\"]\n}\nprometheus.scrape \"default\" {\n  targets = array.concat(\n    prometheus.exporter.unix.default.targets,\n    [\n      {\n        // Self-collect metrics\n        job         = \"alloy\",\n        __address__ = \"127.0.0.1:12345\",\n      },\n      {\n        // stacks-signer\n        job         = \"stacks-signer\",\n        __address__ = \"127.0.0.1:30001\",\n      },\n      {\n        // stacks-node\n        job         = \"stacks-node\",\n        __address__ = \"127.0.0.1:9153\",\n      },\n    ],\n  )\n  forward_to = [prometheus.remote_write.metrics_service.receiver]\n}\nprometheus.remote_write \"metrics_service\" {\n  external_labels = {\"instance\" = constants.hostname}\n  endpoint {\n    # TODO: Edit the URL below with your Grafana production URL.\n    # should end with /api/prom/push\n    url = \"<your GCLOUD_HOSTED_METRICS_URL>\"\n    # TODO: Edit with your Grafana Cloud ID and Token\n    basic_auth {\n      username = \"<your GCLOUD_HOSTED_METRICS_ID>\"\n      password = \"<your GCLOUD_RW_API_KEY>\"\n    }\n  }\n}\n```\n\nCopy```\nsudo systemctl daemon-reload\nsudo systemctl enable alloy.service\nsudo systemctl start alloy.service\n```\n\nMetrics from your Signer and node will now start being pushed to Grafana Cloud.\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#visualizing-the-metrics)\nVisualizing the metrics\nYou can now start building a dashboard to visualize the metrics.\n  1. Log-in to Grafana Cloud and create a new Dashboard.\n  2. Pick the Prometheus instance you created before as the data source.\n  3. Create a new panel and pick `stacks_signer_current_reward_cycle` from the metrics.\n\n\nYou should now be able to see Stacks' current reward cycle, as measured by the Signer, into the dashboard.\nGrafana comes with powerful data visualization tools. You can read about how to query and transform data [here](https://grafana.com/docs/grafana-cloud/visualizations/panels-visualizations/query-transform-data/), while here you will find examples on how to build [Prometheus queries](https://prometheus.io/docs/prometheus/latest/querying/basics/).\n[This template](https://grafana.com/grafana/dashboards/22137-stacks-signer-template/) will kick-start your dashboard.\n![A screenshot of the Grafana dashboard instantiated from the\ntemplate](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2Fgrafana.com%2Fapi%2Fdashboards%2F22137%2Fimages%2F17368%2Fimage&width=300&dpr=4&quality=100&sign=eacd19b3&sv=2).\n## \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer#bonus-monitoring-the-host)\nBonus: monitoring the host\nSince we are here, we can also monitor the host itself. Debian-based distributions make it very easy for us by using [`node_exporter`](https://github.com/prometheus/node_exporter/tree/master).\nCopy```\nsudo apt install prometheus-node-exporter\nsudo systemctl enable prometheus-node-exporter\nsudo systemctl start prometheus-node-exporter\n```\n\nThis will expose metrics on port `9100` of `localhost`.\nWe can now configure `alloy` to push them to Grafana. Edit your `/etc/alloy/config.alloy` file and add the following:\nCopy```\nprometheus.scrape \"default\" {\n  targets = array.concat([\n  ...\n    {\n        job         = \"node_exporter\",\n        __address__ = \"127.0.0.1:9100\",\n    }\n  ...\n])}\n```\n\nNow reload `alloy` and check its status:\nCopy```\nsudo systemctl reload alloy\nsudo systemctl status alloy\n```\n\n`node_exporter` provides a _lot_ of metrics. Poke at them through the Grafana Explorer or use one of the many prepared dashboard (e.g., [this one](https://grafana.com/grafana/dashboards/1860-node-exporter-full/)) to see comprehensive information. Once you have a dashboard ready, you can also use it to configure a few alerts (e.g., on disk space, etc).\n[PreviousHow to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)[NextBest practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 1426,
      "title": "How to Monitor a Signer | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Monitor your Signer and collect logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#monitor-your-signer-and-collect-logs)\n  * [Downstream components](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#downstream-components)\n  * [Split voting power across multiple Signers](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#split-voting-power-across-multiple-signers)\n  * [Monitor new software releases](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#monitor-new-software-releases)\n  * [Upgrade procedures](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#upgrade-procedures)\n  * [Diversified hosting](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#diversified-hosting)\n  * [Fall-back deployments](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#fall-back-deployments)\n  * [Redundancy in operations](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#redundancy-in-operations)\n  * [Backup signer keys in cold-storage](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#backup-signer-keys-in-cold-storage)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n\n\n# Best practices for running a Signer\n**Intended audience** : solo Stackers or Stacking pool operators.\nThe following best practices suggest how to create a resilient setup for running your Signer.\ntl;dr: avoid single point of failures, introduce redundancy, monitor things.\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#monitor-your-signer-and-collect-logs)\nMonitor your Signer and collect logs\n  * See [here](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer) on how to set up monitoring.\n  * Retain at least 1 week of logs for both the Signer and the Stacks node.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#downstream-components)\nDownstream components\n  * Run a _dedicated_ Bitcoin node and Stacks node per Signer.\n    * Ensure the nodes are provisioned with the minimum hardware requirements described [here](https://docs.stacks.co/guides-and-tutorials/running-a-signer#minimum-system-requirements).\n    * Nodes should be _exclusively dedicated_ to serve the Signer. Avoid re-using them to serve other clients as that may negatively affect performance (no _mock-signing_ , no _Stacks API nodes_).\n  * If running dedicated nodes is not possible, then ensure that the Bitcoin / Stacks nodes do not become single point of failures for _multiple_ signers depending on them.\n    * Introduce redundancy, load balancing, rely on a robust Bitcoin RPC provider, etc.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#split-voting-power-across-multiple-signers)\nSplit voting power across multiple Signers\n  * Distribute your voting power across multiple, distinct Signer public keys to mitigate the risk of loss or downtime from a single compromised key.\n  * Each Signer should also limit voting power to a maximum amount and invite Stackers to use a different Signer when the limit is reached.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#monitor-new-software-releases)\nMonitor new software releases\n  * Stay up-to-date with new releases, patches, and security advisories (e.g., GitHub, mailing lists, Discord).\n  * Apply updates as quickly as possible, especially those addressing a security vulnerability.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#upgrade-procedures)\nUpgrade procedures\n  * Upgrading one Signer instance at the time.\n  * Test the update on one instance and, if successful, proceed to the others.\n  * While your Signer is offline for upgrades, it won't sign any blocks. Ensure that the downtime is as short as possible.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#diversified-hosting)\nDiversified hosting\n  * Use different provider / configuration where feasible (e.g., a self-hosted instance and one in the cloud, or in two different data center regions, etc.).\n  * Ensure each host has redundant power supply and network connectivity.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#fall-back-deployments)\nFall-back deployments\n  * Deploy additional Stacks nodes and Bitcoin nodes to be used as fall-back.\n    * Use the same configuration as your _active_ instances.\n    * For the Stacks node, comment out the `event_observer` section.\n  * Prepare a backup Signer (same configuration) to be quickly activated, but _do not run it_.\n    * At all times, there should be _exactly_ one Signer instance running for each Signer private key.\n  * These instances should be hosted on separate physical hosts (see _diversified hosting_) from the instances usually active in operations (serving each Signer).\n  * If an active instance (e.g., the Signer, the Stacks node or the Bitcoin node) fails, you can quickly switch to the fall-back configuration to continue operations. To do that:\n    * Run the backup Signer.\n    * Enable the `event_observer` section of the Node configuration.\n    * Restart the node.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#redundancy-in-operations)\nRedundancy in operations\n  * Ensure that multiple, trusted users can manage and maintain signer instances.\n  * Where feasible, users should span different timezones.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer#backup-signer-keys-in-cold-storage)\nBackup signer keys in cold-storage\n  * Keep an offline, secure backup of all Signer private keys (e.g., hardware security modules or encrypted storage devices).\n\n\n[PreviousHow to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)[NextOpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\nLast updated 9 months ago\nWas this helpful?\n",
      "wordCount": 1141,
      "title": "Best practices for running a Signer | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n\n\n# OpSec Best Practices\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices#threat-modeling)\n**Threat Modeling**\nA threat actor that is able to compromise > 70% of Signers (by stake weight) would be able to successfully propose Stacks blocks that would otherwise be considered invalid.\nSome potential vectors for signer key compromise are as follows:\n  1. stacks-signer node is compromised and key is exfiltrated from the filesystem\n  2. Signer key is compromised during generation or deployment\n  3. Signer key is accidentally checked into SCM (eg Github or Gitlab)\n  4. Social engineering attack against Signer community: eg a malicious link is posted to social media that harvests key material\n  5. An undisclosed backdoor is discovered in the Signer binary.\n  6. Supply chain attack against stacks-signer source code: threat actor compromises upstream dependencies of stacks-signer\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices#countermeasures)\n**Countermeasures**\nWhat can Signers do to mitigate the threat vectors identified above? Let's identify countermeasures in response to each of the threats identified above, starting with #1.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices#id-1.-stacks-signer-node-is-compromised-and-key-is-exfiltrated-from-the-filesystem)\n**1. Stacks-signer node is compromised and key is exfiltrated from the filesystem**\nAn obvious attack vector is a direct attack on the system running the stacks-signer software. Presently, the stacks-signer depends on a signing key that is both loaded into memory, and resident on the filesystem in cleartext. Thus a system or process level intrusion on the stacks-signer node will likely lead to compromise of the signing key.\n**Some countermeasures that can help mitigate this vector include:**\n  1. **Run the stacks-signer on a separate system from the stacks-node.** This is important, as the IP addresses of systems running the stacks-signer cannot be trivially enumerated, but the same is not true for systems running stacks-node, due to the fact that stacks-node systems participate in the peer to peer network. If an attacker can't find your stacks-signer, they can't attack it (directly). It‚Äôs best practice to ensure that the stacks-node and stacks-signer communicate only over trusted networks, ideally using localhost (127.0.0.1) or a secure private subnet. While running the stacks-signer on a separate system is an option, it‚Äôs not necessary for security. Instead, running both on the same virtual machine within a private network, with traffic firewalled to allow only incoming peer-to-peer (P2P) connections (port 20444), provides a secure and easier setup. This minimizes the risk of exposure to attacks while avoiding the complexity of managing multiple systems.\n  2. **Run the stacks-signer as a separate user from the stacks-node**. This is helpful in situations where due to resource constraints, it's not possible to separate the stacks-signer and stacks-node deployments onto separate workloads. Run the stacks-signer as a separate user from the stacks-node to enhance security, especially when resource constraints prevent deploying them on separate systems. The key here is ensuring that each user has exclusive ownership and access to its respective configuration files. For example, the user running the signer binary (e.g., signer) should own the signer‚Äôs config file, with permissions set restrictively to prevent other users from reading it. The same principle applies to the stacks-node user. This setup ensures that only the appropriate processes can access sensitive configuration details.\n  3. **Harden the systemd configuration for the stacks-signer.** Hardening systemd can help mitigate the blast radius from an attack that successfully gets control of the stacks-signer process. An example stacks-signer.service systemd unit is below. Specifically, this systemd unit prevents certain filesystem writes (which can prevent an attacker from gaining persistence). Read more about [systemd hardening](https://www.ctrl.blog/entry/systemd-service-hardening.html).\n\n\nCopy```\n[Unit]\nDescription=Stacks Signer\nAfter=network.target\nStartLimitBurst=3\nStartLimitIntervalSec=300\nConditionFileIsExecutable=/usr/local/bin/stacks-signer\nConditionPathExists=/etc/stacks/signer\nConditionFileNotEmpty=/etc/stacks/signer/signer-config.toml\n[Service]\nExecStart=/usr/local/bin/stacks-signer run --config /home/etc/stacks/signer/signer-config.toml\nUser={{ svc_user }}\nGroup={{ svc_user }}\nType=simple\nRestart=on-failure\nTimeoutStopSec=600\nKillSignal=SIGTERM\n#KillSignal=SIGINT\n# Provide a private /tmp and /var/tmp.\nPrivateTmp=true\n# Mount /usr, /boot/ and /etc read-only for the process.\nProtectSystem=full\n# Deny access to /home, /root and /run/user\nProtectHome=true\n# Disallow the process and all of its children to gain\n# new privileges through execve().\nNoNewPrivileges=true\n# Use a new /dev namespace only populated with API pseudo devices\n# such as /dev/null, /dev/zero and /dev/random.\nPrivateDevices=true\n[Install]\nWantedBy=multi-user.target\n```\n\n  1. **Restrict access to unnecessary ports and protocols.** The stacks-signer requires _outbound_ TCP access to the stacks-node, but no other communications (except for what may be necessary to update the underlying OS).\n  2. Harden the operating system. This is a broad topic, but the basics are:\n    1. Run stacks-signer as an unprivileged user (not root)\n    2. Set permissions on the stacks-signer key to be readable only by the user running the stacks-signer process, eg `sudo chmod 600 signer/signer-config.toml`\n    3. Require public-key authentication for remote SSH to the system running the stacks-signer and disable ssh root login.\n    4. Run sshd on a non-standard port to reduce noise from port scanners and credential stuffing attacks\n\n\nThis post outlines essential operational security best practices for Stacks Signers, key actors in the Nakamoto architecture.\nBy implementing these strategies, signer operators can effectively mitigate risks and maintain the security and reliability of the Stacks network.\n[PreviousBest practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)[NextsBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 1359,
      "title": "OpSec Best Practices | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/sbtc",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# sBTC\nThe guides in this section provide step-by-step instructions for interacting with sBTC, including operating as a signer and (coming soon) developer guides on how to interact with sBTC as an application developer.\nNote that in order to run a sBTC signer you must be one of the [approved signers](https://github.com/stacks-network/sbtc/discussions/624) described in [SIP-028](https://github.com/andrerserrano/sips/blob/main/sips/sip-028/sip-028-sbtc_peg.md).\n[PreviousOpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)[NextsBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 604,
      "title": "sBTC | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [What is sBTC?](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#what-is-sbtc)\n  * [Quick Setup](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#quick-setup)\n  * [Working with sBTC in Smart Contracts](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#working-with-sbtc-in-smart-contracts)\n  * [Conclusion](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#conclusion)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n\n\n# sBTC Builder Quickstart\nGet up and running with sBTC in 30 minutes or less. This guide covers the essentials for working with sBTC as a SIP-010 token in your smart contracts.\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#what-is-sbtc)\nWhat is sBTC?\nsBTC is Bitcoin on Stacks. It's a SIP-010 fungible token that maintains a 1:1 peg with Bitcoin, enabling you to use Bitcoin in smart contracts and DeFi applications on the Stacks blockchain.\nKey points:\n  * **1:1 Bitcoin peg** : 1 sBTC always equals 1 BTC\n  * **SIP-010 token** : Works like any other fungible token on Stacks\n  * **Programmable** : Use Bitcoin in smart contracts, DeFi protocols, and dApps\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#quick-setup)\nQuick Setup\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#prerequisites)\nPrerequisites\nIn order to get the most from this quickstart, you should familiarize yourself with Clarity, Clarinet, Stacks.js, and the Hiro Platform. These are the fundamental building blocks of building Stacks applications.\n  * [Stacks Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial) - For a quick holistic introduction to the Stacks development process, tools, and fundamentals\n  * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course) - For a quick introduction to Clarity\n  * [Clarinet Docs](https://docs.hiro.so/tools/clarinet)\n  * [Stacks.js Docs](https://docs.hiro.so/reference/stacks.js)\n\n\nChoose your preferred development environment:\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#option-1-hiro-platform-recommended)\nOption 1: Hiro Platform (Recommended)\nThe fastest way to start building with sBTC is using the Hiro Platform's hosted devnet. The Platform integrates with your GitHub account. You can either import an existing project from GitHub or start with a Platform template and have it synced with your GitHub account.\nAfter you create the project in the Platform, you can clone it locally and work with the Platform's cloud devnet by connecting your API key as described in the template's README files. This will allow you to work on your code locally but let Platform handle the complexities of actually running the devnet.\n  1. **Create an account** at [platform.hiro.so](https://platform.hiro.so)\n  2. **Create or import a project**\n     * Select a template or import your own project from GitHub. There are several templates available to use as a starting point. Some have only smart contracts and some are full-stack dapp templates. Starting with one of these ensures you are building with best practices.\n     * Navigate to your project dashboard\n  3. **Start devnet**\n     * Click the \"Devnet\" tab\n     * Click \"Start Devnet\"\n     * Wait for status to show \"Active\"\n  4. **Connect your wallet**\n     * Your devnet wallets are automatically funded with STX and sBTC\n     * Use the provided wallet addresses within the templates\n     * The platform templates are automatically connected to Devnet, and there are instructions in the READMEs of the templates for how to connect your frontend to your Devnet instance\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#option-2-local-with-clarinet)\nOption 2: Local with Clarinet\nIf you would prefer to have your devnet running locally instead of in the Platform cloud, you can run one yourself\n  1. **Install Clarinet** (version 3.x)\nCopy```\nbrew install clarinet\n```\n\n  2. **Create a new project**\nCopy```\nclarinet new my-sbtc-project\ncd my-sbtc-project\n```\n\n  3. **Add sBTC requirements**\nCopy```\nclarinet requirements add SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-deposit\n```\n\nThis automatically includes the sBTC token contract in your Clarinet context so you can reference it within your contracts.\n  4. **Start devnet**\nCopy```\nclarinet devnet start\n```\n\n\n\nWith either of these options, your Devnet wallets are automatically funded with sBTC. You just need to include the sBTC contract in your contract requirements as shown above.\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#working-with-sbtc-in-smart-contracts)\nWorking with sBTC in Smart Contracts\nsBTC follows the SIP-010 standard, making it easy to integrate into your contracts.\nThe primary function you'll be using is the `transfer` function. That's because sBTC exists as a 1:1 Bitcoin peg via a SIP-010 token. Minting is handled by the protocol, the main function of writing smart contracts that use sBTC is to move it around, which means using the `transfer` function.\nHere's a very basic example of how to transfer sBTC within your contract.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#basic-transfer-example)\nBasic Transfer Example\nCreate a new contract that accepts sBTC payments. You can do this within the Clarinet project folder with `clarinet contract new sbtc-payment`.\nCopy```\n;; contracts/sbtc-payment.clar\n;; Define the sBTC token contract reference\n(define-constant sbtc-token 'SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-token)\n;; Error codes\n(define-constant err-insufficient-balance (err u100))\n(define-constant err-transfer-failed (err u101))\n;; Accept sBTC payment\n(define-public (pay-with-sbtc (amount uint) (recipient principal))\n  (contract-call? sbtc-token transfer\n    amount\n    tx-sender\n    recipient\n    none))\n```\n\nYou can test out this contract by either using the UI within the Platform to call the functions directly if you have devnet running or by opening the console with `clarinet console`.\nOnce you do that you'll see that your devnet accounts have automatically been funded with sBTC. \n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FcziAI6kDiJtkyg2wDgKJ%252Fimage.png%3Falt%3Dmedia%26token%3Da7c3c2de-f08c-4936-8bde-f9bbc3f38236&width=768&dpr=4&quality=100&sign=23ccbb01&sv=2)\nOnce you are ready to deploy to testnet, you can do so by editing your deployment plan as outlined in [this guide](https://docs.hiro.so/tools/clarinet/sbtc-integration).\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart#conclusion)\nConclusion\nYou can build pretty much anything you want using this simple foundation, as all of the complexity of sBTC is handled behind the scenes by the protocol.\nWhat's needed now is for builders to take this foundation and build interesting, useful things with it. sBTC unlocks a lot of additional functionality for Bitcoin that previously would have only been possible with either custodied solutions or slow, complex solutions with poor UX.\nIf you are interested, you can read more about how sBTC works in the [sBTC Concept Guide](https://docs.stacks.co/concepts/sbtc).\n[PrevioussBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)[NextHow to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 1423,
      "title": "sBTC Builder Quickstart | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Minimum System Requirements](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#minimum-system-requirements)\n  * [Connection diagram](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#connection-diagram)\n  * [1. Configure your Bitcoin node](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-1.-configure-your-bitcoin-node)\n  * [Minimum version](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#minimum-version)\n  * [Settings](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#settings)\n  * [RPC-Based Block Detection](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#rpc-based-block-detection)\n  * [Example](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#example)\n  * [2. Configure your Stacks node](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-2.-configure-your-stacks-node)\n  * [Minimum version](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#minimum-version-1)\n  * [Event observer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#event-observer)\n  * [Reference configuration](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#reference-configuration)\n  * [3. Configure your sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-3.-configure-your-sbtc-signer)\n  * [Blocklist Client Settings](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#blocklist-client-settings)\n  * [Bitcoin Connection Settings](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#bitcoin-connection-settings)\n  * [Core Signer Parameters](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#core-signer-parameters)\n  * [P2P Network Configuration](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#p2p-network-configuration)\n  * [Reference configuration](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#reference-configuration-1)\n  * [4. Set up your containers](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-4.-set-up-your-containers)\n  * [Monitoring](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#monitoring)\n  * [Troubleshooting](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#troubleshooting)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n\n\n# How to Run an sBTC Signer\nThis documentation provides guidelines, best-practices and recommendations for running an sBTC Signer. Review it and adapt it to your infrastructure policy before deploying it.\nEach sBTC signer will control a set of signing shares used to sign transactions on both Bitcoin and Stacks.\nSuch shares will be encrypted by using the `private_key` specified in the Signer's config and stored in the PostgreSQL database attached to each signer.\nIt is of the utmost importance to:\n  1. Prevent unauthorized access to the sBTC Signer infrastructure (the signer itself, its private key, and the associated PostgreSQL database);\n  2. keep an offline, secure backup of the sBTC Signer private key;\n  3. regularly backup the PosgreSQL database and store it in a secure location.\n\n\nSee [here](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer) for additional best practices to run an sBTC signer.\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#minimum-system-requirements)\nMinimum System Requirements\nBelow are the **minimum required specs** to be able to run a sBTC signer.\n  * 2 CPU\n  * 4GB memory\n  * 50GB storage\n\n\nNote that these are in _addition_ to the hardware requirements for running a Stacks node and Bitcoin node outlined in the [How to Run a Signer doc](https://docs.stacks.co/guides-and-tutorials/running-a-signer).\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#connection-diagram)\nConnection diagram\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fgit-blob-f47d489ec5ea1648f86e4690a9b06bafce0faba4%252Fsbtc_diagram.png%3Falt%3Dmedia&width=768&dpr=4&quality=100&sign=4a7b8e8d&sv=2)\nConnection Diagram\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-1.-configure-your-bitcoin-node)\n1. Configure your Bitcoin node\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#minimum-version)\nMinimum version\nYou will need `bitcoind` version 25 or higher.\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#settings)\nSettings\nYour Bitcoin node must include these settings for sBTC signer operation:\n  * `txindex=1`: Transaction indexing must be enabled\n  * `server=1`: RPC server must be enabled\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#rpc-based-block-detection)\nRPC-Based Block Detection\nStarting with sBTC v1.1.0, the signer uses RPC polling instead of ZeroMQ for block detection.\nThe signer connects to Bitcoin Core via RPC and polls for new bitcoin blocks. This process works as follows:\n  1. Bitcoin Core validates a new block\n  2. Signer detects the block via RPC polling\n  3. Signer processes relevant sBTC transactions\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#example)\nExample\nCopy```\nbitcoind \\\n  -server \\\n  -datadir=${BITCOIN_DATA} \\\n  -rpcbind=0.0.0.0 \\\n  -rpcuser=${BITCOIN_RPC_USERNAME} \\\n  -rpcpassword=${BITCOIN_RPC_PASSWORD} \\\n  -rpcport=${BITCOIN_RPC_PORT} \\\n  -rpcallowip=0.0.0.0/0 \\\n  -rpcallowip=::/0 \\\n  -txindex\n```\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-2.-configure-your-stacks-node)\n2. Configure your Stacks node\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#minimum-version-1)\nMinimum version\nPlease ensure your Stacks version is up-to-date (using the latest release).\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#event-observer)\nEvent observer\nYou will need to add a _new_ event observer that relays information from the sBTC smart contracts to the sBTC signer:\nCopy```\n[[events_observer]]\nendpoint = \"sbtc-signer:8801\"\nevents_keys = [\n    \"SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4.sbtc-registry::print\",\n]\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#reference-configuration)\nReference configuration\nSee [here](https://github.com/stacks-network/sbtc/blob/main/docker/mainnet/nodes/stacks/Config.toml.in).\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-3.-configure-your-sbtc-signer)\n3. Configure your sBTC Signer\nThe signer configuration file (`signer-config.toml`) defines the signer's operation parameters. The configuration sections include:\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#blocklist-client-settings)\nBlocklist Client Settings\nCopy```\n[blocklist_client]\nendpoint = \"http://blocklist-client:3032\"\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#bitcoin-connection-settings)\nBitcoin Connection Settings\nDefines how the signer connects to Bitcoin Core:\nCopy```\n[bitcoin]\nrpc_endpoints = [\"http://user:pass@your-bitcoin-node:8332\"]\n# Note: block_hash_stream_endpoints are no longer used as of v1.1.0\n# The signer now uses RPC polling for block detection\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#core-signer-parameters)\nCore Signer Parameters\nDefines the signer's identity and network participation:\nCopy```\n[signer]\nprivate_key = \"your-private-key\"  # 32 or 33-byte hex format\nnetwork = \"mainnet\"\ndeployer = \"SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4\"\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#p2p-network-configuration)\nP2P Network Configuration\nControls how the signer communicates with other network participants:\nCopy```\n[signer.p2p]\nlisten_on = [\"tcp://0.0.0.0:4122\"]\n```\n\nThe signer operates on port 4122 by default and supports both TCP and QUIC protocols for peer communication. The signer will attempt QUIC connections first for improved performance, automatically falling back to TCP if QUIC is unavailable or blocked on the network.\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#reference-configuration-1)\nReference configuration\nSee [here](https://github.com/stacks-network/sbtc/blob/main/docker/mainnet/sbtc-signer/signer-config.toml.in).\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#id-4.-set-up-your-containers)\n4. Set up your containers\nSee [here](https://github.com/stacks-network/sbtc/blob/main/docker/mainnet/docker-compose.yml) for a Docker Compose including all the required components.\nWhen deploying with Docker, always use [immutable image tags](https://docs.docker.com/reference/cli/docker/image/pull/#pull-an-image-by-digest-immutable-identifier) - the image digests are provided below. Verify the attestation of these images using this [guide](https://docs.github.com/en/actions/security-for-github-actions/using-artifact-attestations/using-artifact-attestations-to-establish-provenance-for-builds#verifying-artifact-attestations-with-the-github-cli).\nWe publish our images on [GitHub Container Registry](https://github.com/stacks-sbtc/sbtc/pkgs/container/sbtc).\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#monitoring)\nMonitoring\nMonitoring Details TBD\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer#troubleshooting)\nTroubleshooting\nTroubleshooting Guide TBD\n[PrevioussBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)[NextBest practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\nLast updated 1 month ago\nWas this helpful?\n",
      "wordCount": 1256,
      "title": "How to Run an sBTC Signer | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Protect your private key and have a cold-storage backup](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#protect-your-private-key-and-have-a-cold-storage-backup)\n  * [Backup your sBTC Signer PostgreSQL DB](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#backup-your-sbtc-signer-postgresql-db)\n  * [Verifying integrity of PostgreSQL DB backups](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#verifying-integrity-of-postgresql-db-backups)\n  * [Setup proper access control](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#setup-proper-access-control)\n  * [Maintain a strict firewall configuration](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#maintain-a-strict-firewall-configuration)\n  * [Maintain a robust secrets management program](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#maintain-a-robust-secrets-management-program)\n  * [Monitor and observe your sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#monitor-and-observe-your-sbtc-signer)\n  * [Provision dedicated downstream components](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#provision-dedicated-downstream-components)\n  * [Monitor new software releases](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#monitor-new-software-releases)\n  * [Ensure redundancy in operations](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#ensure-redundancy-in-operations)\n  * [References](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#references)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n\n\n# Best practices for running an sBTC Signer\nThe following best practices suggest how to create a resilient setup for running your sBTC Signer.\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#protect-your-private-key-and-have-a-cold-storage-backup)\nProtect your private key and have a cold-storage backup\n  * Prevent unauthorised access to the sBTC Signer private key.\n  * Keep an offline, secure backup of your sBTC Signer private key (e.g., hardware security modules or encrypted storage devices).\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#backup-your-sbtc-signer-postgresql-db)\nBackup your sBTC Signer PostgreSQL DB\n  * Perform daily backups of the sBTC Signer PostgreSQL DB.\n  * Periodically verify the integrity of backups, as instructed below.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#verifying-integrity-of-postgresql-db-backups)\nVerifying integrity of PostgreSQL DB backups\nTo verify the integrity of a backup, first import it into a fresh PostgreSQL instance (the database is enough, no need to spin up a Stacks / Bitcoin node or the sBTC signer).\nThen, perform the following query:\nCopy```\nsigner=>SELECT aggregate_key FROM sbtc_signer.dkg_shares WHERE\ndkg_shares_status ='verified'ORDER BY created_at DESC;\n```\n\nIt will return results as follows (your mileage might vary depending on the history of your sBTC signer, the following is provided for illustration purposes only):\nCopy```\n                            aggregate_key\n----------------------------------------------------------------------\n \\x03d8c4344861fc7590fd812c24884a3bfd9374d8ba865a787ff53c9060020aa967\n \\x03f898f8a6ddb86dd4608dd168355ec6135fe2839222240c01942e8e7e50dd4c89\n(2rows)\n```\n\nNow, ensure that the most recent `aggregate_key` (the first one) corresponds to the one returned by a read-only call to the `SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4/sbtc-registry/get-current-aggregate-pubkey` smart contract method:\nCopy```\ncurl -s 'https://api.hiro.so/v2/contracts/call-read/SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4/sbtc-registry/get-current-aggregate-pubkey' \\\n           -H 'content-type: application/json' --data-raw '{\"sender\":\"SM3VDXK3WZZSA84XXFKAFAF15NNZX32CTSG82JFQ4\",\"arguments\":[]}' | jq .result\n\"0x020000002103d8c4344861fc7590fd812c24884a3bfd9374d8ba865a787ff53c9060020aa967\"‚èé\n```\n\nYou can discard the prefix `0x02000000210` (which is how Clarity encodes values). The suffix `3d8c4344861fc7590fd812c24884a3bfd9374d8ba865a787ff53c9060020aa967` matches the first row of the PostgreSQL query above (excluding `\\x0` which indicates hex encoding).\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#setup-proper-access-control)\nSetup proper access control\n  * Require hardware 2FA keys for access control (e.g., by using Yubikey) to connect through SSH, to authenticate to AWS, and for every other relevant action.\n  * Follow the principle of _least privilege_ : if you don‚Äôt need access, you don‚Äôt get access; if you get access, it expires after the action is taken.\n  * _Optional, but strongly recommended_ : Implement a \"_4-eyes_ \" process (require that any activity by an individual must be controlled - reviewed, double checked - by a second individual) to access critical resources (e.g., deploy a new version of the sBTC signer).\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#maintain-a-strict-firewall-configuration)\nMaintain a strict firewall configuration\n  * Allow connections to your sBTC signer `listen_on` address (used for P2P communication).\n  * Do not expose any non-essential service to the internet: use a `DEFAULT DENY` policy with explicit `ALLOW`s for necessary network traffic (such as sBTC signer p2p and SSH).\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#maintain-a-robust-secrets-management-program)\nMaintain a robust secrets management program\n  * Ensure all relevant secrets are safely managed and rotated (where possible), e.g. if someone leaves the team.\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#monitor-and-observe-your-sbtc-signer)\nMonitor and observe your sBTC Signer\n  * Retain at least 90 days of logs for both the sBTC Signer, the Stacks node, and the Bitcoin node.\n  * The sBTC signer can optionally expose Prometheus metrics (see `prometheus_exporter_endpoint` configuration option).\n    * You can use them to monitor its health ([this guide shows how to configure Alloy to collect metrics on Grafana cloud](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)).\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#provision-dedicated-downstream-components)\nProvision dedicated downstream components\n  * Run a _dedicated_ Bitcoin node and Stacks node for your sBTC Signer.\n    * Ensure the nodes are provisioned with the minimum hardware requirements described [here](https://docs.stacks.co/guides-and-tutorials/running-a-signer#minimum-system-requirements).\n    * Nodes should be _exclusively dedicated_ to serve the sBTC Signer. Avoid re-using them to serve other clients as that may negatively affect performance (no _mock-signing_ , no _Stacks API nodes_).\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#monitor-new-software-releases)\nMonitor new software releases\n  * Stay up-to-date with new releases, patches, and security advisories for all used operating systems, software and packages:\n    * <https://www.cve.org/> is a great resource for popular software packages.\n    * Subscribe to receive security notifications from your vendors.\n    * Join relevant messaging channels as applicable (i.e. on Discord, Slack, etc.).\n  * Exercise vulnerability management for all packages.\n  * Apply updates as quickly as possible, especially those addressing a security vulnerability.\n  * Use inventory and patch management software, if available.\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#ensure-redundancy-in-operations)\nEnsure redundancy in operations\n  * Ensure that multiple, trusted system administrators can manage and maintain your sBTC Signer instance.\n  * Where feasible, system administrators should span different time zones.\n  * Document your operations procedures and ensure that relevant personnel have access to them.\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer#references)\nReferences\n  * [Best practices to run a Stacks Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer).\n\n\n[PreviousHow to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)[NextHow to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 1322,
      "title": "Best practices for running an sBTC Signer | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Video Walkthrough](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#video-walkthrough)\n  * [Written Walkthrough](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#written-walkthrough)\n  * [Connect your wallet](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#connect-your-wallet)\n  * [Choose the amount to deposit](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#choose-the-amount-to-deposit)\n  * [Choose the Stacks address to mint to](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#choose-the-stacks-address-to-mint-to)\n  * [Initiate the transaction](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#initiate-the-transaction)\n  * [Receive your sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#receive-your-sbtc)\n  * [Reclaiming BTC](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#reclaiming-btc)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n\n\n# How to Use the sBTC Bridge\nThe sBTC bridge is a web application allowing you to convert your BTC into sBTC on the Stacks chain.\nEnsure that you are using the bridge located at [sbtc.stacks.co](https://sbtc.stacks.co/). This is the only official sBTC bridge.\nIf you aren't familiar with sBTC, be sure to check out the [sBTC Conceptual Guide](https://docs.stacks.co/concepts/sbtc) to understand how it works.\nThe bridge has been designed to be as simple as possible to use. In order to utilize sBTC, all you need to do is send a Bitcoin transaction using a supported wallet (like [Leather](https://leather.io/) or [Xverse](https://www.xverse.app/)).\nBelow you'll find both a video and written walkthrough of using the bridge.\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#video-walkthrough)\nVideo Walkthrough\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#written-walkthrough)\nWritten Walkthrough\nThere are 5 simple steps to convert your BTC to sBTC.\n1\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#connect-your-wallet)\nConnect your wallet\nFirst, you'll need to connect your wallet to the bridge UI. Currently Leather and Xverse are supported, with more on the way.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FePlgm9CIFLGlvJXqLgCC%252Fimage%252041.png%3Falt%3Dmedia%26token%3De6d4b746-21a6-4027-af36-5e2c1aade56d&width=768&dpr=4&quality=100&sign=4890d356&sv=2)\n2\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#choose-the-amount-to-deposit)\nChoose the amount to deposit\nAfter your wallet is connected, choose how much BTC you would like to convert to sBTC.\nThere are two transaction fees required to mint your sBTC. The first is set by the user manually when they initiate the deposit transaction within their wallet. The second is a fee used to consolidate the deposit UTXOs into the single signer UTXO. This separate transaction fee happens automatically and is set to a max of 80k sats. This is automatically deducted from your minted sBTC. This is not a signer fee but a regular Bitcoin transaction fee.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FQ5WFrarg0iarSBg394qb%252Fimage%252042.png%3Falt%3Dmedia%26token%3Dc0c5cc90-bfaf-4cca-b5cb-994c074a9a08&width=768&dpr=4&quality=100&sign=5f8e2732&sv=2)\n3\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#choose-the-stacks-address-to-mint-to)\nChoose the Stacks address to mint to\nNext, enter the Stacks address you would like your sBTC minted to.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252F2QDCJy0eBX6sadHsLWhF%252Fimage%252043.png%3Falt%3Dmedia%26token%3D70eb1a62-5cfb-4eaf-841a-3bc43e010c39&width=768&dpr=4&quality=100&sign=a7930f1c&sv=2)\n4\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#initiate-the-transaction)\nInitiate the transaction\nAfter you choose your Stacks address, you'll use your connected wallet to transfer the BTC.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252F8kTd60APDGMtvV5M8Qnl%252Fimage%252045.png%3Falt%3Dmedia%26token%3D199b9995-2a2f-4808-925a-c4739c0872d4&width=768&dpr=4&quality=100&sign=a6426f56&sv=2)\n5\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#receive-your-sbtc)\nReceive your sBTC\nIn the UI, you can monitor the status of your transaction to see when it has been completed, at which point you can see the sBTC in your wallet. It will go through three stages:\n  * Pending - Your Bitcoin transaction is processing\n  * Minting - Your Bitcoin transaction has processed and the sBTC signers are minting your sBTC\n  * Completed - Your sBTC has been minted to your wallet\n\n\nNote that you may need to enable the display of the sBTC token within your wallet by clicking on 'Manage Tokens' and enabling sBTC.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FqKirdDMBIwaTwcs5Gjex%252Fimage%252048.png%3Falt%3Dmedia%26token%3D9002b606-7c31-42e1-891f-900d899b99d7&width=768&dpr=4&quality=100&sign=fd0915b1&sv=2)\n### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge#reclaiming-btc)\nReclaiming BTC\nIf your sBTC mint fails, you can reclaim your sBTC. You can do this via the bridge by visiting the reclaim page at https://sbtc.stacks.co/<TX_ID>/reclaim and replacing the bracketed text with your transaction ID, eg. <https://sbtc.stacks.co/8f37f750b6646f0a217121201967170bd3cfef5f2ebd4f30f359b5e9308470c4/reclaim>\nThere is an intermediate step in between depositing BTC and the sBTC signers consolidating it into the single signer UTXO. If the transaction is not picked up by signers, you can reclaim it using this UI. Note there is a 'Lock Time' field on the Reclaim page. That indicates the amount of blocks that must have passed in order to reclaim your BTC.\nThis initiates a Bitcoin transaction that will transfer your BTC back to you.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FI15SfwvEZwzb8oDX2WES%252Fimage%252050.png%3Falt%3Dmedia%26token%3D1856ce0f-10ed-4c46-8067-59833df3f2d4&width=768&dpr=4&quality=100&sign=d193d5bc&sv=2)\n[PreviousBest practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)[NextEarn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\nLast updated 13 days ago\nWas this helpful?\n",
      "wordCount": 1116,
      "title": "How to Use the sBTC Bridge | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n\n\n# Earn sBTC Rewards\nAs part of the launch of sBTC, you can enroll in the sBTC rewards program and earn real yield on your BTC, paid in sBTC.\nThe rewards program is non-custodial, your sBTC remains in your wallet.\nThere are only 3 steps to participate in the sBTC rewards.\n1\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards#mint-sbtc)\nMint sBTC\nTo get started, first mint your sBTC by using the bridge at [app.stacks.co](https://app.stacks.co/).\n2\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards#connect-your-wallet)\nConnect your wallet\nAfter your sBTC has been minted to your wallet, visit the rewards program site at [bitcoinismore.org](https://bitcoinismore.org) and connect your wallet. The click the 'Earn Rewards' button.\nYou may need to enable the sBTC token listing display in your wallet before it is visible. In Leather, you can do this by clicking 'Manage Tokens' and toggling on sBTC.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FEN6UeOzCSEGAU0i4ufAO%252Fimage.png%3Falt%3Dmedia%26token%3D61b40a45-dd41-4412-bda0-d3714dc099fd&width=300&dpr=4&quality=100&sign=ebab5bc8&sv=2)\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FkAWMol2Bysb5nYHmHo5D%252Fimage.png%3Falt%3Dmedia%26token%3D291459e0-0ef4-4b71-936b-46b7dcef0b25&width=768&dpr=4&quality=100&sign=6c552a2e&sv=2)\n3\n#### \n[](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards#enroll-in-the-rewards-program)\nEnroll in the rewards program\nFinally, you'll simply execute a Stacks transaction using your connected wallet to enroll in the program. You will need enough STX to cover the transaction fee to enroll in the rewards program.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252F8OP6hK7i6xp8TluDS4BN%252Fimage.png%3Falt%3Dmedia%26token%3D66776fae-527e-4171-b3a6-25ffee32f259&width=768&dpr=4&quality=100&sign=8c465d40&sv=2)\n[PreviousHow to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)[NextStack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\nLast updated 4 months ago\nWas this helpful?\n",
      "wordCount": 729,
      "title": "Earn sBTC Rewards | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/stack-stx",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Definitions and Roles](https://docs.stacks.co/guides-and-tutorials/stack-stx#definitions-and-roles)\n  * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx#solo-stack)\n  * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx#operate-a-pool)\n  * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx#stack-with-a-pool)\n  * [Relationship between manual stacking transactions and the running signer](https://docs.stacks.co/guides-and-tutorials/stack-stx#relationship-between-manual-stacking-transactions-and-the-running-signer)\n  * [How a signer becomes registered in the signer set](https://docs.stacks.co/guides-and-tutorials/stack-stx#how-a-signer-becomes-registered-in-the-signer-set)\n  * [Once a signer is registered in the signer set](https://docs.stacks.co/guides-and-tutorials/stack-stx#once-a-signer-is-registered-in-the-signer-set)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Stack STX\nStacking is an essential component of Stacks.\nThere are three different ways you can potentially stack your STX tokens and we have a dedicated guide for each of these scenarios.\nIf you aren't familiar with how stacking works, especially as it relates to signing after the Nakamoto upgrade, besure to check out the following concept guides:\n  * [Stackers and signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n  * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n\n\nIn Nakamoto, stacking flows have significant changes in comparison to previous versions of Stacks. Because Nakamoto requires stackers to run a signer, which validates blocks produced by Stacks miners, stackers need to provide new information when making Stacking transactions.\nThese changes affect both solo Stacking and delegated Stacking. This document outlines the new flows for solo stacking. The next doc outlines the flow and steps for operating a pool.\nIf you aren't familiar with the general block production process under Nakamoto and what role signers and stackers play, you may want to read [Nakamoto in 10 Minutes](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes) to get up to speed.\nThe following sections will walk you through how to begin operating as a solo stacker.\nStacking utilizes the `pox-4` contract. There is a detailed [walkthrough of the stacking contract](https://docs.stacks.co/example-contracts/stacking) that you can look at to see what functions are being called at each phase and some common errors you may encounter. This will be especially useful for pool operators who need to call these functions.\nThis doc is also useful if you run into errors when calling stacking functions, as it both walks through several common error scenarios and walks through each function call so you can more easily trace what might be happening.\nBefore we get into the step-by-step of how to actually stack, it's important to make sure you have an understanding of the different roles, processes and functions involved in Stacking.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#definitions-and-roles)\nDefinitions and Roles\n  * **Stacker** : an entity locking their STX to receive PoX rewards. This is a broad term including solo Stackers and Stackers who use pools.\n  * **Solo stacker** : an entity that locks their own STX and runs a signer. They don‚Äôt receive delegation.\n  * **Delegator** : a stacker who locks their STX by delegating to a pool operator that runs a signer. They don‚Äôt run the signer.\n  * **Pool operator** : an entity that runs a Signer and allows others to delegate their STX to them. A pool operator doesn‚Äôt need to Stack their own STX, but they can. They will also run a signer, but the pool operator and signer address may be different\n  * **Signer** : an entity that runs the stacks-signer software and participates in block validation. This can be either a solo Stacker or an entity receiving delegated STX. Depending on context, this may also refer to the signer software that validates blocks.\n\n\nIt's important to understand that in the context of the pool operator and signer, these are likely the same _entity_ but may not be the same Stacks address.\nThis distinction will be discussed further as we cover the step-by-step process below.\nAs mentioned above, there are three primary ways you can stack:\n  1. Solo stacking\n  2. Pool operator\n  3. Delegator\n\n\nThe following pages in this section will walk through the practical steps for stacking for all three scenarios.\nAs you read through these, it may be helpful to follow along with the functions in the [pox-4 contract](https://explorer.hiro.so/txid/SP000000000000000000002Q6VF78.pox-4?chain=mainnet) to get an idea of what each function is doing.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#solo-stack)\nSolo Stack\nIf you meet the minimum and want to [solo stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow), you will either need to run a signer, collaborate with an existing one, or use [stacking.tools](https://stacking.tools/). This guide will walk you through all options.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#operate-a-pool)\nOperate a Pool\nYou can also [operate a pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool) and have others delegate their STX to you. If you are a pool operator, you will need to run a signer, collaborate with an existing one, or use [stacking.tools](https://stacking.tools/).\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#stack-with-a-pool)\nStack with a Pool\nIf you do not meet the minimum amount of STX to solo stack, you can [delegate your STX to a pool operator ](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)and have them stack on your behalf. The minimum stacking amount is dynamic and can be found by visiting the <https://api.hiro.so/v2/pox> endpoint and looking at the `min_threshold_ustx` field. Note it is denoted in uSTX (1 STX = 1,000,000 uSTX). This is the most common stacking scenario.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#relationship-between-manual-stacking-transactions-and-the-running-signer)\nRelationship between manual stacking transactions and the running signer\nThis section describes the various transactions that signer entities need to make in order to be registered as a signer for a certain reward cycle. The order of operations between the automated signer and the stacking transactions that need to be done ‚Äúmanually‚Äù is important for ensuring that a signer is fully set up for a certain reward cycle.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FUPyd8LvHlLSyZGH1LnWe%252FUntitled%2520design.png%3Falt%3Dmedia%26token%3Dc7def187-777e-4259-bef2-97562c2df1bd&width=768&dpr=4&quality=100&sign=fc60bb86&sv=2)\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#prerequisite-ensure-the-signer-is-hosted-and-running)\nPrerequisite: ensure the signer is hosted and running\nIt's important to emphasize the importance of getting the signer running in a hosted environment before making Stacking transactions. If the signer doesn‚Äôt do that, they run the risk of being registered as a signer without their signer software being ready to run DKG and other important consensus mechanisms.\nSome of the important things to double check to ensure the signer is ‚Äúrunning‚Äù are:\n  * The signer software is configured with a private key that the user can access (either through SSH or other means). This is important because their signer needs to utilize this private key to generate signer key signatures that are used in Stacking transactions.\n  * The signer software is properly configured to make RPC calls to a Stacks node. This refers to the `endpoint` signer configuration field. If properly configured, there should be logs in the Stacks node that show the RPC calls being made from the signer.\n  * The stacks node is properly configured to send events to the signer. This refers to the [[`event_observers`]] field in the Stacks Node‚Äôs configuration. If properly configured, the signer should have logs indicating that it‚Äôs receiving events from the Stacks node.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#how-a-signer-becomes-registered-in-the-signer-set)\nHow a signer becomes registered in the signer set\nEach of the stacking transactions described above are done ‚Äúmanually‚Äù. More specifically, this means that none of these transactions are executed automatically by the signer software. The transactions must be done ‚Äúout of band‚Äù.\nIn order for a signer to actually be registered in a reward cycle, there need to be manual transactions made in the `pox-4` contract. While the signer software is running, it is continually polling the Stacks node and asking ‚Äúam I a signer in reward cycle N?‚Äù.\nIf these manual transactions are confirmed, and the signer has enough STX associated with the signer‚Äôs public key, the signer will be registered as a signer in the signer set.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#solo-stacking)\nSolo stacking\nThe workflow for solo stackers is simpler, because there are less stacking transactions that need to be made.\nFor solo stacking, the only transaction that needs to be made is `stack-stx`. Included in this transaction‚Äôs payload is the signer‚Äôs public key.\nIn order for the signer to be registered in reward cycle N+1, the `stack-stx` transaction must be confirmed during the first 2000 blocks of reward cycle N. The last 100 blocks of cycle N (the ‚Äúprepare phase‚Äù) is where DKG occurs.\nThe start of the prepare phase is when Stacks nodes determine the official signer set of the next reward cycle.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#delegated-stacking)\nDelegated Stacking\nThe workflow for delegated signers is more complex, because it requires more transactions.\nThis workflow is explained more in detail in the [operate a pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool) guide, but the high-level workflow is:\n  1. Stackers delegate their STX to a pool operator\n  2. The pool operator makes `delegate-stack-stx` transactions to ‚Äúapprove‚Äù specific stackers. This needs to be called for every individual stacker that delegates to them.\n  3. The pool operator makes a `stack-aggregation-commit` transaction to ‚Äúcommit‚Äù all of its delegated STX up to this point.\n\n\nSimilar to solo stacking, these steps must be made before the prepare phase of an upcoming reward cycle.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx#once-a-signer-is-registered-in-the-signer-set)\nOnce a signer is registered in the signer set\nDuring the prepare phase before a reward cycle, Stacks nodes automatically determine the signer set for the upcoming cycle. When this occurs, the Stacks nodes make an ‚Äúinternal‚Äù transaction to update the `.signers` contract with the list of signers.\nThe signer software is continuously polling the Stacks node to see if it is registered for a cycle. If the signer software finds that it is registered (by matching its public key to the signers stored in the `signers` contract) it begins performing its duties as a signer.\nDuring the prepare phase, the signers perform DKG through StackerDB messages. Once an aggregate public key is determined, the signer automatically makes a `vote-for-aggregate-key` transaction. No out-of-band action is needed to be taken for this to occur.\n[PreviousEarn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)[NextSolo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 2060,
      "title": "Stack STX | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Solo Stacker Flow](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#solo-stacker-flow)\n  * [Step by Step Stacking Guide](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-by-step-stacking-guide)\n  * [Step 1: Run or work with a signer](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-1-run-or-work-with-a-signer)\n  * [Step 2: Generate a signer key signature](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-2-generate-a-signer-key-signature)\n  * [Step 3: Stack your STX](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-3-stack-your-stx)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n\n\n# Solo Stack\nThis doc assumes you are familiar with stacking at a conceptual level. If not, you may want to read the [Stacking](https://docs.stacks.co/concepts/block-production/stacking) concept guide.\nThe guide below applies to those who want to solo stack, meaning they meet the minimum stacking requirement and need to either run a signer or collaborate with a signer.\nThere is a dapp created by Degen Lab for [solo stacking](https://solo.stacking.tools/) without needing a signer, as Degen Lab operates a signer. This is likely the easiest option for solo stacking. We'll cover this option below.\nIf you prefer to participate in a pool by delegating your STX, you do not need to operate a signer either. If you fall into this category, check out the [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool) guide.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#solo-stacker-flow)\nSolo Stacker Flow\nNote that in order to solo stack, you need to have the minimum number of STX tokens. This number can be found by visiting the pox endpoint of Hiro's API at <https://api.mainnet.hiro.so/v2/pox> and looking at the `min_threshold_ustx` field. (1 STX = 1,000,000 uSTX)\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#call-the-function-stack-stx)\nCall the function `stack-stx`\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#function-source-code)\nCopy```\n;; Lock up some uSTX for stacking!  Note that the given amount here is in micro-STX (uSTX).\n;; The STX will be locked for the given number of reward cycles (lock-period).\n;; This is the self-service interface.  tx-sender will be the Stacker.\n;;\n;; * The given stacker cannot currently be stacking.\n;; * You will need the minimum uSTX threshold.  This will be determined by (get-stacking-minimum)\n;; at the time this method is called.\n;; * You may need to increase the amount of uSTX locked up later, since the minimum uSTX threshold\n;; may increase between reward cycles.\n;; * You need to provide a signer key to be used in the signer DKG process.\n;; * The Stacker will receive rewards in the reward cycle following `start-burn-ht`.\n;; Importantly, `start-burn-ht` may not be further into the future than the next reward cycle,\n;; and in most cases should be set to the current burn block height.\n;; \n;; To ensure that the Stacker is authorized to use the provided `signer-key`, the stacker\n;; must provide either a signature have an authorization already saved. Refer to\n;; `verify-signer-key-sig` for more information.\n;;\n;; The tokens will unlock and be returned to the Stacker (tx-sender) automatically.\n(define-public (stack-stx (amount-ustx uint)\n                          (pox-addr (tuple (version (buff1)) (hashbytes (buff32))))\n                          (start-burn-ht uint)\n                          (lock-period uint)\n                          (signer-sig (optional (buff65)))\n                          (signer-key (buff33))\n                          (max-amount uint)\n                          (auth-id uint))\n;; this stacker's first reward cycle is the _next_ reward cycle\n    (let ((first-reward-cycle (+ u1 (current-pox-reward-cycle)))\n          (specified-reward-cycle (+ u1 (burn-height-to-reward-cycle start-burn-ht))))\n;; the start-burn-ht must result in the next reward cycle, do not allow stackers\n;;  to \"post-date\" their `stack-stx` transaction\n      (asserts! (is-eq first-reward-cycle specified-reward-cycle)\n                (err ERR_INVALID_START_BURN_HEIGHT))\n;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n;; tx-sender principal must not be stacking\n      (asserts! (is-none (get-stacker-info tx-sender))\n        (err ERR_STACKING_ALREADY_STACKED))\n;; tx-sender must not be delegating\n      (asserts! (is-none (get-check-delegation tx-sender))\n        (err ERR_STACKING_ALREADY_DELEGATED))\n;; the Stacker must have sufficient unlocked funds\n      (asserts! (>= (stx-get-balance tx-sender) amount-ustx)\n        (err ERR_STACKING_INSUFFICIENT_FUNDS))\n;; Validate ownership of the given signer key\n      (try! (consume-signer-key-authorization pox-addr (- first-reward-cycle u1) \"stack-stx\" lock-period signer-sig signer-key amount-ustx max-amount auth-id))\n;; ensure that stacking can be performed\n      (try! (can-stack-stx pox-addr amount-ustx first-reward-cycle lock-period))\n;; register the PoX address with the amount stacked\n      (let ((reward-set-indexes (try! (add-pox-addr-to-reward-cycles pox-addr first-reward-cycle lock-period amount-ustx tx-sender signer-key))))\n;; add stacker record\n         (map-set stacking-state\n           { stacker: tx-sender }\n           { pox-addr: pox-addr,\n             reward-set-indexes: reward-set-indexes,\n             first-reward-cycle: first-reward-cycle,\n             lock-period: lock-period,\n             delegated-to: none })\n;; return the lock-up information, so the node can actually carry out the lock.\n          (ok { stacker: tx-sender, lock-amount: amount-ustx, signer-key: signer-key, unlock-burn-height: (reward-cycle-to-burn-height (+ first-reward-cycle lock-period)) }))))\n```\n\nThe first thing solo stackers will need to do is call the `stack-stx` function.\nJust like in previous versions of PoX, Stackers call `stack-stx`, but with the new arguments added in Nakamoto. The arguments are:\n  * Amount: Denoted in uSTX (1 STX = 1,000,000 uSTX)\n  * PoX Address: the BTC wallet address where to receive Stacking rewards\n  * Start burn height: the current BTC block height\n  * Lock period: the number of cycles to lock for (between 1 and 12)\n  * Signer key: the **public** key that your signer is using\n  * Signer signature: the signature that proves control of this signer key\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\nSolo stackers have two choices when it comes to operating as a signer. They can choose to run a signer themselves or work with a signer on their behalf.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#option-1-act-as-a-signer)\nOption 1: Act as a signer\nIn the ‚Äúprepare phase‚Äù before the next stacking cycle (last 100 blocks), the exact set of Stackers will be selected based on the amount of STX stacked. Just like in previous versions of PoX, each Stacker will have some number of reward slots based on the amount of STX locked.\n**It is critical that solo stackers have their signer running during this period.** The prepare phase is when distributed key generation (DKG) occurs, which is used when validating blocks by signers.\nIn general, you don‚Äôt need to do anything actively during this period, other than monitoring your signer software to ensure it‚Äôs running properly.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#option-2-work-with-a-signer)\nOption 2: Work with a signer\nIf you do not want to operate a signer on your own, you can work with another signer. To do this, you will need to collaborate with them to get their signer key and signer signature (details in the following sections), which will have to be passed when calling the stacking functions.\nRather than needing to find a signer to collaborate with, you can use the solo stacking dapp created by Degen Lab in order to use their signer to solo stack. They've created a UI that makes this process really simple.\nThey also have a tool for you to generate a signer signature if you prefer to call the stacking functions yourself.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#extending-the-stacking-period)\nExtending the stacking period\nJust like in the current version of PoX, you can extend your lock period while still Stacking. The function called is `stack-extend`.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#function-source-code-1)\nCopy```\n;; Extend an active Stacking lock.\n;; *New in Stacks 2.1*\n;; This method extends the `tx-sender`'s current lockup for an additional `extend-count`\n;;    and associates `pox-addr` with the rewards, The `signer-key` will be the key\n;;    used for signing. The `tx-sender` can thus decide to change the key when extending.\n;; \n;; Because no additional STX are locked in this function, the `amount` field used\n;; to verify the signer key authorization is zero. Refer to `verify-signer-key-sig` for more information.\n(define-public (stack-extend (extend-count uint)\n                             (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                             (signer-sig (optional (buff 65)))\n                             (signer-key (buff 33))\n                             (max-amount uint)\n                             (auth-id uint))\n   (let ((stacker-info (stx-account tx-sender))\n         ;; to extend, there must already be an etry in the stacking-state\n         (stacker-state (unwrap! (get-stacker-info tx-sender) (err ERR_STACK_EXTEND_NOT_LOCKED)))\n         (amount-ustx (get locked stacker-info))\n         (unlock-height (get unlock-height stacker-info))\n         (cur-cycle (current-pox-reward-cycle))\n         ;; first-extend-cycle will be the cycle in which tx-sender *would have* unlocked\n         (first-extend-cycle (burn-height-to-reward-cycle unlock-height))\n         ;; new first cycle should be max(cur-cycle, stacker-state.first-reward-cycle)\n         (cur-first-reward-cycle (get first-reward-cycle stacker-state))\n         (first-reward-cycle (if (> cur-cycle cur-first-reward-cycle) cur-cycle cur-first-reward-cycle)))\n    ;; must be called with positive extend-count\n    (asserts! (>= extend-count u1)\n              (err ERR_STACKING_INVALID_LOCK_PERIOD))\n    ;; stacker must be directly stacking\n      (asserts! (> (len (get reward-set-indexes stacker-state)) u0)\n                (err ERR_STACKING_IS_DELEGATED))\n    ;; stacker must not be delegating\n    (asserts! (is-none (get delegated-to stacker-state))\n              (err ERR_STACKING_IS_DELEGATED))\n    ;; Verify signature from delegate that allows this sender for this cycle\n    (try! (consume-signer-key-authorization pox-addr cur-cycle \"stack-extend\" extend-count signer-sig signer-key u0 max-amount auth-id))\n    ;; TODO: add more assertions to sanity check the `stacker-info` values with\n    ;;       the `stacker-state` values\n    (let ((last-extend-cycle  (- (+ first-extend-cycle extend-count) u1))\n          (lock-period (+ u1 (- last-extend-cycle first-reward-cycle)))\n          (new-unlock-ht (reward-cycle-to-burn-height (+ u1 last-extend-cycle))))\n      ;; first cycle must be after the current cycle\n      (asserts! (> first-extend-cycle cur-cycle) (err ERR_STACKING_INVALID_LOCK_PERIOD))\n      ;; lock period must be positive\n      (asserts! (> lock-period u0) (err ERR_STACKING_INVALID_LOCK_PERIOD))\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n      ;; tx-sender must be locked\n      (asserts! (> amount-ustx u0)\n        (err ERR_STACK_EXTEND_NOT_LOCKED))\n      ;; tx-sender must not be delegating\n      (asserts! (is-none (get-check-delegation tx-sender))\n        (err ERR_STACKING_ALREADY_DELEGATED))\n      ;; standard can-stack-stx checks\n      (try! (can-stack-stx pox-addr amount-ustx first-extend-cycle lock-period))\n      ;; register the PoX address with the amount stacked\n      ;;   for the new cycles\n      (let ((extended-reward-set-indexes (try! (add-pox-addr-to-reward-cycles pox-addr first-extend-cycle extend-count amount-ustx tx-sender signer-key)))\n            (reward-set-indexes\n                ;; use the active stacker state and extend the existing reward-set-indexes\n                (let ((cur-cycle-index (- first-reward-cycle (get first-reward-cycle stacker-state)))\n                      (old-indexes (get reward-set-indexes stacker-state))\n                      ;; build index list by taking the old-indexes starting from cur cycle\n                      ;;  and adding the new indexes to it. this way, the index is valid starting from the current cycle\n                      (new-list (concat (default-to (list) (slice? old-indexes cur-cycle-index (len old-indexes)))\n                                        extended-reward-set-indexes)))\n                  (unwrap-panic (as-max-len? new-list u12)))))\n          ;; update stacker record\n          (map-set stacking-state\n            { stacker: tx-sender }\n            { pox-addr: pox-addr,\n              reward-set-indexes: reward-set-indexes,\n              first-reward-cycle: first-reward-cycle,\n              lock-period: lock-period,\n              delegated-to: none })\n        ;; return lock-up information\n        (ok { stacker: tx-sender, unlock-burn-height: new-unlock-ht })))))\n```\n\nYou can ‚Äúrotate‚Äù your signing key when extending your lock period.\nThe arguments are:\n  * Extend count: the number of cycles to add to your lock period. The resulting lock period cannot be larger than 12. For example, if you're currently locked with 6 cycles remaining, the maximum number you can extend is 6.\n  * Pox Address: the BTC address to receive rewards\n  * Signer public key: the public key used for signing. This can stay the same, or you can use a new key.\n  * Signer signature: a signature proving control of your signing key\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX (1 stx = 1,000,000 uSTX) that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#increasing-the-stacking-amount)\nIncreasing the stacking amount\nThe stacking amount can also be increased while actively Stacking. The increased position will take effect starting with the next Stacking cycle. The function called is `stack-increase`.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#function-source-code-2)\nCopy```\n;; Increase the number of STX locked.\n;; *New in Stacks 2.1*\n;; This method locks up an additional amount of STX from `tx-sender`'s, indicated\n;; by `increase-by`.  The `tx-sender` must already be Stacking & must not be\n;; straddling more than one signer-key for the cycles effected. \n;; Refer to `verify-signer-key-sig` for more information on the authorization parameters\n;; included here.\n(define-public (stack-increase \n  (increase-by uint)\n  (signer-sig (optional (buff 65)))\n  (signer-key (buff 33))\n  (max-amount uint)\n  (auth-id uint))\n   (let ((stacker-info (stx-account tx-sender))\n         (amount-stacked (get locked stacker-info))\n         (amount-unlocked (get unlocked stacker-info))\n         (unlock-height (get unlock-height stacker-info))\n         (cur-cycle (current-pox-reward-cycle))\n         (first-increased-cycle (+ cur-cycle u1))\n         (stacker-state (unwrap! (map-get? stacking-state\n                                          { stacker: tx-sender })\n                                          (err ERR_STACK_INCREASE_NOT_LOCKED)))\n         (cur-pox-addr (get pox-addr stacker-state))\n         (cur-period (get lock-period stacker-state)))\n      ;; tx-sender must be currently locked\n      (asserts! (> amount-stacked u0)\n                (err ERR_STACK_INCREASE_NOT_LOCKED))\n      ;; must be called with positive `increase-by`\n      (asserts! (>= increase-by u1)\n                (err ERR_STACKING_INVALID_AMOUNT))\n      ;; stacker must have enough stx to lock\n      (asserts! (>= amount-unlocked increase-by)\n                (err ERR_STACKING_INSUFFICIENT_FUNDS))\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n      ;; stacker must be directly stacking\n      (asserts! (> (len (get reward-set-indexes stacker-state)) u0)\n                (err ERR_STACKING_IS_DELEGATED))\n      ;; stacker must not be delegating\n      (asserts! (is-none (get delegated-to stacker-state))\n                (err ERR_STACKING_IS_DELEGATED))\n      ;; Validate that amount is less than or equal to `max-amount`\n      (asserts! (>= max-amount (+ increase-by amount-stacked)) (err ERR_SIGNER_AUTH_AMOUNT_TOO_HIGH))\n      ;; Verify signature from delegate that allows this sender for this cycle\n      (try! (consume-signer-key-authorization cur-pox-addr cur-cycle \"stack-increase\" cur-period signer-sig signer-key increase-by max-amount auth-id))\n      ;; update reward cycle amounts\n      (asserts! (is-some (fold increase-reward-cycle-entry\n            (get reward-set-indexes stacker-state)\n            (some { first-cycle: first-increased-cycle,\n                    reward-cycle: (get first-reward-cycle stacker-state),\n                    stacker: tx-sender,\n                    add-amount: increase-by,\n                    signer-key: signer-key })))\n            (err ERR_INVALID_INCREASE))\n      ;; NOTE: stacking-state map is unchanged: it does not track amount-stacked in PoX-4\n      (ok { stacker: tx-sender, total-locked: (+ amount-stacked increase-by)})))\n```\n\nThe arguments are:\n  * Increase by: the amount of uSTX to add to your lock amount.\n  * Signer public key: the public key used for signing. This can stay the same, or you can use a new key.\n  * Signer signature: a signature proving control of your signing key\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX (1 stx = 1,000,000 uSTX) that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-by-step-stacking-guide)\nStep by Step Stacking Guide\nNow that you are familiar with the overall stacking flow and the different roles played, let's dive into the step-by-step guide for actually conducting the stacking process.\nThere are several ways you can go about stacking. This guide will cover using Leather Earn, which is a stacking web application and the simplest option.\nAdditionally, you can choose to call the stacking functions directly from the [deployed contract](https://explorer.hiro.so/txid/SP000000000000000000002Q6VF78.pox-4?chain=mainnet) in the explorer.\nThe fields and process will be the same, but the UI will differ.\nFinally, you can stack using JS and the [@stacks/stacking](https://github.com/hirosystems/stacks.js/tree/main/packages/stacking) package if you prefer. Again, the functions and parameters will be the same, you will just be writing your JS code directly instead of using a UI.\nIf you are interested in using this method, you'll want to follow the [stacking guide](https://docs.hiro.so/stacks.js/guides/how-to-integrate-stacking) created by Hiro, and be sure to integrate the new parameters described in [Hiro's Nakamoto update doc](https://docs.hiro.so/nakamoto/stacks-js).\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-1-run-or-work-with-a-signer)\nStep 1: Run or work with a signer\nThis is a necessary prerequisite to stacking as a solo stacker or pool operator.\nRunning a signer involves setting up a hosted production environment that includes both a Stacks Node and the Stacks Signer. For more information, refer to the [running a signer doc](https://docs.stacks.co/guides-and-tutorials/running-a-signer).\nOnce the signer software is running, you'll have to keep track of the `stacks_private_key` that you used when configuring your signer software. This will be used in subsequent Stacking transactions.\nIn the note above about pool operator vs signer keys, this corresponds to your signer key, not your pool operator wallet\nAlternatively, you can work with a signer and have them perform step 2 below on your behalf.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-2-generate-a-signer-key-signature)\nStep 2: Generate a signer key signature\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#overview-of-signer-keys-and-signatures)\nOverview of signer keys and signatures\nThe main difference with Stacking in Nakamoto is that the Signer (either solo Stacker or signer running a pool) needs to include new parameters in their Stacking transactions. These are Clarity transactions that Stackers will call when interacting with the `pox-4.clar` contract. Interacting with this contract is how you as a Stacker actually stack your STX tokens.\nThe current pox-4 contract address can be found by visiting the following endpoint of the Hiro API: <https://api.mainnet.hiro.so/v2/pox>.\nYou can then visit the [Explorer](https://explorer.hiro.so/?chain=mainnet) to view the contract and pass in the contract id.\nYou may want to review this contract to familiarize yourself with it.\nHere is an overview of the fields you will need to pass. We'll cover how to get and pass these fields as we dive further into this doc:\n  1. `signer-key`: the public key that corresponds to the `stacks_private_key` your signer is using\n  2. `signer-signature`: a signature that demonstrates that you actually controls your `signer-key`. Because signer keys need to be unique, this is also a safety check to ensure that other Stackers can‚Äôt use someone else‚Äôs public key\n  3. `max-amount`: The maximum amount of ustx (1 STX = 1,000,000 uSTX) that can be locked in the transaction that uses this signature. For example, if calling `stack-increase`, then this parameter dictates the maximum amount of uSTX that can be used to add more locked STX\n  4. `auth-id`: a random integer that prevents the re-use of a particular signature, similar to how nonces are used with transactions. Must be less than 14 characters\n\n\nSigner signatures are signatures created using a particular signer key. They demonstrate that the controller of that signer key is allowing a Stacker to use their signing key. The signer signature‚Äôs message hash is created using the following data:\n  * `method`: a string that indicates the Stacking method that is allowed to utilize this signature. The valid options are `stack-increase`, `stack-stx`, `stack-extend`, `agg-commit` (for stack-aggregation-commit-indexed), or `agg-increase` (for stack-aggregation-increase)\n  * `max-amount`: described above\n  * `auth-id`: described above\n  * `period`: a value between 1 and 12, which indicates the number of cycles that the Stacker is allowed to lock their STX for in this particular Stacking transaction. For `agg-commit`, this must be equal to 1\n  * `reward-cycle`: This represents the reward cycle in which the Stacking transaction can be confirmed. For solo stacking operations (`stack-stx`, `stack-extend` and `stack-increase`), this has to be set as the current cycle.\n  * `pox-address`: The Bitcoin address that is allowed to be used for receiving rewards. This can be set to any Bitcoin address that you have access to.\n  * `config`: This represents the signer configuration file path where the `stacks_private_key` is located, and it is used for signing the generated signature.\n\n\nNow that we have an overview of role and contents of signatures, let's see how to actually generate them. You have several options available.\n**Generating your signature with Degen Lab's stacks.tools**\nDegen Lab has a signature generation tool that will generate a signature using their signer. This is the quickest and simplest option. To generate a signature using this method, all you need to do is visit their [signature tool](https://signature.stacking.tools/) and pass in the relevant information as covered on this page.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#generating-your-signature-with-stacks.js)\nGenerating your signature with stacks.js\nThe [@stacks/stacking](https://www.npmjs.com/package/@stacks/stacking) NPM package provides interfaces to generate and use signer signatures.\nThere is a function called `signPoxSignature` that will allow you to generate this signature and pass it in to the stacking function.\nMore information and code samples can be found on [Hiro's Nakamoto docs](https://docs.hiro.so/nakamoto/stacks-js).\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#generating-your-signature-using-the-stacks-signer-cli)\nGenerating your signature using the stacks-signer CLI\nIf you already have your signer configured and set up, you can use the `stacks-signer` CLI to generate this signature. You can either SSH into your running signer or use the `stacks-signer` CLI locally. If using the CLI locally, you will need to ensure you have a matching configuration file located on your filesystem. Having a matching configuration file is important to ensure that the signer public key you make in Stacking transactions is the same as in your hosted signer.\nThe CLI command is:\nCopy```\n# Max Amount equivallent to 1M STX\n# Auth Id should be a random string less than 14 characters\nstacks-signer generate-stacking-signature \\\n  --method stack-stx \\\n  --max-amount 1000000000000 \\\n  --auth-id 71948271489 \\\n  --period 1 \\\n  --reward-cycle 100 \\\n  --pox-address bc1... \\\n  --config ./config.toml \\\n  --json\n```\n\nThese arguments match those described in section [Overview of signer keys and signatures](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#overview-of-signer-keys-and-signatures), with the addition of:\n  * `--json`, to optionally output the resulting signature in JSON\n\n\nYou can use the following command to generate a random `32` bit integer as `auth-id`:\nCopy```\npython3 -c 'import secrets; print(secrets.randbits(32))'\n```\n\nOnce the `generate-stacking-signature` command is run, the CLI will output a JSON:\nCopy```\n{\"authId\":\"1234\",\"maxAmount\":\"12345\",\"method\":\"stack-stx\",\"period\":1,\"poxAddress\":\"bc1...\",\"rewardCycle\":100,\"signerKey\":\"aaaaaaaa\",\"signerSignature\":\"bbbbbbbbbbb\"}\n```\n\nYou will use the JSON when calling Stacking transactions from your Stacker address as outlined above. Remember that this may be different than your signer address.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#generating-your-signature-with-leather-earn)\nGenerating your signature with Leather Earn\nLeather Earn is a web application that provides an easy-to-use interface for stacking and generating signatures. We'll cover using Leather Earn for stacking at the end of this document, here we will cover how to use it to generate a signature.\nAt the time of writing, this has only been tested using the [Leather](https://leather.io) wallet.\nYou can visit [earn.leather.io](https://earn.leather.io) to generate a signer key signature. Make sure you‚Äôre connected to the correct network. To generate a signer key signature, it‚Äôs important that you‚Äôve logged in Leather with the same secret key that was used to [generate your signer key](https://docs.stacks.co/guides-and-tutorials/running-a-signer#preflight-setup-1), not the account that will serve as your pool operator address. Once you‚Äôve setup that account on Leather, you can log in to Leather Earn. Click the link ‚ÄúSigner key signature‚Äù at the bottom of the page. This will open the ‚Äúgenerate a signer key signature‚Äù page.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fk1EBls0ZFPj86NyWRv8C%252Fimage.png%3Falt%3Dmedia%26token%3Da457a06d-ccd5-4862-92bc-02863b7f3644&width=768&dpr=4&quality=100&sign=4c6b0e97&sv=2)\nThe fields are:\n  * Reward cycle:\n    * For all solo stacking transactions, this must equal the current reward cycle, not the cycle in which they will start stacking. The field defaults to the current reward cycle.\n    * For stack-aggregation-commit-indexed, this field must equal the cycle used in that function‚Äôs ‚Äúreward cycle‚Äù argument. Typically, that equates to current_cycle + 1.\n  * Bitcoin address: the PoX reward address that can be used\n  * Topic: the stacking function that will use this signature\n  * Max amount: max amount of STX that can be used. Defaults to ‚Äúmax possible amount‚Äù\n  * Auth ID: defaults to random int\n  * Duration: must match the number of cycles used in the stacking transaction. **For stack-aggregation-commit-indexed, use ‚Äú1‚Äù**.\n\n\nEach of these fields must be exactly matched in order for the Stacking transaction to work. Future updates to Leather Earn will verify the signature before the transaction is made.\nClick the ‚Äúgenerate signature‚Äù button to popup a Leather page where you can generate the signature. Once you submit that popup, Leather Earn will have the signer key and signature you generated.\nAfter you sign that message, you'll see the information you can use in your Stacking transactions, including the signer public key and signature.\nYou can click the ‚Äúcopy‚Äù icon next to ‚Äúsigner details to share with stackers‚Äù. This will copy a JSON string, which can be directly pasted into the Leather Earn page where you make your Stacking transaction. Alternatively, this information can be entered manually.\nWe'll cover the Leather Earn pages for actually making those transactions in the next section of this document.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#using-a-hardware-or-software-wallet-to-generate-signatures)\nUsing a hardware or software wallet to generate signatures\nWhen the signer is configured with a `stacks_private_key`, the signer may want to be able to use that key in a wallet to make stacking signatures.\nIf the signer uses a tool like [@stacks/cli](https://docs.hiro.so/get-started/command-line-interface) to generate the key, the CLI also outputs a mnemonic (aka ‚Äúseed phrase‚Äù) that can be imported into a wallet. Because the Stacks CLI uses the standard derivation path for generating Stacks keys, any Stacks wallet will default to having that same private key when the wallet is imported from a derivation path. Similarly, if a hardware wallet is setup with that mnemonic, then the Signer can use a wallet like Leather to make stacking signatures.\nThe workflow for using a setting up a wallet to generate signatures would be:\n  1. Use @stacks/cli to generate the keychain and private key.\n    1. Typically, when using a hardware wallet, it‚Äôs better to generate the mnemonic on the hardware wallet. For this use case, however, the signer software needs the private key, and hardware wallets (by design) don‚Äôt allow exporting private keys.\n  2. Take the `privateKey` from the CLI output and add it to your signer‚Äôs configuration.\n  3. Take the mnemonic (24 words) and either:\n    1. Setup a new hardware wallet with this mnemonic\n    2. Store it somewhere securely, like a password manager. When the signer needs to generate signatures for Stacking transactions, they can import it into either Leather or XVerse.\n\n\nWhen the user needs to generate signatures:\n  1. Setup your wallet with your signer key‚Äôs private key. Either:\n    1. Setup your Leather wallet with a Ledger hardware wallet\n    2. Import your mnemonic into Leather, XVerse, or another Stacks wallet\n  2. Open an app that has stacking signature functionality built-in\n  3. Connect your wallet to the app (aka sign in)\n  4. In the app, enter your PoX address and ‚Äúsubmit‚Äù\n  5. The app will popup a window in your wallet that prompts you to sign the information\n    1. The app will show clear information about what you‚Äôre signing\n  6. Create the signature\n    1. If using a Ledger, confirm on your device\n  7. The app will display two results:\n    1. Your signer key, which is the public key associated with your signer‚Äôs key\n    2. Your signer signature\n  8. Finally, make a Stacking transaction using the signer key and signer signature.\n\n\nNow that you have your signer signature generated, it's time to start stacking. This process will vary depending on your chosen method. We've included instructions for solo stacking using [Leather Earn](https://earn.leather.io) below.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#step-3-stack-your-stx)\nStep 3: Stack your STX\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#stack-stx)\nstack-stx\nTo start, you'll visit [Leather Earn](https://earn.leather.io) and click the ‚ÄúStack independently‚Äù button on the home page.\nThis page will allow you to input the following input:\n  * The amount of STX you want to lock\n  * The duration (in number of cycles) to lock for\n  * Your BTC address where you will receive Stacking rewards\n  * New fields:\n    * Your signer public key\n    * Your signer key signature (this is what you generated in the previous step)\n    * Auth ID\n    * Max amount\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#stack-extend)\nstack-extend\nIf you want to extend the time that your STX will be locked for, you can use the stack-extend page on Leather Earn.\nIf you‚Äôre already stacking, the home page will provide a link to ‚Äúview stacking details‚Äù. From there, you can choose to extend.\nOn this page are the following fields:\n  * The number of cycles you want to extend for\n  * Your BTC address to receive rewards\n  * New fields:\n    * Signer public key\n    * Signer key signature\n    * Auth ID\n    * Max amount\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#stack-increase)\nstack-increase\nIf you want to increase the amount of STX locked, you can use the stack-increase page on Leather Earn.\nIf you‚Äôre already stacking, the home page will provide a link to ‚Äúview stacking details‚Äù. From there, you can choose to increase.\nOn this page are the following fields:\n  * The amount of STX you want to increase by\n  * New fields:\n    * Signer public key\n    * Signer key signature\n    * Auth ID\n    * Max amount\n\n\n[PreviousStack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)[NextOperate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 4934,
      "title": "Solo Stack | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Pool Operator Stacking Flow](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#pool-operator-stacking-flow)\n  * [Step by Step Stacking Guide](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-by-step-stacking-guide)\n  * [Step 1: Run or work with a signer](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-1-run-or-work-with-a-signer)\n  * [Step 2: Generate a signer key signature](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-2-generate-a-signer-key-signature)\n  * [Step 3: Stack as a pool operator](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-3-stack-as-a-pool-operator)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n\n\n# Operate a Pool\nThis doc assumes you are familiar with stacking at a conceptual level. If not, you may want to read the [Stacking](https://docs.stacks.co/concepts/block-production/stacking) concept guide.\nThe guide below applies to those who want to operate a pool, meaning they want to have stackers delegate STX tokens to them. If you choose to operate a pool you will either need to run your own signer or collaborate with one.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#pool-operator-stacking-flow)\nPool Operator Stacking Flow\nFor pool operators, the flow is a bit different than solo stacking. Remember that as a pool operator, other stackers are delegating their STX to you to stack on behalf of them. This additional role adds a couple of extra steps to your stacking flow if operating as a pool operator.\nSimilar to the changes to solo Stacking, the big difference for delegation flows is the inclusion of signer keys and signatures. Because pool operators need to make transactions to ‚Äúfinalize‚Äù a delegation, these new arguments add new complexities to the stacking flow.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#delegator-initiates-delegation)\nDelegator initiates delegation\nThis step is not required to apply to pool operators/signers. It is included here to illustrate the end-to-end flow, but if you are operating as a pool operator/signer you will not have to perform this step. Instead, users delegate their STX to you as the pool operator.\nThe first step, where the delegator sets up their delegation to a pool operator, is to call `delegate-stx`. This function does not directly delegate the STX, but rather allows the pool operator to issue the stacking lock on behalf of the user calling this function. You can think of calling this function as the delegator giving permission to the pool operator to stack on their behalf.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#function-source-code)\nCopy```\n;; Delegate to `delegate-to` the ability to stack from a given address.\n;;  This method _does not_ lock the funds, rather, it allows the delegate\n;;  to issue the stacking lock.\n;; The caller specifies:\n;;   * amount-ustx: the total amount of ustx the delegate may be allowed to lock\n;;   * until-burn-ht: an optional burn height at which this delegation expires\n;;   * pox-addr: an optional address to which any rewards *must* be sent\n(define-public (delegate-stx (amount-ustx uint)\n                             (delegate-to principal)\n                             (until-burn-ht (optional uint))\n                             (pox-addr (optional { version: (buff1), hashbytes: (buff32) })))\n    (begin\n;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n;; delegate-stx no longer requires the delegator to not currently\n;; be stacking.\n;; delegate-stack-* functions assert that\n;; 1. users can't swim in two pools at the same time.\n;; 2. users can't switch pools without cool down cycle.\n;;    Other pool admins can't increase or extend.\n;; 3. users can't join a pool while already directly stacking.\n;; pox-addr, if given, must be valid\n      (match pox-addr\n         address\n            (asserts! (check-pox-addr-version (get version address))\n                (err ERR_STACKING_INVALID_POX_ADDRESS))\ntrue)\n;; tx-sender must not be delegating\n      (asserts! (is-none (get-check-delegation tx-sender))\n        (err ERR_STACKING_ALREADY_DELEGATED))\n;; add delegation record\n      (map-set delegation-state\n        { stacker: tx-sender }\n        { amount-ustx: amount-ustx,\n          delegated-to: delegate-to,\n          until-burn-ht: until-burn-ht,\n          pox-addr: pox-addr })\n      (oktrue)))\n```\n\nThe arguments here are unchanged from previous versions of PoX:\n  * Amount: Denoted in uSTX (1 STX = 1,000,000 uSTX)\n  * Delegate to: the STX address of the pool operator they're delegating to. Note that this is different from the ‚Äúsigner key‚Äù used. Instead, this is the STX address that is used to make PoX transactions.\n  * Until burn height: an optional argument representing the BTC block height when the delegation expires. If none is used, the delegation permission expires only when explicitly revoked.\n  * Pox Address: an optional BTC address that, if specified, the signer must use to accept this delegation\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#pool-operator-activates-the-delegation)\nPool operator ‚Äúactivates‚Äù the delegation\nJust as in the older PoX contract, after a delegator calls the `delegate-stx` function, the pool operator calls `delegate-stack-stx` to commit the delegator‚Äôs STX.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#function-source-code-1)\nCopy```\n;; As a delegate, stack the given principal's STX using partial-stacked-by-cycle\n;; Once the delegate has stacked > minimum, the delegate should call stack-aggregation-commit\n(define-public (delegate-stack-stx (stacker principal)\n                                   (amount-ustx uint)\n                                   (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                   (start-burn-ht uint)\n                                   (lock-period uint))\n    ;; this stacker's first reward cycle is the _next_ reward cycle\n    (let ((first-reward-cycle (+ u1 (current-pox-reward-cycle)))\n          (specified-reward-cycle (+ u1 (burn-height-to-reward-cycle start-burn-ht)))\n          (unlock-burn-height (reward-cycle-to-burn-height (+ (current-pox-reward-cycle) u1 lock-period))))\n      ;; the start-burn-ht must result in the next reward cycle, do not allow stackers\n      ;;  to \"post-date\" their `stack-stx` transaction\n      (asserts! (is-eq first-reward-cycle specified-reward-cycle)\n                (err ERR_INVALID_START_BURN_HEIGHT))\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n        (err ERR_STACKING_PERMISSION_DENIED))\n      ;; stacker must have delegated to the caller\n      (let ((delegation-info (unwrap! (get-check-delegation stacker) (err ERR_STACKING_PERMISSION_DENIED))))\n        ;; must have delegated to tx-sender\n        (asserts! (is-eq (get delegated-to delegation-info) tx-sender)\n                  (err ERR_STACKING_PERMISSION_DENIED))\n        ;; must have delegated enough stx\n        (asserts! (>= (get amount-ustx delegation-info) amount-ustx)\n                  (err ERR_DELEGATION_TOO_MUCH_LOCKED))\n        ;; if pox-addr is set, must be equal to pox-addr\n        (asserts! (match (get pox-addr delegation-info)\n                         specified-pox-addr (is-eq pox-addr specified-pox-addr)\n                         true)\n                  (err ERR_DELEGATION_POX_ADDR_REQUIRED))\n        ;; delegation must not expire before lock period\n        (asserts! (match (get until-burn-ht delegation-info)\n                         until-burn-ht (>= until-burn-ht\n                                           unlock-burn-height)\n                      true)\n                  (err ERR_DELEGATION_EXPIRES_DURING_LOCK))\n        )\n      ;; stacker principal must not be stacking\n      (asserts! (is-none (get-stacker-info stacker))\n        (err ERR_STACKING_ALREADY_STACKED))\n      ;; the Stacker must have sufficient unlocked funds\n      (asserts! (>= (stx-get-balance stacker) amount-ustx)\n        (err ERR_STACKING_INSUFFICIENT_FUNDS))\n      ;; ensure that stacking can be performed\n      (try! (minimal-can-stack-stx pox-addr amount-ustx first-reward-cycle lock-period))\n      ;; register the PoX address with the amount stacked via partial stacking\n      ;;   before it can be included in the reward set, this must be committed!\n      (add-pox-partial-stacked pox-addr first-reward-cycle lock-period amount-ustx)\n      ;; add stacker record\n      (map-set stacking-state\n        { stacker: stacker }\n        { pox-addr: pox-addr,\n          first-reward-cycle: first-reward-cycle,\n          reward-set-indexes: (list),\n          lock-period: lock-period,\n          delegated-to: (some tx-sender) })\n      ;; return the lock-up information, so the node can actually carry out the lock.\n      (ok { stacker: stacker,\n            lock-amount: amount-ustx,\n            unlock-burn-height: unlock-burn-height })))\n```\n\nThe arguments are:\n  * Stacker: the STX address of the delegator\n  * Amount: denoted in uSTX (1 STX = 1,000,000 uSTX)\n  * Pox Address: The BTC address of the pool operator where they will receive the BTC rewards. If the delegator has set his own BTC address in the `delegate-stx` call, this address will have to be the same one, otherwise the contract call will fail.\n  * Start burn height: The BTC block height in which delegation can begin. This field is used to ensure that an old transaction intended for an earlier cycle will fail, and also prevents callers from \"post-dating\" the call to a future cycle. The best option here is to add 1 or 2 to the current BTC block height when you initiate this transaction. Note that the delegation will not actively be stacked at this block height, but whatever reward cycle is passed in the aggregation commit function (explained below).\n  * Lock period: number of cycles to lock for. If the delegator provided the until burn height argument, then the end of these cycles cannot be past the expiration provided. The maximum lock period that a pool operator can provide in this function call is 12.\n\n\nThis step also allows the pool operator to proactively choose which Stackers they‚Äôll accept delegation from. For ‚Äúclosed‚Äù pools, the pool operator will only call this function for approved Stackers. It is up to each pool operator who runs a closed pool to implement this process.\nThis step can be repeated for multiple Stackers before going to the next step.\nIf you look at the function source code, you'll see that the `delegate-stack-stx` function sets the stacker's first reward cycle to be the _next_ reward cycle.\nWhen generating your signature and your `stack-aggregation-commit-indexed` transaction, you'll want to make sure that the reward cycles match.\nSo if you are in cycle 557 when you call the `delegate-stack-stx` function, you'll want to pass in cycle 558 or higher when you generate your signature and your `stack-aggregation-commit-indexed` transaction.\nWith `stack-aggregation-commit-indexed`, the `reward-cycle` arg is saying \"I'm commiting these stacks to be stacked in cycle N\". But the `delegate-stack-stx` transaction gets you setup for next cycles, aka 558 and higher.\nAlso make sure that, when you generate your signature, you use 558 or higher as the reward cycle. In solo stacking methods, you use the current reward cycle in the signature, but not for `stack-aggregation-commit-indexed`. This is because with `stack-aggregation-commit-indexed` you can commit stacks for future cycles, not just the N+1 cycle.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#pool-operator-commits-delegated-stx)\nPool operator ‚Äúcommits‚Äù delegated STX\nThe next step is for the pool operator to call `stack-aggregation-commit-indexed`.\nIn the contract source code, you'll notice a similarly named function called `stack-aggregation-commit`. This is a legacy function that makes it difficult to increase the stacking amount, as it does not return the reward index of the stacking slot, which is required in order to call the `stack-aggregation-increase` function. We recommend using `stack-aggregation-commit-indexed`.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#function-source-code-2)\nNote that the `stack-aggregation-commit-indexed` function wraps the `inner-stack-aggregation-commit` function. The wrapped inner function is included here.\nCheck out the [deployed contract](https://explorer.hiro.so/txid/SP000000000000000000002Q6VF78.pox-4?chain=mainnet) to see the flow of contract calls.\nCopy```\n;; Commit partially stacked STX and allocate a new PoX reward address slot.\n;;   This allows a stacker/delegate to lock fewer STX than the minimal threshold in multiple transactions,\n;;   so long as: 1. The pox-addr is the same.\n;;               2. This \"commit\" transaction is called _before_ the PoX anchor block.\n;;   This ensures that each entry in the reward set returned to the stacks-node is greater than the threshold,\n;;   but does not require it be all locked up within a single transaction\n;;\n;; Returns (ok uint) on success, where the given uint is the reward address's index in the list of reward\n;; addresses allocated in this reward cycle.  This index can then be passed to `stack-aggregation-increase`\n;; to later increment the STX this PoX address represents, in amounts less than the stacking minimum.\n;;\n;; *New in Stacks 2.1.*\n(define-private (inner-stack-aggregation-commit (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                                (reward-cycle uint)\n                                                (signer-sig (optional (buff 65)))\n                                                (signer-key (buff 33))\n                                                (max-amount uint)\n                                                (auth-id uint))\n  (let ((partial-stacked\n         ;; fetch the partial commitments\n         (unwrap! (map-get? partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n                  (err ERR_STACKING_NO_SUCH_PRINCIPAL))))\n    ;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    (let ((amount-ustx (get stacked-amount partial-stacked)))\n      (try! (consume-signer-key-authorization pox-addr reward-cycle \"agg-commit\" u1 signer-sig signer-key amount-ustx max-amount auth-id))\n      (try! (can-stack-stx pox-addr amount-ustx reward-cycle u1))\n      ;; Add the pox addr to the reward cycle, and extract the index of the PoX address\n      ;; so the delegator can later use it to call stack-aggregation-increase.\n      (let ((add-pox-addr-info\n                (add-pox-addr-to-ith-reward-cycle\n                   u0\n                   { pox-addr: pox-addr,\n                     first-reward-cycle: reward-cycle,\n                     num-cycles: u1,\n                     reward-set-indexes: (list),\n                     stacker: none,\n                     signer: signer-key,\n                     amount-ustx: amount-ustx,\n                     i: u0 }))\n           (pox-addr-index (unwrap-panic\n                (element-at (get reward-set-indexes add-pox-addr-info) u0))))\n        ;; don't update the stacking-state map,\n        ;;  because it _already has_ this stacker's state\n        ;; don't lock the STX, because the STX is already locked\n        ;;\n        ;; clear the partial-stacked state, and log it\n        (map-delete partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n        (map-set logged-partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle } partial-stacked)\n        (ok pox-addr-index)))))\n```\n\nAt this point, the STX are committed to the pool operator, and the pool operator has some ‚Äúaggregate balance‚Äù of committed STX. The pool operator is not actually eligible for reward slots and signer initialization until this step is finished.\nThe pool operator cannot call this function until the total number of STX committed is larger than the minimum threshold required to Stack. This minimum stacking threshold is a function of the total number of STX stacked divided by the available number of reward slots.\nThis number varies and can be found by visiting the pox endpoint of Hiro's API at <https://api.hiro.so/v2/pox> and looking at the `min_threshold_ustx` field. (1 STX = 1,000,000 uSTX).\nOnce the threshold is reached, the pool operator calls `stack-aggregation-commit-indexed`. This is the point where you as the pool operator must provide your signer key and signer key signature. The arguments are:\n  * Pox Address: the BTC address to receive rewards\n  * Reward-cycle: a reward cycle in the future (see the note above on passing the correct reward cycle)\n  * Signer public key: the public key of your signer (remember that this may be different than the address you are using to operate the pool, but this step is how you associate the two together)\n  * Signer signature: A signature proving control of your signing key (details on how to do this are below)\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX (1 stx = 1,000,000 uSTX) that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\nIn the Definitions and Roles section in the previous document, we described how the pool operator and signer may be the same entity, but not necessarily have the same address.\nSigners who are also pool operators and wish to have STX delegated to them should have a separate keychain associated with their pool operator account in order to make Stacking transactions such as `delegate-stack-stx` and `stack-aggregation-commit-indexed`.\nSo, as a signing entity operating a pool, you should have two accounts:\n  * Your pool operator account, which you will use to conduct all of the stacking operations we have covered here.\n  * Your signer account, which is what you used to set up your signer. This signer public key is what you will pass in to the above aggregation commit function, and is also the key you will use when generating your signer signature.\n\n\nIf you are operating as a signer and a pool operator, you should have a separate key because you might need to rotate your signer key when necessary.\nThe PoX contract is designed to support rotating the signer key without needing your Stackers to un-stack and re-stack later. You cannot rotate a pool operator key without needing to wait for all delegated Stackers to un-stack and finally re-stack to the new pool operator address.\nBecause of this limitation of being unable to rotate pool operator addresses, it‚Äôs highly recommended to have a separate pool operator key. The benefit of a separate pool operator key is that it can easily be used in existing wallets, including hardware wallets.\nOnce this succeeds, the signer is eligible for reward slots. The number of reward slots depends on the amount of STX committed to this signer. Even if the signer commits more than the ‚Äúglobal minimum‚Äù, the minimum amount to receive a slot depends on the amount of STX locked for each cycle.\nTo act as a signer, each step up to this point must be taken before the prepare phase of the next cycle begins. It is crucial that the signer software is running.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#pool-operator-increases-amount-committed)\nPool operator increases amount committed\nEven after the signer commits to a certain amount of STX in the previous step, the signer can increase this amount once more delegations are received. The initial steps must be taken for each Stacker (`delegate-stx` and then `delegate-stack-stx`), and then `stack-aggregation-increase` can be called with the index returned from the first `stack-aggregation-commit-indexed` call and a new signature.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#function-source-code-3)\nCopy```\n;; Commit partially stacked STX to a PoX address which has already received some STX (more than the Stacking min).\n;; This allows a delegator to lock up marginally more STX from new delegates, even if they collectively do not\n;; exceed the Stacking minimum, so long as the target PoX address already represents at least as many STX as the\n;; Stacking minimum.\n;;\n;; The `reward-cycle-index` is emitted as a contract event from `stack-aggregation-commit` when the initial STX are\n;; locked up by this delegator.  It must be passed here to add more STX behind this PoX address.  If the delegator\n;; called `stack-aggregation-commit` multiple times for the same PoX address, then any such `reward-cycle-index` will\n;; work here.\n;;\n;; *New in Stacks 2.1*\n;;\n(define-public (stack-aggregation-increase (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                           (reward-cycle uint)\n                                           (reward-cycle-index uint))\n  (let ((partial-stacked\n         ;; fetch the partial commitments\n         (unwrap! (map-get? partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n                  (err ERR_STACKING_NO_SUCH_PRINCIPAL))))\n    ;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    ;; reward-cycle must be in the future\n    (asserts! (> reward-cycle (current-pox-reward-cycle))\n              (err ERR_STACKING_INVALID_LOCK_PERIOD))\n    (let ((amount-ustx (get stacked-amount partial-stacked))\n          ;; reward-cycle must point to an existing record in reward-cycle-total-stacked\n          ;; infallible; getting something from partial-stacked-by-cycle succeeded so this must succeed\n          (existing-total (unwrap-panic (map-get? reward-cycle-total-stacked { reward-cycle: reward-cycle })))\n          ;; reward-cycle and reward-cycle-index must point to an existing record in reward-cycle-pox-address-list\n          (existing-entry (unwrap! (map-get? reward-cycle-pox-address-list { reward-cycle: reward-cycle, index: reward-cycle-index })\n                          (err ERR_DELEGATION_NO_REWARD_SLOT)))\n          (increased-ustx (+ (get total-ustx existing-entry) amount-ustx))\n          (total-ustx (+ (get total-ustx existing-total) amount-ustx)))\n          ;; must be stackable\n          (try! (minimal-can-stack-stx pox-addr total-ustx reward-cycle u1))\n          ;; new total must exceed the stacking minimum\n          (asserts! (<= (get-stacking-minimum) total-ustx)\n                    (err ERR_STACKING_THRESHOLD_NOT_MET))\n          ;; there must *not* be a stacker entry (since this is a delegator)\n          (asserts! (is-none (get stacker existing-entry))\n                    (err ERR_DELEGATION_WRONG_REWARD_SLOT))\n          ;; the given PoX address must match the one on record\n          (asserts! (is-eq pox-addr (get pox-addr existing-entry))\n                    (err ERR_DELEGATION_WRONG_REWARD_SLOT))\n          ;; update the pox-address list -- bump the total-ustx\n          (map-set reward-cycle-pox-address-list\n                   { reward-cycle: reward-cycle, index: reward-cycle-index }\n                   { pox-addr: pox-addr,\n                     total-ustx: increased-ustx,\n                     stacker: none,\n                     ;; TODO: this must be authorized with a signature, or tx-sender allowance!\n                     signer: (get signer existing-entry) })\n          ;; update the total ustx in this cycle\n          (map-set reward-cycle-total-stacked\n                   { reward-cycle: reward-cycle }\n                   { total-ustx: total-ustx })\n          ;; don't update the stacking-state map,\n          ;;  because it _already has_ this stacker's state\n          ;; don't lock the STX, because the STX is already locked\n          ;;\n          ;; clear the partial-stacked state, and log it\n          (map-delete partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n          (map-set logged-partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle } partial-stacked)\n          (ok true))))\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-by-step-stacking-guide)\nStep by Step Stacking Guide\nNow that you are familiar with the overall stacking flow and the different roles played, let's dive into the step-by-step guide for actually conducting the stacking process as a pool operator.\nThere are several ways you can go about stacking. This guide will cover using [Leather Earn](https://earn.leather.io), which is a stacking web application and the simplest option.\nAdditionally, you can choose to call the stacking functions directly from the [deployed contract](https://explorer.hiro.so/txid/SP000000000000000000002Q6VF78.pox-4?chain=mainnet) in the explorer.\nThe fields and process will be the same, but the UI will differ.\nFinally, you can stack using JS and the [@stacks/stacking](https://github.com/hirosystems/stacks.js/tree/main/packages/stacking) package if you prefer. Again, the functions and parameters will be the same, you will just be writing your JS code directly instead of using a UI.\nIf you are interested in using this method, you'll want to follow the [stacking guide](https://docs.hiro.so/stacks.js/guides/how-to-integrate-stacking) created by Hiro, and be sure to integrate the new parameters described in [Hiro's Nakamoto update doc](https://docs.hiro.so/nakamoto/stacks-js).\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-1-run-or-work-with-a-signer)\nStep 1: Run or work with a signer\nThis is a necessary prerequisite to stacking as a pool operator. You will either need to run your own signer or work with one and have them conduct step 2 on your behalf and give you their signer signature.\nRunning a signer involves setting up a hosted production environment that includes both a Stacks Node and the Stacks Signer. For more information, refer to the [running a signer doc](https://docs.stacks.co/guides-and-tutorials/running-a-signer).\nOnce the signer software is running, you'll to keep track of the `stacks_private_key` that you used when configuring your signer software. This will be used in subsequent Stacking transactions.\nIn the note above about pool operator vs signer keys, this corresponds to your signer key, not your pool operator wallet\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-2-generate-a-signer-key-signature)\nStep 2: Generate a signer key signature\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#overview-of-signer-keys-and-signatures)\nOverview of signer keys and signatures\nThe main difference with Stacking in Nakamoto is that the Signer needs to include new parameters in their Stacking transactions. These are Clarity transactions that pool operators will call when interacting with the `pox-4.clar` contract. Interacting with that contract is how you as a pool operator actually stack the delegated STX tokens.\nThe current pox-4 contract address can be found by visiting the following endpoint of the Hiro API: <https://api.hiro.so/v2/pox>.\nYou can then visit the [Stacks Explorer](https://explorer.hiro.so) to view the contract and pass in the contract id.\nYou may want to review this contract to familiarize yourself with it.\nHere is an overview of the new fields you will need to pass in some of your stacking transactions:\n  1. `signer-key`: the public key that corresponds to the `stacks_private_key` your signer is using.\n  2. `signer-signature`: a signature that demonstrates that you actually control your `signer-key`. Because signer keys need to be unique, this is also a safety check to ensure that other Stackers can‚Äôt use someone else‚Äôs signer key.\n  3. `max-amount`: The maximum amount of uSTX (1 STX = 1,000,000 uSTX) that can be locked in the transaction that uses this signature. For example, if calling `stack-aggregation-increase`, then this parameter dictates the maximum amount of uSTX that can be used to add more locked STX to the already committed position.\n  4. `auth-id`: a random integer that prevents re-use of a particular signature, similar to how nonces are used with transactions.\n\n\nSigner signatures are signatures created using a particular signer key. They demonstrate that the controller of that signer key is allowing a Stacker to use their signer's public key. The signer signature‚Äôs message hash is created using the following data:\n  * `method`: a string that indicates the Stacking method that is allowed to utilize this signature. The valid options are `stack-stx`, `stack-extend`, `stack-increase`, `agg-commit` (for `stack-aggregation-commit-indexed`) and `agg-increase` (for `stack-aggregation-increase`).\n  * `max-amount`: described above.\n  * `auth-id`: described above.\n  * `period`: a value between 1 and 12, which indicates how long the Stacker is allowed to lock their STX for in this particular Stacking transaction. For `agg-commit`, this must be equal to 1.\n  * `reward-cycle`: This represents the reward cycle in which the Stacking transaction can be confirmed (for `stack-aggregation-commit-indexed`, this has to be set to 1).\n  * `pox-address`: The Bitcoin address that is allowed to be used for receiving rewards. This corresponds to the Bitcoin address associated with your signer\n  * `config`: This represents the signer configuration file path where the `stacks_private_key` is located, and it is used for signing the generated signature.\n\n\nNow that we have an overview of role and contents of signatures, let's see how to actually generate them. You have several options available.\n**Generating your signature with Degen Lab's stacks.tools**\nDegen Lab has a signature generation tool that will generate a signature using their signer. This is the quickest and simplest option. To generate a signature using this method, all you need to do is visit their [signature tool](https://signature.stacking.tools/) and pass in the relevant information as covered on the page.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#generating-your-signature-with-stacks.js)\nGenerating your signature with stacks.js\nThe [@stacks/stacking](https://www.npmjs.com/package/@stacks/stacking) NPM package provides interfaces to generate and use signer signatures.\nThere is a function called `signPoxSignature` that will allow you to generate this signature and pass it in to the stacking function.\nMore information and code samples can be found on [Hiro's Nakamoto docs](https://docs.hiro.so/nakamoto/stacks-js).\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#generating-your-signature-using-the-stacks-signer-cli)\nGenerating your signature using the stacks-signer CLI\nIf you already have your signer configured and set up, you can use the `stacks-signer` CLI to generate this signature. You can either SSH into your running signer or use the `stacks-signer` CLI locally. If using the CLI locally, you will need to ensure you have a matching configuration file located on your filesystem. Having a matching configuration file is important to ensure that the signer public key you make in Stacking transactions is the same as in your hosted signer.\nThe CLI command is:\nCopy```\n# Max Amount equivallent to 1M STX\n# Auth Id should be a random string less than 14 characters\nstacks-signer generate-stacking-signature \\\n  --method agg-commit \\\n  --max-amount 1000000000000 \\\n  --auth-id 71948271489 \\\n  --period 1 \\\n  --reward-cycle 100 \\\n  --pox-address bc1... \\\n  --config ./config.toml \\\n  --json\n```\n\nThese arguments match those described in section [Overview of signer keys and signatures](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#overview-of-signer-keys-and-signatures), with the addition of:\n  * `--json`, to optionally output the resulting signature in JSON.\n\n\nYou can use the following command to generate a random `32` bit integer as `auth-id`:\nCopy```\npython3 -c 'import secrets; print(secrets.randbits(32))'\n```\n\nOnce the `generate-stacking-signature` command is run, the CLI will output a JSON:\nCopy```\n{\"authId\":\"12345\",\"maxAmount\":\"1234\",\"method\":\"agg-commit\",\"period\":1,\"poxAddress\":\"bc1...\",\"rewardCycle\":100,\"signerKey\":\"aaaaaaaa\",\"signerSignature\":\"bbbbbbbbbbb\"}\n```\n\nYou will use the JSON when calling Stacking transactions from your pool operator address as outlined above. Remember that this may be different than your signer address.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#generating-your-signature-with-leather-earn)\nGenerating your signature with Leather Earn\nLeather Earn is a web application that provides an easy-to-use interface for stacking and generating signatures. We'll cover using Leather Earn for stacking at the end of this document, here we will cover how to use it to generate a signature.\nAt the time of writing, this has only been tested using the [Leather](https://leather.io) wallet.\nYou can visit [earn.leather.io](https://earn.leather.io) to generate a signer key signature. Make sure you‚Äôre connected to the correct network. To generate a signer key signature, it‚Äôs important that you‚Äôve logged in Leather with the same secret key that was used to [generate your signer key](https://docs.stacks.co/guides-and-tutorials/running-a-signer#preflight-setup-1), not the account that will serve as your pool operator address. Once you‚Äôve setup that account on Leather, you can log in to Leather Earn. Click the link ‚ÄúSigner key signature‚Äù at the bottom of the page. This will open the ‚Äúgenerate a signer key signature‚Äù page.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fk1EBls0ZFPj86NyWRv8C%252Fimage.png%3Falt%3Dmedia%26token%3Da457a06d-ccd5-4862-92bc-02863b7f3644&width=768&dpr=4&quality=100&sign=4c6b0e97&sv=2)\nThe fields are:\n  * Reward cycle:\n    * For all solo stacking transactions, this must equal the current reward cycle, not the cycle in which they will start stacking. The field defaults to the current reward cycle.\n    * For stack-aggregation-commit-indexed, this field must equal the cycle used in that function‚Äôs ‚Äúreward cycle‚Äù argument. Typically, that equates to current_cycle + 1.\n  * Bitcoin address: the PoX reward address that can be used\n  * Topic: the stacking function that will use this signature\n  * Max amount: max amount of STX that can be used. Defaults to ‚Äúmax possible amount‚Äù\n  * Auth ID: defaults to random int\n  * Duration: must match the number of cycles used in the stacking transaction. **For stack-aggregation-commit-indexed, use ‚Äú1‚Äù**.\n\n\nEach of these fields must be exactly matched in order for the Stacking transaction to work. Future updates to Leather Earn will verify the signature before the transaction is made.\nClick the ‚Äúgenerate signature‚Äù button to popup a Leather page where you can generate the signature. Once you submit that popup, Leather Earn will have the signer key and signature you generated.\nAfter you sign that message, you'll see the information you can use in your Stacking transactions, including the signer public key and signature.\nYou can click the ‚Äúcopy‚Äù icon next to ‚Äúsigner details to share with stackers‚Äù. This will copy a JSON string, which can be directly pasted into the Leather Earn page where you make your Stacking transaction. Alternatively, this information can be entered manually.\nWe'll cover the Leather Earn pages for actually making those transactions in the next section of this document.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#using-a-hardware-or-software-wallet-to-generate-signatures)\nUsing a hardware or software wallet to generate signatures\nWhen the signer is configured with a `stacks_private_key`, the signer may want to be able to use that key in a wallet to make stacking signatures.\nIf the signer uses a tool like [@stacks/cli](https://docs.hiro.so/get-started/command-line-interface) to generate the key, the CLI also outputs a mnemonic (aka ‚Äúseed phrase‚Äù) that can be imported into a wallet. Because the Stacks CLI uses the standard derivation path for generating Stacks keys, any Stacks wallet will default to having that same private key when the wallet is imported from a derivation path. Similarly, if a hardware wallet is setup with that mnemonic, then the Signer can use a wallet like Leather to make stacking signatures.\nThe workflow for using a setting up a wallet to generate signatures would be:\n  1. Use @stacks/cli to generate the keychain and private key.\n    1. Typically, when using a hardware wallet, it‚Äôs better to generate the mnemonic on the hardware wallet. For this use case, however, the signer software needs the private key, and hardware wallets (by design) don‚Äôt allow exporting private keys.\n  2. Take the `privateKey` from the CLI output and add it to your signer‚Äôs configuration.\n  3. Take the mnemonic (24 words) and either:\n    1. Setup a new hardware wallet with this mnemonic\n    2. Store it somewhere securely, like a password manager. When the signer needs to generate signatures for Stacking transactions, they can import it into either Leather or XVerse.\n\n\nWhen the user needs to generate signatures:\n  1. Setup your wallet with your signer key‚Äôs private key. Either:\n    1. Setup your Leather wallet with a Ledger hardware wallet\n    2. Import your mnemonic into Leather, XVerse, or another Stacks wallet\n  2. Open an app that has stacking signature functionality built-in\n  3. Connect your wallet to the app (aka sign in)\n  4. In the app, enter your PoX address and ‚Äúsubmit‚Äù\n  5. The app will popup a window in your wallet that prompts you to sign the information\n    1. The app will show clear information about what you‚Äôre signing\n  6. Create the signature\n    1. If using a Ledger, confirm on your device\n  7. The app will display two results:\n    1. Your signer key, which is the public key associated with your signer‚Äôs key\n    2. Your signer signature\n  8. Finally, make a Stacking transaction using the signer key and signer signature.\n\n\nNow that you have your signer signature generated, it's time to start stacking. This process will vary depending on your chosen method. We've included instructions for solo stacking using [Leather Earn](https://earn.leather.io) below.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#step-3-stack-as-a-pool-operator)\nStep 3: Stack as a pool operator\nThe first step with delegated stacking involves a stacker delegating their Stacks to a specific pool operator. Stackers can do this by visiting the ‚ÄúStack in a pool‚Äù page on Leather Earn.\nAs the pool operator, you must provide a STX address (a ‚Äúpool admin address‚Äù) that will manage delegations. As discussed in previous sections, this is a separate address from the signer‚Äôs private key, and this can be any address. This address is what will be used when making transactions to confirm and aggregate delegated STX.\nPool operators can log in to Leather Earn and visit <https://earn.leather.io/pool-admin> to make pool management transactions.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#delegate-stack-stx)\ndelegate-stack-stx\nOnce a user has delegated to a pool operator, the pool operator must call `delegate-stack-stx` for each individual stacker.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool#stack-aggregation-commit)\nstack-aggregation-commit\nOnce a pool has enough delegated STX to become a signer, the pool admin needs to visit the `Stack Aggregation Commit` page on Leather Earn. The pool operator enters the following information:\n  * Reward cycle: the reward cycle where the operator is ‚Äúcommiting‚Äù delegated STX. This must be done for every individual reward cycle where the pool will be acting as a signer.\n  * BTC address\n  * New fields:\n    * Signer public key\n    * Signer key signature (generated in a previous step using the signer key)\n    * Auth ID\n    * Max amount\n\n\nOnce this transaction has been confirmed, the pool operator is eligible to be a signer for an upcoming reward cycle.\nFor more on the relationship between automated signing and manual stacking transactions, be sure to check out the main [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx) doc.\n[PreviousSolo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)[NextStack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 5763,
      "title": "Operate a Pool | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Find a pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#find-a-pool)\n  * [Call the delegate function](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#call-the-delegate-function)\n  * [Pool operator stacks tokens](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#pool-operator-stacks-tokens)\n  * [Pool operator allocates rewards](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#pool-operator-allocates-rewards)\n  * [Pool operator distributes rewards](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#pool-operator-distributes-rewards)\n  * [Liquid Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#liquid-stacking)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n\n\n# Stack with a Pool\nThe most common stacking scenario is to be an individual stacker that does not meet the stacking minimum and to stack with a pool.\nThis is also the least complex version and is very easy to accomplish.\nBe sure you are familiar with the [concept of stacking](https://docs.stacks.co/concepts/block-production/stacking) before digging into this.\nThe dynamic minimum required to stack STX changes based on the total liquid supply of STX in the network and can be found by looking at the `pox` endpoint of the Hiro API: <https://api.hiro.so/v2/pox>.\nIf you do not meet this minimum, you'll need to delegate your STX to a pool operator.\nThis is a non-custodial delegation, meaning that your STX do not actually leave your wallet.\nPool operators have a lot of control over exactly how they implement stacking. Usually users will be interacting with a wrapper contract that the pool operator has created to utilize the core stacking contract.\nDelegating your STX to a pool operator involves a few steps:\n  1. Find a pool to delegate to\n  2. Use the pool's UI with your wallet of choice to call a delegate function with a few parameters\n  3. Pool operator will then stack your STX tokens on your behalf\n  4. Pool operator will allocate rewards proportionally based on how much you have stacked\n  5. Pool operator will distribute your rewards at the end of the stacking cycle\n\n\nLet's dig into each of these. If you want to learn more about the specific functions and the contract that handles the stacking process, be sure to take a look at the [stacking contract walkthrough](https://docs.stacks.co/example-contracts/stacking).\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#find-a-pool)\nFind a pool\nThe first step is to find a stacking pool you would like to stack with. Pool operators have a lot of control over exactly how they implement stacking and reward distribution, and they all do things a bit differently, so it's important to do your research. The Stacks website has a great [page on stacking](https://www.stacks.co/learn/stacking) that links to several pool operators for you to research.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#call-the-delegate-function)\nCall the delegate function\nAfter you've chosen your pool operator, you'll need to get set up with a [Stacks-compatible wallet](https://www.stacks.co/explore/ecosystem?category=All+Teams#wallets) like Leather, Xverse, or Asigna.\nThen you'll use your chosen pool operator's UI to call their delegation function. You may need to pass a couple of parameters here like how long you want to grant delegation permission for.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#pool-operator-stacks-tokens)\nPool operator stacks tokens\nOnce you grant permission for the pool operator to delegate, they will take over and call a separate function in the stacking contract to actually stack those delegated tokens. At this point your STX will be locked.\nDepending on how the pool operator handles things, they may offer the option to automatically continue to stack your STX for up to 12 continuous cycles.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#pool-operator-allocates-rewards)\nPool operator allocates rewards\nNext, the pool operator will track what proportion of rewards you should earn based on the proportion of STX you delegated. If distributing rewards directly in Bitcoin, the pool operator will need to take custody of the Bitcoin and manually distribute it.\nThis is why it is important to do your research and stack with a pool operator whose reward distribution mechanism you trust. Different operators have different methods to make this process transparent and as trust-minimized as possible.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#pool-operator-distributes-rewards)\nPool operator distributes rewards\nFinally, the pool operator will distribute those rewards to you in either BTC or STX, depending on the model they use.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool#liquid-stacking)\nLiquid Stacking\nLiquid stacking is when you delegate your STX tokens to a liquid stacking provider and they issue you a new token such as stSTX that you can then use in the ecosystem. This makes it so that stackers can still use their STX to participate in DeFi protocols and other apps even while their STX are locked.\nThis works a bit differently than traditional stacking and links to liquid stacking providers for you to research can be found on the [Stacks website](https://www.stacks.co/learn/stacking).\n[PreviousOperate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)[NextIncrease Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 1245,
      "title": "Stack with a Pool | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Solo Stackers](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#solo-stackers)\n  * [Delegators](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#delegators)\n  * [Step 1: Revoke Your Current Delegation](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-1-revoke-your-current-delegation)\n  * [Step 2: Delegate with a Higher Amount](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-2-delegate-with-a-higher-amount)\n  * [Pool Operators](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#pool-operators)\n  * [Step 1: Increase the Locked Amount](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-1-increase-the-locked-amount)\n  * [Step 2: Stack the Increased Amount](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-2-stack-the-increased-amount)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n\n\n# Increase Stacked Position\nThis guide explains how to increase your stacked STX position. The process depends on your role:\n  * **Solo Stackers** use the `stack-increase` function.\n  * **Delegators** must first revoke their current delegation using `revoke-delegate-stx` and then re-delegate with a higher amount to the same pool operator using `delegate-stx`.\n  * **Pool Operators** increase their delegators' locked amount by calling `delegate-stack-increase` and then stacking the increased amount with either `stack-aggregation-commit-indexed` (if not already committed) or `stack-aggregation-increase` (if the commit has already been made).\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#solo-stackers)\nSolo Stackers\nSolo stackers can add more STX to their active stacking position by calling the `stack-increase` function. The new amount takes effect from the next stacking cycle.\nThe `stack-increase` function locks an additional amount of STX from your account. Your account must be actively stacking and not delegating, and you must have enough unlocked STX to cover the increase.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#function-source-code)\nCopy```\n;; Increase the number of STX locked.\n;; *New in Stacks 2.1*\n;; This method locks up an additional amount of STX from `tx-sender`'s, indicated\n;; by `increase-by`.  The `tx-sender` must already be Stacking & must not be\n;; straddling more than one signer-key for the cycles effected. \n;; Refer to `verify-signer-key-sig` for more information on the authorization parameters\n;; included here.\n(define-public (stack-increase  (increase-by uint)\n  (signer-sig (optional (buff65)))\n  (signer-key (buff33))\n  (max-amount uint)\n  (auth-id uint))\n   (let ((stacker-info (stx-account tx-sender))\n         (amount-stacked (get locked stacker-info))\n         (amount-unlocked (get unlocked stacker-info))\n         (unlock-height (get unlock-height stacker-info))\n         (cur-cycle (current-pox-reward-cycle))\n         (first-increased-cycle (+ cur-cycle u1))\n         (stacker-state (unwrap! (map-get? stacking-state\n                                          { stacker: tx-sender })\n                                          (err ERR_STACK_INCREASE_NOT_LOCKED)))\n         (cur-pox-addr (get pox-addr stacker-state))\n         (cur-period (get lock-period stacker-state)))\n;; tx-sender must be currently locked\n      (asserts! (> amount-stacked u0)\n                (err ERR_STACK_INCREASE_NOT_LOCKED))\n;; must be called with positive `increase-by`\n      (asserts! (>= increase-by u1)\n                (err ERR_STACKING_INVALID_AMOUNT))\n;; stacker must have enough stx to lock\n      (asserts! (>= amount-unlocked increase-by)\n                (err ERR_STACKING_INSUFFICIENT_FUNDS))\n;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n;; stacker must be directly stacking\n      (asserts! (> (len (get reward-set-indexes stacker-state)) u0)\n                (err ERR_STACKING_IS_DELEGATED))\n;; stacker must not be delegating\n      (asserts! (is-none (get delegated-to stacker-state))\n                (err ERR_STACKING_IS_DELEGATED))\n;; Validate that amount is less than or equal to `max-amount`\n      (asserts! (>= max-amount (+ increase-by amount-stacked)) (err ERR_SIGNER_AUTH_AMOUNT_TOO_HIGH))\n;; Verify signature from delegate that allows this sender for this cycle\n      (try! (consume-signer-key-authorization cur-pox-addr cur-cycle \"stack-increase\" cur-period signer-sig signer-key increase-by max-amount auth-id))\n;; update reward cycle amounts\n      (asserts! (is-some (fold increase-reward-cycle-entry\n            (get reward-set-indexes stacker-state)\n            (some { first-cycle: first-increased-cycle,\n                    reward-cycle: (get first-reward-cycle stacker-state),\n                    stacker: tx-sender,\n                    add-amount: increase-by,\n                    signer-key: signer-key })))\n            (err ERR_INVALID_INCREASE))\n;; NOTE: stacking-state map is unchanged: it does not track amount-stacked in PoX-4\n      (ok { stacker: tx-sender, total-locked: (+ amount-stacked increase-by)})))\n```\n\nThe arguments are:\n  * Increase by: the amount of uSTX to add to your lock amount.\n  * Signer public key: the public key used for signing. This can stay the same, or you can use a new key.\n  * Signer signature: a signature proving control of your signing key\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX (1 STX = 1,000,000 uSTX) that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#delegators)\nDelegators\nDelegators have to increase their delegated amount in two steps.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-1-revoke-your-current-delegation)\nStep 1: Revoke Your Current Delegation\nBefore increasing your delegation, cancel your current delegation through the `revoke-delegate-stx` function, so that you can delegate an increased amount of STX afterwards.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#function-source-code-1)\nCopy```\n;; Revokes the delegation to the current stacking pool.\n;; New in pox-4: Fails if the delegation was already revoked.\n;; Returns the last delegation state.\n(define-public (revoke-delegate-stx)\n  (let ((last-delegation-state (get-check-delegation tx-sender)))\n    ;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    (asserts! (is-some last-delegation-state) (err ERR_DELEGATION_ALREADY_REVOKED))\n    (asserts! (map-delete delegation-state { stacker: tx-sender }) (err ERR_DELEGATION_ALREADY_REVOKED))\n    (ok last-delegation-state)))\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-2-delegate-with-a-higher-amount)\nStep 2: Delegate with a Higher Amount\nAfter revoking, call the `delegate-stx` function with your new, higher amount. This function does not directly delegate the STX, but rather allows the pool operator to issue the stacking lock on behalf of the user calling this function.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#function-source-code-2)\nCopy```\n;; Delegate to `delegate-to` the ability to stack from a given address.\n;;  This method _does not_ lock the funds, rather, it allows the delegate\n;;  to issue the stacking lock.\n;; The caller specifies:\n;;   * amount-ustx: the total amount of ustx the delegate may be allowed to lock\n;;   * until-burn-ht: an optional burn height at which this delegation expires\n;;   * pox-addr: an optional address to which any rewards *must* be sent\n(define-public (delegate-stx (amount-ustx uint)\n                             (delegate-to principal)\n                             (until-burn-ht (optional uint))\n                             (pox-addr (optional { version: (buff 1), hashbytes: (buff 32) })))\n    (begin\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n      ;; delegate-stx no longer requires the delegator to not currently\n      ;; be stacking.\n      ;; delegate-stack-* functions assert that\n      ;; 1. users can't swim in two pools at the same time.\n      ;; 2. users can't switch pools without cool down cycle.\n      ;;    Other pool admins can't increase or extend.\n      ;; 3. users can't join a pool while already directly stacking.\n      ;; pox-addr, if given, must be valid\n      (match pox-addr\n         address\n            (asserts! (check-pox-addr-version (get version address))\n                (err ERR_STACKING_INVALID_POX_ADDRESS))\n         true)\n      ;; tx-sender must not be delegating\n      (asserts! (is-none (get-check-delegation tx-sender))\n        (err ERR_STACKING_ALREADY_DELEGATED))\n      ;; add delegation record\n      (map-set delegation-state\n        { stacker: tx-sender }\n        { amount-ustx: amount-ustx,\n          delegated-to: delegate-to,\n          until-burn-ht: until-burn-ht,\n          pox-addr: pox-addr })\n      (ok true)))\n```\n\nThe arguments here are unchanged from previous versions of PoX:\n  * Amount: Denoted in uSTX (1 STX = 1,000,000 uSTX)\n  * Delegate to: the STX address of the pool operator they're delegating to. Note that this is different from the ‚Äúsigner key‚Äù used. Instead, this is the STX address that is used to make PoX transactions.\n  * Until burn height: an optional argument representing the BTC block height when the delegation expires. If none is used, the delegation permission expires only when explicitly revoked.\n  * Pox Address: an optional BTC address that, if specified, the signer must use to accept this delegation\n\n\nMake sure the revocation is successful before initiating a new delegation. Otherwise, the `delegate-stx` transaction will fail.\n## \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#pool-operators)\nPool Operators\nPool operators can increase the total stacking amount through a two-step process. First, you have to update the delegation's locked amount with `delegate-stack-increase`. Then, you can stack the increased amount by committing it in a future cycle, or increasing an already committed position.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-1-increase-the-locked-amount)\nStep 1: Increase the Locked Amount\nThe `delegate-stack-increase` function allows a pool operator to add more STX to the existing locked position for a given delegator. It performs necessary checks and updates the delegation state with the increased amount.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#function-source-code-3)\nCopy```\n;; As a delegator, increase an active Stacking lock, issuing a \"partial commitment\" for the\n;;   increased cycles.\n;; *New in Stacks 2.1*\n;; This method increases `stacker`'s current lockup and partially commits the additional\n;;   STX to `pox-addr`\n(define-public (delegate-stack-increase\n                    (stacker principal)\n                    (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                    (increase-by uint))\n    (let ((stacker-info (stx-account stacker))\n          (existing-lock (get locked stacker-info))\n          (available-stx (get unlocked stacker-info))\n          (unlock-height (get unlock-height stacker-info)))\n     ;; must be called with positive `increase-by`\n     (asserts! (>= increase-by u1)\n               (err ERR_STACKING_INVALID_AMOUNT))\n     (let ((unlock-in-cycle (burn-height-to-reward-cycle unlock-height))\n           (cur-cycle (current-pox-reward-cycle))\n           (first-increase-cycle (+ cur-cycle u1))\n           (last-increase-cycle (- unlock-in-cycle u1))\n           (cycle-count (try! (if (<= first-increase-cycle last-increase-cycle)\n                                  (ok (+ u1 (- last-increase-cycle first-increase-cycle)))\n                                  (err ERR_STACKING_INVALID_LOCK_PERIOD))))\n           (new-total-locked (+ increase-by existing-lock))\n           (stacker-state\n                (unwrap! (map-get? stacking-state { stacker: stacker })\n                 (err ERR_STACK_INCREASE_NOT_LOCKED))))\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n        (err ERR_STACKING_PERMISSION_DENIED))\n      ;; stacker must not be directly stacking\n      (asserts! (is-eq (len (get reward-set-indexes stacker-state)) u0)\n                (err ERR_STACKING_NOT_DELEGATED))\n      ;; stacker must be delegated to tx-sender\n      (asserts! (is-eq (unwrap! (get delegated-to stacker-state)\n                                (err ERR_STACKING_NOT_DELEGATED))\n                       tx-sender)\n                (err ERR_STACKING_PERMISSION_DENIED))\n      ;; stacker must be currently locked\n      (asserts! (> existing-lock u0)\n        (err ERR_STACK_INCREASE_NOT_LOCKED))\n      ;; stacker must have enough stx to lock\n      (asserts! (>= available-stx increase-by)\n        (err ERR_STACKING_INSUFFICIENT_FUNDS))\n      ;; stacker must have delegated to the caller\n      (let ((delegation-info (unwrap! (get-check-delegation stacker) (err ERR_STACKING_PERMISSION_DENIED)))\n            (delegated-to (get delegated-to delegation-info))\n            (delegated-amount (get amount-ustx delegation-info))\n            (delegated-pox-addr (get pox-addr delegation-info))\n            (delegated-until (get until-burn-ht delegation-info)))\n        ;; must have delegated to tx-sender\n        (asserts! (is-eq delegated-to tx-sender)\n                  (err ERR_STACKING_PERMISSION_DENIED))\n        ;; must have delegated enough stx\n        (asserts! (>= delegated-amount new-total-locked)\n                  (err ERR_DELEGATION_TOO_MUCH_LOCKED))\n        ;; if pox-addr is set, must be equal to pox-addr\n        (asserts! (match delegated-pox-addr\n                         specified-pox-addr (is-eq pox-addr specified-pox-addr)\n                         true)\n                  (err ERR_DELEGATION_POX_ADDR_REQUIRED))\n        ;; delegation must not expire before lock period\n        (asserts! (match delegated-until\n                        until-burn-ht\n                            (>= until-burn-ht unlock-height)\n                        true)\n                  (err ERR_DELEGATION_EXPIRES_DURING_LOCK)))\n      ;; delegate stacking does minimal-can-stack-stx\n      (try! (minimal-can-stack-stx pox-addr new-total-locked first-increase-cycle (+ u1 (- last-increase-cycle first-increase-cycle))))\n      ;; register the PoX address with the amount stacked via partial stacking\n      ;;   before it can be included in the reward set, this must be committed!\n      (add-pox-partial-stacked pox-addr first-increase-cycle cycle-count increase-by)\n      ;; stacking-state is unchanged, so no need to update\n      ;; return the lock-up information, so the node can actually carry out the lock.\n      (ok { stacker: stacker, total-locked: new-total-locked}))))\n```\n\nThe arguments are:\n  * Stacker: the STX address of the delegator\n  * Pox Address: The BTC address of the pool operator where they will receive the BTC rewards. If the delegator has set his own BTC address in the `delegate-stx` call, this address will have to be the same one, otherwise the contract call will fail.\n  * Increase by: the amount of uSTX to add to the delegator's locked amount.\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#step-2-stack-the-increased-amount)\nStep 2: Stack the Increased Amount\nOnce the locked amount is updated, the operator must commit the change. There are two functions that can be used to stack the increased amount:\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#a.-if-the-commit-has-not-yet-been-made-stack-aggregation-commit-indexed)\nA. If the Commit Has Not Yet Been Made: `stack-aggregation-commit-indexed`\nThis function stacks the total locked amount for an upcoming reward cycle. Note that the `stack-aggregation-commit-indexed` function wraps the `inner-stack-aggregation-commit` function. The wrapped inner function is included here.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#function-source-code-4)\nCopy```\n;; Commit partially stacked STX and allocate a new PoX reward address slot.\n;;   This allows a stacker/delegate to lock fewer STX than the minimal threshold in multiple transactions,\n;;   so long as: 1. The pox-addr is the same.\n;;               2. This \"commit\" transaction is called _before_ the PoX anchor block.\n;;   This ensures that each entry in the reward set returned to the stacks-node is greater than the threshold,\n;;   but does not require it be all locked up within a single transaction\n;;\n;; Returns (ok uint) on success, where the given uint is the reward address's index in the list of reward\n;; addresses allocated in this reward cycle.  This index can then be passed to `stack-aggregation-increase`\n;; to later increment the STX this PoX address represents, in amounts less than the stacking minimum.\n;;\n;; *New in Stacks 2.1.*\n(define-private (inner-stack-aggregation-commit (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                                (reward-cycle uint)\n                                                (signer-sig (optional (buff 65)))\n                                                (signer-key (buff 33))\n                                                (max-amount uint)\n                                                (auth-id uint))\n  (let ((partial-stacked\n         ;; fetch the partial commitments\n         (unwrap! (map-get? partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n                  (err ERR_STACKING_NO_SUCH_PRINCIPAL))))\n    ;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    (let ((amount-ustx (get stacked-amount partial-stacked)))\n      (try! (consume-signer-key-authorization pox-addr reward-cycle \"agg-commit\" u1 signer-sig signer-key amount-ustx max-amount auth-id))\n      (try! (can-stack-stx pox-addr amount-ustx reward-cycle u1))\n      ;; Add the pox addr to the reward cycle, and extract the index of the PoX address\n      ;; so the delegator can later use it to call stack-aggregation-increase.\n      (let ((add-pox-addr-info\n                (add-pox-addr-to-ith-reward-cycle\n                   u0\n                   { pox-addr: pox-addr,\n                     first-reward-cycle: reward-cycle,\n                     num-cycles: u1,\n                     reward-set-indexes: (list),\n                     stacker: none,\n                     signer: signer-key,\n                     amount-ustx: amount-ustx,\n                     i: u0 }))\n           (pox-addr-index (unwrap-panic\n                (element-at (get reward-set-indexes add-pox-addr-info) u0))))\n        ;; don't update the stacking-state map,\n        ;;  because it _already has_ this stacker's state\n        ;; don't lock the STX, because the STX is already locked\n        ;;\n        ;; clear the partial-stacked state, and log it\n        (map-delete partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n        (map-set logged-partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle } partial-stacked)\n        (ok pox-addr-index)))))\n```\n\nThe arguments are:\n  * Pox Address: the BTC address to receive rewards\n  * Reward-cycle: a reward cycle in the future (see the note above on passing the correct reward cycle)\n  * Signer public key: the public key of your signer\n  * Signer signature: A signature proving control of your signing key\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX (1 stx = 1,000,000 uSTX) that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\n#### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#b.-if-the-commit-has-already-been-made-stack-aggregation-increase)\nB. If the Commit Has Already Been Made: `stack-aggregation-increase`\nIf you have previously committed an amount, you can further increase the stacked position by calling `stack-aggregation-increase`. This function adds an additional amount of STX to the already committed delegation.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking#function-source-code-5)\nCopy```\n;; Commit partially stacked STX to a PoX address which has already received some STX (more than the Stacking min).\n;; This allows a delegator to lock up marginally more STX from new delegates, even if they collectively do not\n;; exceed the Stacking minimum, so long as the target PoX address already represents at least as many STX as the\n;; Stacking minimum.\n;;\n;; The `reward-cycle-index` is emitted as a contract event from `stack-aggregation-commit` when the initial STX are\n;; locked up by this delegator.  It must be passed here to add more STX behind this PoX address.  If the delegator\n;; called `stack-aggregation-commit` multiple times for the same PoX address, then any such `reward-cycle-index` will\n;; work here.\n;;\n;; *New in Stacks 2.1*\n;;\n(define-public (stack-aggregation-increase (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                           (reward-cycle uint)\n                                           (reward-cycle-index uint))\n  (let ((partial-stacked\n         ;; fetch the partial commitments\n         (unwrap! (map-get? partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n                  (err ERR_STACKING_NO_SUCH_PRINCIPAL))))\n    ;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    ;; reward-cycle must be in the future\n    (asserts! (> reward-cycle (current-pox-reward-cycle))\n              (err ERR_STACKING_INVALID_LOCK_PERIOD))\n    (let ((amount-ustx (get stacked-amount partial-stacked))\n          ;; reward-cycle must point to an existing record in reward-cycle-total-stacked\n          ;; infallible; getting something from partial-stacked-by-cycle succeeded so this must succeed\n          (existing-total (unwrap-panic (map-get? reward-cycle-total-stacked { reward-cycle: reward-cycle })))\n          ;; reward-cycle and reward-cycle-index must point to an existing record in reward-cycle-pox-address-list\n          (existing-entry (unwrap! (map-get? reward-cycle-pox-address-list { reward-cycle: reward-cycle, index: reward-cycle-index })\n                          (err ERR_DELEGATION_NO_REWARD_SLOT)))\n          (increased-ustx (+ (get total-ustx existing-entry) amount-ustx))\n          (total-ustx (+ (get total-ustx existing-total) amount-ustx)))\n          ;; must be stackable\n          (try! (minimal-can-stack-stx pox-addr total-ustx reward-cycle u1))\n          ;; new total must exceed the stacking minimum\n          (asserts! (<= (get-stacking-minimum) total-ustx)\n                    (err ERR_STACKING_THRESHOLD_NOT_MET))\n          ;; there must *not* be a stacker entry (since this is a delegator)\n          (asserts! (is-none (get stacker existing-entry))\n                    (err ERR_DELEGATION_WRONG_REWARD_SLOT))\n          ;; the given PoX address must match the one on record\n          (asserts! (is-eq pox-addr (get pox-addr existing-entry))\n                    (err ERR_DELEGATION_WRONG_REWARD_SLOT))\n          ;; update the pox-address list -- bump the total-ustx\n          (map-set reward-cycle-pox-address-list\n                   { reward-cycle: reward-cycle, index: reward-cycle-index }\n                   { pox-addr: pox-addr,\n                     total-ustx: increased-ustx,\n                     stacker: none,\n                     ;; TODO: this must be authorized with a signature, or tx-sender allowance!\n                     signer: (get signer existing-entry) })\n          ;; update the total ustx in this cycle\n          (map-set reward-cycle-total-stacked\n                   { reward-cycle: reward-cycle }\n                   { total-ustx: total-ustx })\n          ;; don't update the stacking-state map,\n          ;;  because it _already has_ this stacker's state\n          ;; don't lock the STX, because the STX is already locked\n          ;;\n          ;; clear the partial-stacked state, and log it\n          (map-delete partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n          (map-set logged-partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle } partial-stacked)\n          (ok true))))\n```\n\nThe arguments are:\n  * Pox Address: the BTC address to receive rewards\n  * Reward Cycle: a reward cycle in the future (see the note above on passing the correct reward cycle)\n  * Reward Cycle Index: the index returned by the successful `stack-aggregation-commit-indexed` function for the given cycle\n  * Signer signature: A signature proving control of your signing key\n  * Signer public key: the public key of your signer\n  * Max Amount: This parameter is used to validate the signer signature provided. It represents the maximum number of uSTX (1 stx = 1,000,000 uSTX) that can be stacked in this transaction.\n  * Auth Id: This parameter is used to validate the signer signature provided. It is a random integer that prevents the re-use of this particular signer signature.\n\n\n  * **Sequential Process:** First call `delegate-stack-increase` to update the locked amount of a delegation. Then, commit the change:\n    * Using `stack-aggregation-commit-indexed` if this is the first commit in the given cycle.\n    * Using `stack-aggregation-increase` if you have already committed in the cycle you want to increase.\n\n\nFailing to commit (or properly increase after a commit) will result in the increased delegation not taking effect in upcoming stacking cycles.\n[PreviousStack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)[NextStop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 3380,
      "title": "Increase Stacked Position | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Stopping Solo Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#stopping-solo-stacking)\n  * [Stopping Pooled Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#stopping-pooled-stacking)\n  * [Step 1: Revoke Delegation](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#step-1-revoke-delegation)\n  * [Step 2: Wait for Funds to Unlock](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#step-2-wait-for-funds-to-unlock)\n  * [Considerations](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#considerations)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n  2. [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n\n\n# Stop Stacking\nWhen you decide it's time to stop stacking your STX tokens, the process depends on whether you are stacking solo or delegating your tokens to a pool operator. This guide explains the steps for both scenarios.\n* * *\n## \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#stopping-solo-stacking)\nStopping Solo Stacking\nWhen stacking solo using the `stack-stx` function, your STX is locked for a fixed period (the lock period) defined when you initiated stacking or when you extended the lock period. **No additional action is required to stop stacking** , you simply have to wait until the lock period expires.\nIn solo stacking, both the `stack-stx` and `stack-extend` functions emits an event that includes the `unlock-burn-height` field. This is the burn block height at which your tokens will be automatically unlocked.\n## \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#stopping-pooled-stacking)\nStopping Pooled Stacking\nIf you're stacking with a pool (where you delegate your STX via the `delegate-stx` function), the process to stop stacking requires one extra step before your STX is eventually unlocked.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#step-1-revoke-delegation)\nStep 1: Revoke Delegation\nBefore your STX can be unlocked, you must cancel the delegation with the pool operator. This is done by calling the `revoke-delegate-stx` function through the pool's interface, or within the [pox-4](https://explorer.hiro.so/txid/SP000000000000000000002Q6VF78.pox-4?chain=mainnet) contract.\n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#function-source-code)\nCopy```\n;; Revokes the delegation to the current stacking pool.\n;; New in pox-4: Fails if the delegation was already revoked.\n;; Returns the last delegation state.\n(define-public (revoke-delegate-stx)\n  (let ((last-delegation-state (get-check-delegation tx-sender)))\n;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    (asserts! (is-some last-delegation-state) (err ERR_DELEGATION_ALREADY_REVOKED))\n    (asserts! (map-delete delegation-state { stacker: tx-sender }) (err ERR_DELEGATION_ALREADY_REVOKED))\n    (ok last-delegation-state)))\n```\n\nCalling `revoke-delegate-stx` cancels your STX delegation, revoking the pool operator's access to further lock/stack your funds. Even after revoking the delegation, your STX will remain locked until the end of the last stacking cycle chosen by the pool (can be at most 12 cycles in the future).\nFailing to revoke your delegation will mean that you continue to allow the pool to stack your STX until the reach of the burn block height mentioned in the delegate function (`delegate-stx`). Ensure that you have successfully called `revoke-delegate-stx` if you want to stop stacking sooner.\n### \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#step-2-wait-for-funds-to-unlock)\nStep 2: Wait for Funds to Unlock\nAfter revoking your delegation, your STX tokens will still remain locked until the last stacking cycle chosen by the pool operator completes. The unlock occurs automatically at the predefined unlock burn height for that cycle.\nEven in pooled stacking, the unlocking mechanism follows the same blockchain timing as solo stacking. Revoking delegation only stops future stacking actions, it does not immediately unlock your tokens.\n## \n[](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking#considerations)\nConsiderations\n  * Monitor Your Stacking Status: Use your wallet's interface or the [Hiro Explorer](https://explorer.hiro.so?chain=mainnet) to track the status of your lock period and confirm when your tokens are available.\n  * Using the API: Hiro's API offers an endpoint to [Get account STX balance](https://docs.hiro.so/stacks/api/accounts/stx-balances), which contains the `burnchain_unlock_height` height, representing the burn block height where your STX unlocks.\n  * Plan Ahead: Since the unlocking is bound to cycle's timing, plan your stacking period or revocation accordingly to minimize delays in accessing your funds.\n\n\n[PreviousIncrease Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)[NextSnapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 1094,
      "title": "Stop Stacking | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Shutdown Procedure](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#shutdown-procedure)\n  * [Overview of Snapshot Methods](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#overview-of-snapshot-methods)\n  * [File-Based Snapshots](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#file-based-snapshots)\n  * [Steps (see Example Automation Code section below)](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#steps-see-example-automation-code-section-below)\n  * [Volume-Based Snapshots](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#volume-based-snapshots)\n  * [Steps](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#steps)\n  * [How to Restore](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#how-to-restore)\n  * [From File Snapshots](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#from-file-snapshots)\n  * [From Volume Snapshots](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#from-volume-snapshots)\n  * [Example Automation Code](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#example-automation-code)\n  * [How to Use](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#how-to-use)\n  * [What You Need](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#what-you-need)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Snapshot the chainstate\n**Intended audience** : Solo Stackers, Stacking pool operators, and node operators who need to create reliable chainstate backups.\nRegular snapshots of your Stacks chainstate help you recover quickly when things go wrong. This guide shows you how to create and manage chainstate snapshots properly.\n**Critical** : Always shut down your Stacks node properly before creating a snapshot. Creating snapshots while the node is running will result in corrupted chainstate data.\n## \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#shutdown-procedure)\nShutdown Procedure\nTo produce a valid chainstate backup, the node should be stopped gracefully before making a copy. The following steps will correctly shutdown the Stacks node:\n  1. **Check node status** before shutdown\nCopy```\n# Verify if the node is responsive\ncurlhttp://localhost:20443/v2/info\n```\n\n  2. **Initiate graceful shutdown**\n     * For Docker: `docker stop stacks-node` (allows at least 10 seconds for graceful shutdown)\n     * For systemd: `systemctl stop stacks-node`\n     * For manual processes: `kill $(ps aux | grep stacks-node | grep -v grep | awk '{print $2}')`\n  3. **Verify complete shutdown**\nCopy```\n# Ensure no stacks-node processes are running\npsaux|grepstacks-node\n```\n\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#overview-of-snapshot-methods)\nOverview of Snapshot Methods\nThere are two primary approaches for creating Stacks chainstate snapshots:\n  1. **File-based snapshots** - compress up the chainstate folder\n  2. **Volume snapshots** - snapshot the entire disk/volume\n\n\nEach method has its advantages depending on your infrastructure setup and recovery requirements.\n## \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#file-based-snapshots)\nFile-Based Snapshots\nThis method involves compressing the chainstate directory and storing it locally, or uploading to a cloud storage service.\n### \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#steps-see-example-automation-code-section-below)\nSteps (see [Example Automation Code section](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#example-automation-code) below)\n  1. **Stop the Stacks node gracefully**\n  2. **Create compressed archive**\n  3. **Upload to cloud storage or save it locally**\n  4. **Restart the Stacks node**\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#volume-based-snapshots)\nVolume-Based Snapshots\nThis method creates block-level snapshots of the entire storage volume containing the chainstate. Different filesystems have different tools:\n  * **ZFS** : Use `zfs snapshot` - [OpenZFS documentation](https://openzfs.github.io/openzfs-docs/man/v2.3/8/zfs-snapshot.8.html)\n  * **XFS** : Use `xfsdump` - [XFS documentation](https://docs.redhat.com/en/documentation/red_hat_enterprise_linux/7/html/storage_administration_guide/xfsbackuprestore)\n  * **ext4** : Use LVM snapshots - [LVM guide](https://kerneltalks.com/disk-management/how-to-guide-lvm-snapshot/)\n\n\nYou can also use cloud provider snapshot tools (AWS EBS, Azure Disk, GCP Persistent Disk).\n### \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#steps)\nSteps\n  1. **Stop the Stacks node gracefully**\n  2. **Create volume snapshot** using ZFS or cloud provider tools\n  3. **Restart the Stacks node**\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#how-to-restore)\nHow to Restore\n_After restoring the chainstate, you can check for corruption by waiting for a few blocks to download and ensuring the node syncs correctly._\n### \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#from-file-snapshots)\nFrom File Snapshots\n  1. Stop the Stacks node\n  2. Download and extract the snapshot\n  3. Replace the chainstate directory\n  4. Restart the node\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#from-volume-snapshots)\nFrom Volume Snapshots\n  1. Stop the Stacks node\n  2. Create a new volume from the snapshot\n  3. Attach the volume to your instance\n  4. Update mount points if necessary\n  5. Restart the node\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#example-automation-code)\nExample Automation Code\nHere's a simple script that handles both file and volume snapshots on AWS.\nCopy```\n#!/bin/bash\nset -euo pipefail\n# Configuration variables - modify these for your setup\nSERVICE_NAME=\"stacks-node\"                   # systemd service name\nSNAPSHOT_DIR=\"/var/stacks/mainnet\"           # path to chainstate directory\nSNAPSHOT_BASE=\"/tmp\"                         # temporary directory for archives\nEBS_VOLUME_ID=\"vol-1234567890abcdef0\"        # EBS volume ID containing chainstate\nS3_BUCKET=\"s3://my-stacks-snapshots\"         # S3 bucket for archive storage\nSNAPSHOT_TYPE=\"archive\"                      # Options: ebs, archive, or both\n# Stop the Stacks node service gracefully\nstop_service() {\n  echo \"Stopping $SERVICE_NAME...\"\n  sudo systemctl stop \"$SERVICE_NAME\"\n}\n# Start the Stacks node service\nstart_service() {\n  echo \"Starting $SERVICE_NAME...\"\n  sudo systemctl start \"$SERVICE_NAME\"\n}\n# Create compressed archive and upload to S3\nsnapshot_archive() {\n  echo \"Creating archive snapshot...\"\n  \n  # Generate timestamp and version info for filename\n  TIMESTAMP=$(date +\"%Y%m%d\")\n  DIR_NAME=$(basename \"$SNAPSHOT_DIR\")\n  VERSION=$(stacks-node version 2>&1 | tail -n 1 | awk '{print $2}')\n  DEST=\"$SNAPSHOT_BASE/$DIR_NAME-$VERSION-$TIMESTAMP.tar.zst\"\n  \n  # Create compressed archive (using zstd for better compression)\n  tar -cf - -C \"$(dirname $SNAPSHOT_DIR)\" \"$(basename $SNAPSHOT_DIR)\" | pzstd -o \"$DEST\"\n  echo \"Archive created at: $DEST\"\n  # Upload to S3\n  echo \"Uploading to S3...\"\n  aws s3 cp \"$DEST\" \"$S3_BUCKET/\"\n  echo \"S3 upload complete: $S3_BUCKET/$(basename \"$DEST\")\"\n  \n  # Clean up local archive\n  rm \"$DEST\"\n}\n# Create EBS volume snapshot\nsnapshot_ebs() {\n  echo \"Creating EBS snapshot of $EBS_VOLUME_ID...\"\n  \n  # Generate description with timestamp\n  TIMESTAMP=$(date +\"%Y%m%d\")\n  DESC=\"Stacks Node Snapshot - $TIMESTAMP\"\n  \n  # Create snapshot with tags\n  SNAPSHOT_ID=$(aws ec2 create-snapshot \\\n                  --volume-id \"$EBS_VOLUME_ID\" \\\n                  --description \"$DESC\" \\\n                  --tag-specifications \"ResourceType=snapshot,Tags=[{Key=Name,Value=Stacks Snapshot},{Key=type,Value=chainstate}]\" \\\n                  --query 'SnapshotId' --output text)\n  echo \"EBS Snapshot ID: $SNAPSHOT_ID\"\n}\n# Main execution function\nmain() {\n  case \"$SNAPSHOT_TYPE\" in\n    ebs)\n      stop_service\n      snapshot_ebs\n      start_service\n      ;;\n    archive)\n      stop_service\n      snapshot_archive\n      start_service\n      ;;\n    both)\n      stop_service\n      snapshot_archive  # Create archive first\n      snapshot_ebs      # Then EBS snapshot\n      start_service\n      ;;\n    *)\n      echo \"Invalid snapshot type: $SNAPSHOT_TYPE. Available options: ebs, archive, or both.\"\n      exit 1\n      ;;\n  esac\n  \n  echo \"Snapshot process completed successfully!\"\n}\n# Execute main function\nmain\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#how-to-use)\nHow to Use\n  1. **Edit the variables** at the top of the script for your setup\n  2. **Make it executable** : `chmod +x snapshot.sh`\n  3. **Run it** : `./snapshot.sh`\n  4. **Schedule it with cron** for daily backups:\nCopy```\n# Daily snapshot at 2 AM\n0 2 * * * /path/to/snapshot.sh\n```\n\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate#what-you-need)\nWhat You Need\n  * AWS CLI set up with the right permissions\n  * `pzstd` installed (comes with the zstd package)\n\n\n[PreviousStop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)[NextOracles](https://docs.stacks.co/guides-and-tutorials/oracles)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 1430,
      "title": "Snapshot the chainstate | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/oracles",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Price‚ÄëFeed Oracles on Stacks](https://docs.stacks.co/guides-and-tutorials/oracles#price-feed-oracles-on-stacks)\n  * [Why you need a price‚Äëfeed oracle](https://docs.stacks.co/guides-and-tutorials/oracles#why-you-need-a-price-feed-oracle)\n  * [Oracle Providers](https://docs.stacks.co/guides-and-tutorials/oracles#oracle-providers)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Oracles\n## \n[](https://docs.stacks.co/guides-and-tutorials/oracles#price-feed-oracles-on-stacks)\nPrice‚ÄëFeed Oracles on Stacks\nSmart contracts written in **Clarity** run in a deterministic sandbox: they can read data in the Stacks and Bitcoin chainstate, but _nothing else_. Whenever your dApp needs the latest **BTC/USD** , **STX/BTC** , or any other market price, you‚Äôll rely on an **oracle** to bring that data on‚Äëchain in a verifiable way.\nThis page lays out _why_ price‚Äëfeed oracles matter on Stacks and link to the specific oracle provider docs for instructions on how to integrate them.\n* * *\n### \n[](https://docs.stacks.co/guides-and-tutorials/oracles#why-you-need-a-price-feed-oracle)\nWhy you need a price‚Äëfeed oracle\nHere are some possible scenarios where you might need an oracle.\nOn‚Äëchain need\nTypical Stacks use case\nWhat the oracle supplies\n**Liquidations & collateral ratios**\nLending / borrowing protocols, margin trading\nSigned price updated every N blocks\n**Stablecoin peg maintenance**\nBTC‚Äëbacked or exogenous‚Äëcollateral stablecoins\nReference BTC/USD (or other) price\n**AMM curve calculations**\nDEXs that tune fees or rebalance pools\nTime‚Äëweighted average price (TWAP)\n**Derivatives settlement**\nOptions, futures, or perpetual swaps\nFinal settlement price at expiry\n> **Rule of thumb:** if your contract‚Äôs math depends on a real‚Äëtime market price, you need a price‚Äëfeed oracle.\n### \n[](https://docs.stacks.co/guides-and-tutorials/oracles#oracle-providers)\nOracle Providers\nThere are two oracle providers that Stacks builders are currently using for their data needs: Pyth and DIA.\nPyth is a pull-based oracle and Trust Machines currently maintains the Pyth bridge. You can view docs on how to use Pyth and the associated Clarity contracts on Trust Machine's [GitHub repo for the bridge.](https://github.com/Trust-Machines/stacks-pyth-bridge)\nDIA is the other oracle provider Stacks builders frequently use.\nThere is a documentation guide on how to use DIA oracles with Stacks on [DIA's docs website](https://nexus.diadata.org/how-to-guides/fetch-price-data/chain-specific-guide/stacks).\n[PreviousSnapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)[NextCommunity Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\nLast updated 5 months ago\nWas this helpful?\n",
      "wordCount": 838,
      "title": "Oracles | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials/community-tutorials",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Written Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials#written-tutorials)\n  * [Video Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials#video-tutorials)\n  * [Other Resources](https://docs.stacks.co/guides-and-tutorials/community-tutorials#other-resources)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Community Tutorials\nThese tutorials have been created by various members of the Stacks community. Have a tutorial to suggest? View the [contribution guide](http://localhost:3000/docs/contribute/docs) to submit a PR with a new tutorial added.\n### \n[](https://docs.stacks.co/guides-and-tutorials/community-tutorials#written-tutorials)\nWritten Tutorials\n  * [Create a server-side rendered Stacks app with Remix](https://micro-stacks.dev/guides/with-remix)\n  * [Build a Stacks app with Next.js](https://micro-stacks.dev/guides/with-nextjs)\n  * [Creating a Voting Contract](https://www.clearness.dev/01-voting-clarity-smart-contract/01-getting-started)\n  * [Building an NFT with Stacks and Clarity](https://blog.developerdao.com/building-an-nft-with-stacks-and-clarity)\n  * [Minting NFTs with QuickNode](https://www.quicknode.com/guides/web3-sdks/how-to-mint-nfts-on-the-stacks-blockchain)\n  * [Order Book Contract Walkthrough](https://byzantion.hiro.so/)\n  * [Build a DEX on Stacks](https://www.pointer.gg/tutorials/build-a-dex-with-stacks/56abb3a4-05c1-4608-b096-f82189e9f759)\n  * [NFT Tutorial](https://docs.hiro.so/tutorials/clarity-nft)\n  * [Billboard Tutorial](https://docs.hiro.so/tutorials/clarity-billboard)\n  * [Integrating NFTs Into a Game](https://gamefi-stacks.gitbook.io/gamefistacks/tutorials/integrate-nfts-into-game)\n  * [Building on Stacks](https://github.com/amoweolubusayo/stacks-clarinet-tutorial)\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/community-tutorials#video-tutorials)\nVideo Tutorials\n  * [Web3 for Bitcoin](https://www.crowdcast.io/e/web3-for-bitcoin/)\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/community-tutorials#other-resources)\nOther Resources\nThere are also a great amount of both tutorials and developer tools in the [Awesome Stacks repo](https://github.com/friedger/awesome-stacks-chain#clarity-resources).\n[PreviousOracles](https://docs.stacks.co/guides-and-tutorials/oracles)[NextAPI](https://docs.stacks.co/reference/api)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 682,
      "title": "Community Tutorials | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/api",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/reference/api#introduction)\n  * [Stacks Node RPC API endpoints](https://docs.stacks.co/reference/api#stacks-node-rpc-api-endpoints)\n  * [GETGet contract interface](https://docs.stacks.co/reference/api#get-v2-contracts-interface-contract_address-contract_name)\n  * [POSTBroadcast raw transaction](https://docs.stacks.co/reference/api#post-v2-transactions)\n  * [POSTGet specific data-map inside a contract](https://docs.stacks.co/reference/api#post-v2-map_entry-contract_address-contract_name-map_name)\n  * [POSTUpload a Nakamoto block](https://docs.stacks.co/reference/api#post-v3-blocks-upload)\n  * [POSTQuery mempool for missing transactions](https://docs.stacks.co/reference/api#post-v2-mempool-query)\n  * [POSTUpload a Stacks block](https://docs.stacks.co/reference/api#post-v2-blocks-upload-consensus_hash)\n  * [GETGet unconfirmed transaction](https://docs.stacks.co/reference/api#get-v2-transactions-unconfirmed-txid)\n  * [GETGet tenure tip](https://docs.stacks.co/reference/api#get-v3-tenures-tip-consensus_hash)\n  * [GETGet tenure fork information](https://docs.stacks.co/reference/api#get-v3-tenures-fork_info-start-stop)\n  * [GETGet neighbor peers](https://docs.stacks.co/reference/api#get-v2-neighbors)\n  * [GETGet Stacks 2.x block by ID](https://docs.stacks.co/reference/api#get-v2-blocks-block_id)\n  * [GETGet recent 2.x block headers](https://docs.stacks.co/reference/api#get-v2-headers-quantity)\n  * [GETGet contract data variable](https://docs.stacks.co/reference/api#get-v2-data_var-principal-contract_name-var_name)\n  * [GETList StackerDB replicas](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-replicas)\n  * [POSTWrite StackerDB chunk](https://docs.stacks.co/reference/api#post-v2-stackerdb-principal-contract_name-chunks)\n  * [GETGet StackerDB metadata](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name)\n  * [GETGet StackerDB chunk (specific version)](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id-slot_version)\n  * [GETGet StackerDB chunk (latest version)](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id)\n  * [POSTSubmit a microblock (Epoch 2.x)](https://docs.stacks.co/reference/api#post-v2-microblocks)\n  * [GETGet stream of unconfirmed microblocks (Epoch 2.x)](https://docs.stacks.co/reference/api#get-v2-microblocks-unconfirmed-block_id-seq)\n  * [GETGet a stream of microblocks beginning with the given microblock (Epoch 2.x). ](https://docs.stacks.co/reference/api#get-v2-microblocks-microblock_id)\n  * [GETGet stream of confirmed microblocks (Epoch 2.x)](https://docs.stacks.co/reference/api#get-v2-microblocks-confirmed-block_id)\n  * [GETGet attachment inventory](https://docs.stacks.co/reference/api#get-v2-attachments-inv)\n  * [GETGet attachment by hash](https://docs.stacks.co/reference/api#get-v2-attachments-hash)\n  * [GETQuery the health of the node.](https://docs.stacks.co/reference/api#get-v3-health)\n  * [GETRetrieve transaction details by TXID](https://docs.stacks.co/reference/api#get-v3-transaction-txid)\n  * [GETGet number of blocks signed by signer during a given reward cycle](https://docs.stacks.co/reference/api#get-v3-signer-signer_pubkey-cycle_number)\n  * [GETGet sortition by burn block height](https://docs.stacks.co/reference/api#get-v3-sortitions-burn_height-height)\n  * [GETGet sortition by burn header hash](https://docs.stacks.co/reference/api#get-v3-sortitions-burn-burn_header_hash)\n  * [GETGet sortition by consensus hash](https://docs.stacks.co/reference/api#get-v3-sortitions-consensus-consensus_hash)\n  * [GETGet latest and last winning sortitions](https://docs.stacks.co/reference/api#get-v3-sortitions-latest_and_last)\n  * [GETGet latest sortition information](https://docs.stacks.co/reference/api#get-v3-sortitions)\n  * [GETFetch a sequence of Nakamoto blocks in a tenure](https://docs.stacks.co/reference/api#get-v3-tenures-block_id)\n  * [GETFetch metadata about the ongoing Nakamoto tenure](https://docs.stacks.co/reference/api#get-v3-tenures-info)\n  * [GETFetch a Nakamoto block by its height and optional tip](https://docs.stacks.co/reference/api#get-v3-blocks-height-block_height)\n  * [GETGet Nakamoto block by ID](https://docs.stacks.co/reference/api#get-v3-blocks-block_id)\n  * [GETFetch the stacker and signer set information for a given cycle.](https://docs.stacks.co/reference/api#get-v3-stacker_set-cycle_number)\n  * [POSTValidate a proposed Stacks block](https://docs.stacks.co/reference/api#post-v3-block_proposal)\n  * [GETGet the value of a constant inside a contract](https://docs.stacks.co/reference/api#get-v2-constant_val-contract_address-contract_name-constant_name)\n  * [GETGet the contract metadata for the metadata key](https://docs.stacks.co/reference/api#get-v2-clarity-metadata-contract_address-contract_name-clarity_metadata_key)\n  * [GETGet the MARF value for a given key](https://docs.stacks.co/reference/api#get-v2-clarity-marf-marf_key_hash)\n  * [GETGet trait implementation details](https://docs.stacks.co/reference/api#get-v2-traits-contract_address-contract_name-trait_contract_address-trait_contract_name-trait_name)\n  * [GETGet PoX details](https://docs.stacks.co/reference/api#get-v2-pox)\n  * [GETGet Core API info](https://docs.stacks.co/reference/api#get-v2-info)\n  * [GETGet estimated fee](https://docs.stacks.co/reference/api#get-v2-fees-transfer)\n  * [POSTGet approximate fees for the given transaction](https://docs.stacks.co/reference/api#post-v2-fees-transaction)\n  * [GETGet account info](https://docs.stacks.co/reference/api#get-v2-accounts-principal)\n  * [POSTCall read-only function in fast mode (no cost and memory tracking)](https://docs.stacks.co/reference/api#post-v3-contracts-fast-call-read-contract_address-contract_name-function_name)\n  * [POSTCall read-only function](https://docs.stacks.co/reference/api#post-v2-contracts-call-read-contract_address-contract_name-function_name)\n  * [GETGet contract source](https://docs.stacks.co/reference/api#get-v2-contracts-source-contract_address-contract_name)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# API\n### \n[](https://docs.stacks.co/reference/api#introduction)\nIntroduction\nThe Stacks Blockchain API allows you to query the Stacks blockchain and interact with smart contracts. It was built to maintain pageable materialized views of the Stacks Blockchain.\nNote that the [Stacks Node RPC API](https://github.com/stacks-network/stacks-blockchain/) and the [Hiro Stacks API](https://www.hiro.so/stacks-api) are two different things. The Hiro API is a centralized service run by Hiro, a developer tooling company, that makes it easy to get onboarded and begin interacting with the Stacks blockchain in a RESTful way. You can also [run your own API server](https://docs.hiro.so/get-started/running-api-node).\nThe Hiro Stacks API is a proxy for the Stacks Node API that makes it a bit easier to work with by providing additional functionality.\nThe RPC API is generated by every Stacks node and allows developers to self-host their own node and API for a more decentralized architecture.\nThe RPC API can be used without any authorization. The basepath for the API is:\nCopy```\n# for mainnet, replace `testnet` with `mainnet`\nhttps://api.testnet.hiro.so/\n```\n\nIf you run a local node, it exposes an HTTP server on port `20443`. The info endpoint would be `localhost:20443/v2/info`.\n### \n[](https://docs.stacks.co/reference/api#stacks-node-rpc-api-endpoints)\nStacks Node RPC API endpoints\nThe Stacks 2.0 Blockchain API (Hiro's API) is centrally hosted. However, every running Stacks node exposes an RPC API, which allows you to interact with the underlying blockchain. Instead of using a centrally hosted API, you can directly access the RPC API of a locally hosted Node.\n### \n[](https://docs.stacks.co/reference/api#get-v2-contracts-interface-contract_address-contract_name)\nGet contract interface\nget\nhttp://localhost:20443/v2/contracts/interface/{contract_address}/{contract_name}\nGet contract interface using a `contract_address` and `contract name`\nResponses\n200\nContract interface\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/contracts/interface/{contract_address}/{contract_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/contracts/interface/{contract_address}/{contract_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nContract interface\nCopy```\n{\n  \"$ref\": \"./components/examples/contract-interface.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-transactions)\nBroadcast raw transaction\npost\nhttp://localhost:20443/v2/transactions\nBroadcast raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\nThe node performs static validation checks on transactions before accepting them into the mempool, including:\n  * Transaction format validation\n  * Signature verification\n  * Nonce checking\n  * Fee validation\n  * Size limits\n\n\nBody\napplication/octet-stream\napplication/octet-stream application/json\nstring ¬∑ binaryOptional\nResponses\n200\nTransaction ID of successful post of a raw tx to the node's mempool.\napplication/json\nResponsestringExample: `e161978626f216b2141b156ade10501207ae535fa365a13ef5d7a7c9310a09f2`Pattern: `^[0-9a-f]{64}$`\n400\nBad request\napplication/json\n500\nInternal Server Error\ntext/plain\npost\n/v2/transactions\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/transactions HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 379\n\"binary format of 00000000010400bed38c2aadffa348931bcb542880ff79d607afec000000000000000000000000000000c800012b0b1fff6cccd0974966dcd665835838f0985be508e1322e09fb3d751eca132c492bda720f9ef1768d14fdabed6127560ba52d5e3ac470dcb60b784e97dc88c9030200000000000516df0ba3e79792be7be5e50a370289accfc8c9e032000000000000303974657374206d656d6f00000000000000000000000000000000000000000000000000\"\n```\n\napplication/octet-stream\napplication/octet-stream application/json\nTest it\n200\nTransaction ID of successful post of a raw tx to the node's mempool.\nCopy```\ne161978626f216b2141b156ade10501207ae535fa365a13ef5d7a7c9310a09f2\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-map_entry-contract_address-contract_name-map_name)\nGet specific data-map inside a contract\npost\nhttp://localhost:20443/v2/map_entry/{contract_address}/{contract_name}/{map_name}\nAttempt to fetch data from a contract data map. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The map is identified with [Map Name].\nThe key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string.\nThe response is a JSON object with the following properties:\n  * `data`: The hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object.\n  * `proof`: The hex serialization of the Merkle proof for the data.\n\n\nPath parameters\nmap_nameanyRequired\nBody\napplication/json\napplication/json\nstringOptional\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/map_entry/{contract_address}/{contract_name}/{map_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/map_entry/{contract_address}/{contract_name}/{map_name} HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\nContent-Length: 6\n\"text\"\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v3-blocks-upload)\nUpload a Nakamoto block\npost\nhttp://localhost:20443/v3/blocks/upload\nUpload a Nakamoto block to the node for processing.\n  * **Body** - must be the binary (SIP-003) serialization of a `NakamotoBlock`.\n  * **Authentication** - only required when the query parameter `broadcast=1` is supplied. In that case the caller **must** include an `Authorization` header.\n\n\nrpcAuth\nrpcAuth\nQuery parameters\nbroadcaststring ¬∑ enumOptional\nIf set to `\"1\"` the node will broadcast the uploaded block to peers. When present the request must include a valid `Authorization` header.\nPossible values: `1`\nBody\napplication/octet-stream\napplication/octet-stream\nstring ¬∑ binaryOptional\nBinary SIP-003 encoding of a `NakamotoBlock`\nResponses\n200\nBlock upload result.\napplication/json\nResponseanyExample: `{\"stacks_block_id\":\"abc123...\",\"accepted\":true}`\n400\nBad request\ntext/plain\n401\nUnauthorized. Invalid or missing authentication token.\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v3/blocks/upload\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v3/blocks/upload HTTP/1.1\nHost: localhost:20443\nauthorization: YOUR_API_KEY\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 8\n\"binary\"\n```\n\nTest it\n200\nBlock upload result.\nCopy```\n{\n  \"stacks_block_id\": \"abc123...\",\n  \"accepted\": true\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-mempool-query)\nQuery mempool for missing transactions\npost\nhttp://localhost:20443/v2/mempool/query\nQuery the mempool for transactions that might be missing from the requesting node. This endpoint supports pagination and streaming of transaction data.\nQuery parameters\npage_idstringOptional\nTransaction ID to start pagination from\nPattern: `^[0-9a-f]{64}$`\nBody\napplication/octet-stream\napplication/octet-stream\nBinary SIP-003 encoding of `MemPoolSyncData` (`BloomFilter` or `TxTags` variants).\ntransactionsstring[]Optional\nTransaction IDs\nResponses\n200\nStream of missing transactions\napplication/octet-stream\nResponsestring ¬∑ binary\nBinary stream of transactions and pagination data. The stream contains serialized transactions followed by a page ID for continuation.\n400\nBad request\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/mempool/query\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/mempool/query HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 25\n{\n  \"transactions\": [\n    \"text\"\n  ]\n}\n```\n\nTest it\n200\nStream of missing transactions\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-blocks-upload-consensus_hash)\nUpload a Stacks block\npost\nhttp://localhost:20443/v2/blocks/upload/{consensus_hash}\nUpload a Stacks block to the node for processing. The block must be in binary format and associated with the given consensus hash.\nPath parameters\nconsensus_hashstringRequired\nConsensus hash (40 hex characters)\nPattern: `^[0-9a-f]{40}$`\nBody\napplication/octet-stream\napplication/octet-stream\nstring ¬∑ binaryOptional\nBinary-encoded Stacks block\nResponses\n200\nBlock upload result\napplication/json\nResponseanyExample: `{\"stacks_block_id\":\"abc123...\",\"accepted\":true}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/blocks/upload/{consensus_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/blocks/upload/{consensus_hash} HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 8\n\"binary\"\n```\n\nTest it\n200\nBlock upload result\nCopy```\n{\n  \"stacks_block_id\": \"abc123...\",\n  \"accepted\": true\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-transactions-unconfirmed-txid)\nGet unconfirmed transaction\nget\nhttp://localhost:20443/v2/transactions/unconfirmed/{txid}\nGet an unconfirmed transaction by its transaction ID. This looks in both the mempool and unconfirmed microblock stream.\nPath parameters\ntxidstringRequired\nTransaction ID (64 hexadecimal characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nUnconfirmed transaction details\napplication/json\nResponseanyExample: `{\"tx\":\"800000000004...\",\"status\":\"Mempool\"}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/transactions/unconfirmed/{txid}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/transactions/unconfirmed/{txid} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nUnconfirmed transaction details\nCopy```\n{\n  \"tx\": \"800000000004...\",\n  \"status\": \"Mempool\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-tip-consensus_hash)\nGet tenure tip\nget\nhttp://localhost:20443/v3/tenures/tip/{consensus_hash}\nGet the tip block of a tenure identified by consensus hash.\nPath parameters\nconsensus_hashstringRequired\nConsensus hash (40 characters)\nPattern: `^[0-9a-f]{40}$`\nResponses\n200\nTenure tip block information\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/tenures/tip/{consensus_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/tip/{consensus_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nTenure tip block information\nCopy```\n{\n  \"$ref\": \"./components/examples/get-tenure-tip.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-fork_info-start-stop)\nGet tenure fork information\nget\nhttp://localhost:20443/v3/tenures/fork_info/{start}/{stop}\nGet information about tenure forking between two consensus hashes. This is used to identify conflicting tenures in the Nakamoto consensus.\nPath parameters\nstartstringRequired\nStarting consensus hash (40 hexadecimal characters, without 0x prefix)\nPattern: `^[0-9a-f]{40}$`\nstopstringRequired\nStopping consensus hash (40 hexadecimal characters, without 0x prefix)\nPattern: `^[0-9a-f]{40}$`\nResponses\n200\nOrdered list of tenure fork events from `stop` back to (and including) `start`\napplication/json\nResponseany[]\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/tenures/fork_info/{start}/{stop}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/fork_info/{start}/{stop} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nOrdered list of tenure fork events from `stop` back to (and including) `start`\nCopy```\n[]\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-neighbors)\nGet neighbor peers\nget\nhttp://localhost:20443/v2/neighbors\nGet information about the node\"s neighbor peers in the network.\nResponses\n200\nList of neighbor peers\napplication/json\nResponseany\nget\n/v2/neighbors\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/neighbors HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nList of neighbor peers\nCopy```\n{\n  \"$ref\": \"./components/examples/network-peers.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-blocks-block_id)\nGet Stacks 2.x block by ID\nget\nhttp://localhost:20443/v2/blocks/{block_id}\nGet a specific Stacks 2.x era block by its block ID. This endpoint streams the block data from the filesystem storage where traditional Stacks blocks are stored as individual files.\n**Compatibility** : Works with all Stacks 2.x blocks. For Nakamoto blocks (Stacks 3.x+), use `/v3/blocks/{block_id}`.\nPath parameters\nblock_idstringRequired\nHex-encoded block ID (64 characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nThe block data\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/blocks/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/blocks/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe block data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-headers-quantity)\nGet recent 2.x block headers\nget\nhttp://localhost:20443/v2/headers/{quantity}\n**Deprecated** : This endpoint is deprecated since Nakamoto.** Stream (as a JSON array) up to `quantity` most recent anchored Stacks block headers. The result is ordered from the current tip backwards.\nPath parameters\nquantityinteger ¬∑ min: 1 ¬∑ max: 256Required\nNumber of headers to return (max 256)\nResponses\n200\nArray of block headers\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/headers/{quantity}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/headers/{quantity} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nArray of block headers\n```\n\nNo content\n\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-data_var-principal-contract_name-var_name)\nGet contract data variable\nget\nhttp://localhost:20443/v2/data_var/{principal}/{contract_name}/{var_name}\nFetch a data variable from a smart contract. Returns the raw hex-encoded value of the variable.\nPath parameters\nvar_namestringRequired\nVariable name\nResponses\n200\nThe data variable value\napplication/json\nResponseanyExample: `{\"$ref\":\"./components/examples/clarity-data.example.json\"}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/data_var/{principal}/{contract_name}/{var_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/data_var/{principal}/{contract_name}/{var_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe data variable value\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-replicas)\nList StackerDB replicas\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/replicas\nGet a list of replicas for a StackerDB instance.\nResponses\n200\nList of StackerDB replicas\napplication/json\nResponseanyExample: `[{\"ip\":\"127.0.0.1\",\"port\":20444,\"public_key_hash\":\"03abc123...\"}]`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}/replicas\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name}/replicas HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nList of StackerDB replicas\nCopy```\n[\n  {\n    \"ip\": \"127.0.0.1\",\n    \"port\": 20444,\n    \"public_key_hash\": \"03abc123...\"\n  }\n]\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-stackerdb-principal-contract_name-chunks)\nWrite StackerDB chunk\npost\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/chunks\nWrite a chunk of data to a StackerDB instance.\nThe request body should contain a JSON object with the chunk data including slot_id, slot_version, signature, and hex-encoded data.\nThe response indicates whether the chunk was accepted, and if not, provides detailed error information. Note that failed writes return HTTP 200 with accepted: false, not HTTP error codes.\nBody\napplication/json\napplication/json\nanyOptional\nResponses\n200\nChunk submission result (both success and failure cases)\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/stackerdb/{principal}/{contract_name}/chunks\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/stackerdb/{principal}/{contract_name}/chunks HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\nContent-Length: 74\n{\n  \"$ref\": \"./components/examples/stackerdb-chunk-data-request.example.json\"\n}\n```\n\nTest it\n200\nChunk submission result (both success and failure cases)\n```\n\nNo content\n\n```\n\nSuccessful chunk write\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name)\nGet StackerDB metadata\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}\nGet metadata about a StackerDB instance, including slot information.\nResponses\n200\nStackerDB metadata\napplication/json\nResponseanyExample: `[{\"slot_id\":0,\"slot_version\":1,\"data_hash\":\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\"signature\":\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\"}]`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStackerDB metadata\nCopy```\n[\n  {\n    \"slot_id\": 0,\n    \"slot_version\": 1,\n    \"data_hash\": \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\n    \"signature\": \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\"\n  }\n]\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id-slot_version)\nGet StackerDB chunk (specific version)\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/{slot_id}/{slot_version}\nGet a specific version of a chunk of data from a StackerDB instance.\nPath parameters\nslot_idintegerRequired\nSlot ID\nslot_versionintegerRequired\nSpecific slot version\nResponses\n200\nStackerDB chunk data\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}/{slot_id}/{slot_version}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name}/{slot_id}/{slot_version} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStackerDB chunk data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id)\nGet StackerDB chunk (latest version)\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/{slot_id}\nGet the latest version of a chunk of data from a StackerDB instance.\nPath parameters\nslot_idintegerRequired\nSlot ID\nResponses\n200\nStackerDB chunk data\napplication/octet-stream\nResponsestring ¬∑ binary\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}/{slot_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name}/{slot_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStackerDB chunk data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-microblocks)\nSubmit a microblock (Epoch 2.x)\npost\nhttp://localhost:20443/v2/microblocks\nSubmit a microblock to the node for validation and relay. The body **must** be the SIP-003 binary serialization of a `Microblock` and sent with `Content-Type: application/octet-stream`.\nBody\napplication/octet-stream\napplication/octet-stream\nstring ¬∑ binaryOptional\nResponses\n200\nIndex-block hash of the accepted microblock\napplication/json\nResponsestring\n32-byte block-header hash (hex)\nPattern: `^[0-9a-f]{64}$`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/microblocks\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/microblocks HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 8\n\"binary\"\n```\n\nTest it\n200\nIndex-block hash of the accepted microblock\nCopy```\n3e4f5d6b7c8a9e0ff1122303445566778899aabbccddeeff0011223344556677\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-microblocks-unconfirmed-block_id-seq)\nGet stream of unconfirmed microblocks (Epoch 2.x)\nget\nhttp://localhost:20443/v2/microblocks/unconfirmed/{block_id}/{seq}\nGet unconfirmed microblocks starting from a specific sequence number. The microblocks are returned as a binary stream.\nPath parameters\nblock_idstringRequired\nHex-encoded parent block ID (64 characters)\nPattern: `^[0-9a-f]{64}$`\nseqinteger ¬∑ max: 65535Required\nStarting sequence number (0-65535)\nResponses\n200\nStream of unconfirmed microblocks\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/microblocks/unconfirmed/{block_id}/{seq}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/microblocks/unconfirmed/{block_id}/{seq} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStream of unconfirmed microblocks\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-microblocks-microblock_id)\nGet a stream of microblocks beginning with the given microblock (Epoch 2.x). \nget\nhttp://localhost:20443/v2/microblocks/{microblock_id}\nPath parameters\nmicroblock_idstringRequired\nHex-encoded microblock hash (64 characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nThe microblock data\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/microblocks/{microblock_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/microblocks/{microblock_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe microblock data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-microblocks-confirmed-block_id)\nGet stream of confirmed microblocks (Epoch 2.x)\nget\nhttp://localhost:20443/v2/microblocks/confirmed/{block_id}\nGet microblocks that were confirmed by the given anchored block. The microblocks are returned as a binary stream of concatenated microblock data.\nPath parameters\nblock_idstringRequired\nHex-encoded Stacks block ID (64 characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nStream of confirmed microblocks\napplication/octet-stream\nResponsestring ¬∑ binary\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/microblocks/confirmed/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/microblocks/confirmed/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStream of confirmed microblocks\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-attachments-inv)\nGet attachment inventory\nget\nhttp://localhost:20443/v2/attachments/inv\nGet inventory of attachments for a given index block hash and page range. This returns a bitfield indicating which attachments are available.\nQuery parameters\nindex_block_hashstringRequired\nHex-encoded index block hash (64 characters)\nPattern: `^[0-9a-f]{64}$`\npages_indexesstringRequired\nmax 8 pages per request\nExample: `1,2,3`Pattern: `^[0-9]+(,[0-9]+){0,7}$`\nResponses\n200\nAttachment inventory bitfield\napplication/json\nResponseanyExample: `{\"block_id\":\"0123456789abcdef0123456789abcdef0123456789abcdef\",\"pages\":[{\"index\":1,\"inventory\":[255,0,255,0]},{\"index\":2,\"inventory\":[0,255,0,255]}]}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/attachments/inv\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/attachments/inv?index_block_hash=text&pages_indexes=1%2C2%2C3 HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nAttachment inventory bitfield\nCopy```\n{\n  \"block_id\": \"0123456789abcdef0123456789abcdef0123456789abcdef\",\n  \"pages\": [\n    {\n      \"index\": 1,\n      \"inventory\": [\n        255,\n        0,\n        255,\n        0\n      ]\n    },\n    {\n      \"index\": 2,\n      \"inventory\": [\n        0,\n        255,\n        0,\n        255\n      ]\n    }\n  ]\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-attachments-hash)\nGet attachment by hash\nget\nhttp://localhost:20443/v2/attachments/{hash}\nGet an attachment by its hash. Attachments are content stored in the Atlas network.\nThe attachment hash is a 40-character hex string (SHA-1 hash).\nPath parameters\nhashstringRequired\nHex-encoded SHA-1 hash of the attachment (40 characters)\nPattern: `^[0-9a-f]{40}$`\nResponses\n200\nThe attachment content\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/attachments/{hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/attachments/{hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe attachment content\n```\n\nNo content\n\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-health)\nQuery the health of the node.\nget\nhttp://localhost:20443/v3/health\nGet node health information. A node is considered healthy if its Stacks tip height matches the maximum Stacks tip height observed among its connected peers. This endpoint returns:\n  * `difference_from_max_peer`: The difference in Stacks height between this node and its most advanced peer.\n  * `max_stacks_height_of_neighbors`: The maximum Stacks height observed among the node\"s connected peers.\n  * `node_stacks_tip_height`: The current Stacks tip height of this node.\n  * `max_stacks_neighbor_address`: The address of the most advanced peer. Null if no peer data is available.\n\n\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/health\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/health HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/node-health.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-transaction-txid)\nRetrieve transaction details by TXID\nget\nhttp://localhost:20443/v3/transaction/{txid}\nGet a JSON with the transaction details including the `index_block_hash`, the hex-encoded transaction body, and the `result`.\nPath parameters\ntxidstringRequired\nTransaction ID (64 hexadecimal characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nTransaction JSON with index_block_hash, transaction body and result\napplication/json\nResponseany\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\n501\nTransaction indexing not enabled\ntext/plain\nget\n/v3/transaction/{txid}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/transaction/{txid} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nTransaction JSON with index_block_hash, transaction body and result\nCopy```\n{\n  \"$ref\": \"./components/examples/get-transaction.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-signer-signer_pubkey-cycle_number)\nGet number of blocks signed by signer during a given reward cycle\nget\nhttp://localhost:20443/v3/signer/{signer_pubkey}/{cycle_number}\nGet number of blocks signed by signer during a given reward cycle\nPath parameters\nsigner_pubkeystringRequired\nHex-encoded compressed Secp256k1 public key of signer\nPattern: `^0[23][0-9a-f]{64}$`\ncycle_numberintegerRequired\nReward cycle number\nResponses\n200\nNumber of blocks signed\napplication/json\nResponseany\nget\n/v3/signer/{signer_pubkey}/{cycle_number}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/signer/{signer_pubkey}/{cycle_number} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nNumber of blocks signed\nCopy```\n{\n  \"blocks_signed\": 7\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-burn_height-height)\nGet sortition by burn block height\nget\nhttp://localhost:20443/v3/sortitions/burn_height/{height}\nGet sortition information for a specific burn block height. Returns a single-element array with the matching sortition.\nPath parameters\nheightintegerRequired\nBurn block height (integer)\nResponses\n200\nSortition information for the burn block height\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/burn_height/{height}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/burn_height/{height} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSortition information for the burn block height\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-burn-burn_header_hash)\nGet sortition by burn header hash\nget\nhttp://localhost:20443/v3/sortitions/burn/{burn_header_hash}\nGet sortition information for a specific burn header hash. Returns a single-element array with the matching sortition.\nPath parameters\nburn_header_hashstringRequired\nHex-encoded burn header hash (64 characters)\nPattern: `^(0x)?[0-9a-f]{64}$`\nResponses\n200\nSortition information for the burn header hash\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/burn/{burn_header_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/burn/{burn_header_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSortition information for the burn header hash\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-consensus-consensus_hash)\nGet sortition by consensus hash\nget\nhttp://localhost:20443/v3/sortitions/consensus/{consensus_hash}\nGet sortition information for a specific consensus hash. Returns a single-element array with the matching sortition.\nPath parameters\nconsensus_hashstringRequired\nHex-encoded consensus hash (40 characters)\nPattern: `^(0x)?[0-9a-f]{40}$`\nResponses\n200\nSortition information for the consensus hash\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/consensus/{consensus_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/consensus/{consensus_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSortition information for the consensus hash\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-latest_and_last)\nGet latest and last winning sortitions\nget\nhttp://localhost:20443/v3/sortitions/latest_and_last\nGet sortition information about the latest burn block with a winning miner AND the previous such burn block. Returns an array with two sortition objects.\nResponses\n200\nLatest and last sortition information\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/latest_and_last\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/latest_and_last HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nLatest and last sortition information\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions-latest-and-prior.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions)\nGet latest sortition information\nget\nhttp://localhost:20443/v3/sortitions\nGet sortition information about the latest burnchain block processed by this node. Returns a single-element array with the latest sortition.\nResponses\n200\nLatest sortition information\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nLatest sortition information\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-block_id)\nFetch a sequence of Nakamoto blocks in a tenure\nget\nhttp://localhost:20443/v3/tenures/{block_id}\nFetch a sequence of Nakamoto blocks in a tenure. The blocks will be served in order from highest to lowest. The blocks will be encoded in their SIP-003 wire format, and concatenated together.\nPath parameters\nblock_idstringRequired\nThe tenure-start block ID of the tenure to query\nQuery parameters\nstopstringOptional\nThe block ID hash of the highest block in this tenure that is already known to the caller. Neither the corresponding block nor any of its ancestors will be served. This is used to fetch tenure blocks that the caller does not have.\nResponses\n200\nSIP-003-encoded Nakamoto blocks, concatenated together\napplication/octet-stream\nResponsestring ¬∑ binary\nget\n/v3/tenures/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSIP-003-encoded Nakamoto blocks, concatenated together\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-info)\nFetch metadata about the ongoing Nakamoto tenure\nget\nhttp://localhost:20443/v3/tenures/info\nFetch metadata about the ongoing Nakamoto tenure. This information is sufficient to obtain and authenticate the highest complete tenure, as well as obtain new tenure blocks.\nResponses\n200\nMetadata about the ongoing tenure\napplication/json\nResponseany\nget\n/v3/tenures/info\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/info HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nMetadata about the ongoing tenure\nCopy```\n{\n  \"$ref\": \"./components/examples/get-tenure-info.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-blocks-height-block_height)\nFetch a Nakamoto block by its height and optional tip\nget\nhttp://localhost:20443/v3/blocks/height/{block_height}\nFetch a Nakamoto block by its height and optional tip.\nPath parameters\nblock_heightintegerRequired\nThe block's height\nResponses\n200\nThe raw SIP-003-encoded block will be returned.\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/blocks/height/{block_height}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/blocks/height/{block_height} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe raw SIP-003-encoded block will be returned.\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-blocks-block_id)\nGet Nakamoto block by ID\nget\nhttp://localhost:20443/v3/blocks/{block_id}\nGet a specific Nakamoto block (Stacks 3.x+) by its index block hash. This endpoint streams the block data from the Nakamoto staging blocks database where Nakamoto blocks are stored with additional metadata including tenure information.\n**Compatibility** : Works with Nakamoto blocks only. For Stacks 2.x blocks, use `/v2/blocks/{block_id}`.\nPath parameters\nblock_idstringRequired\nThe block\"s ID hash\nResponses\n200\nThe raw SIP-003-encoded block will be returned.\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/blocks/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/blocks/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe raw SIP-003-encoded block will be returned.\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-stacker_set-cycle_number)\nFetch the stacker and signer set information for a given cycle.\nget\nhttp://localhost:20443/v3/stacker_set/{cycle_number}\nUsed to get stacker and signer set information for a given cycle.\nThis will only return information for cycles started in Epoch-2.5 where PoX-4 was active and subsequent cycles.\nPath parameters\ncycle_numberintegerRequired\nreward cycle number\nResponses\n200\nInformation for the given reward cycle\napplication/json\nResponseany\n400\nCould not fetch the given reward set\napplication/json\nget\n/v3/stacker_set/{cycle_number}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/stacker_set/{cycle_number} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nInformation for the given reward cycle\nCopy```\n{\n  \"$ref\": \"./components/examples/get-stacker-set.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v3-block_proposal)\nValidate a proposed Stacks block\npost\nhttp://localhost:20443/v3/block_proposal\nUsed by stackers to validate a proposed Stacks block from a miner. **This API endpoint requires a basic Authorization header.**\nrpcAuth\nrpcAuth\nBody\napplication/json\napplication/json\nblockstringRequired\nHex-encoded block data\nchain_idintegerRequired\nChain ID for the block\nResponses\n202\nBlock proposal has been accepted for processing. The result will be returned via the event observer.\napplication/json\nResponseany\n400\nBad Request\napplication/json\napplication/json text/plain\n401\nUnauthorized. Invalid or missing authentication token.\ntext/plain\n429\nThere is an ongoing proposal validation being processed, the new request cannot be accepted until the prior request has been processed.\napplication/json\n500\nInternal Server Error\ntext/plain\npost\n/v3/block_proposal\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v3/block_proposal HTTP/1.1\nHost: localhost:20443\nauthorization: YOUR_API_KEY\nContent-Type: application/json\nAccept: */*\nContent-Length: 73\n{\n  \"$ref\": \"./components/examples/post-block-proposal-request.example.json\"\n}\n```\n\nTest it\n202\nBlock proposal has been accepted for processing. The result will be returned via the event observer.\nCopy```\n{\n  \"$ref\": \"./components/examples/post-block-proposal-response.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-constant_val-contract_address-contract_name-constant_name)\nGet the value of a constant inside a contract\nget\nhttp://localhost:20443/v2/constant_val/{contract_address}/{contract_name}/{constant_name}\nAttempt to fetch the value of a constant inside a contract. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The constant is identified with [Constant Name].\nIn the response, `data` is the hex serialization of the constant value.\nPath parameters\nconstant_nameanyRequired\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/constant_val/{contract_address}/{contract_name}/{constant_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/constant_val/{contract_address}/{contract_name}/{constant_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/constant-value.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-clarity-metadata-contract_address-contract_name-clarity_metadata_key)\nGet the contract metadata for the metadata key\nget\nhttp://localhost:20443/v2/clarity/metadata/{contract_address}/{contract_name}/{clarity_metadata_key}\nAttempt to fetch the metadata of a contract. The contract is identified with [Contract Address] and [Contract Name] in the URL path. The metadata key is identified with [Clarity Metadata Key].\nIn the response, `data` is formatted as JSON.\nPath parameters\nclarity_metadata_keystringRequired\nMetadata key\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/clarity/metadata/{contract_address}/{contract_name}/{clarity_metadata_key}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/clarity/metadata/{contract_address}/{contract_name}/{clarity_metadata_key} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-metadata.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-clarity-marf-marf_key_hash)\nGet the MARF value for a given key\nget\nhttp://localhost:20443/v2/clarity/marf/{marf_key_hash}\nAttempt to fetch the value of a MARF key. The key is a 64-character hex string representing the MARF node hash.\nPath parameters\nmarf_key_hashstring ¬∑ min: 64 ¬∑ max: 64Required\nThe 64-character hex-encoded hash of the MARF key.\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/clarity/marf/{marf_key_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/clarity/marf/{marf_key_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-traits-contract_address-contract_name-trait_contract_address-trait_contract_name-trait_name)\nGet trait implementation details\nget\nhttp://localhost:20443/v2/traits/{contract_address}/{contract_name}/{trait_contract_address}/{trait_contract_name}/{trait_name}\nDetermine whether or not a specified trait is implemented (either explicitly or implicitly) within a given contract.\nPath parameters\ntrait_contract_addressstring ¬∑ min: 28 ¬∑ max: 41Required\nStacks address of the trait-defining contract.\nExample: `SP2Z1K16238380NBP4T38A4G10A90Q03JJ2C2003`Pattern: `^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}$`\ntrait_contract_namestring ¬∑ min: 1 ¬∑ max: 128Required\nContract name of the trait-defining contract.\nExample: `some-trait`Pattern: `^[a-zA-Z]([a-zA-Z0-9]|[-_]){0,127}$`\ntrait_nameanyRequiredExample: `some-trait`\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/traits/{contract_address}/{contract_name}/{trait_contract_address}/{trait_contract_name}/{trait_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/traits/{contract_address}/{contract_name}/{trait_contract_address}/{trait_contract_name}/{trait_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/is-trait-implemented.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-pox)\nGet PoX details\nget\nhttp://localhost:20443/v2/pox\nGet Proof of Transfer (PoX) information. Can be used for Stacking.\nResponses\n200\nSuccess\napplication/json\nResponseany\nget\n/v2/pox\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/pox HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/pox-info.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-info)\nGet Core API info\nget\nhttp://localhost:20443/v2/info\nGet Core API information\nResponses\n200\nSuccess\napplication/json\nResponseany\n500\nInternal Server Error\ntext/plain\nget\n/v2/info\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/info HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/node-info.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-fees-transfer)\nGet estimated fee\nget\nhttp://localhost:20443/v2/fees/transfer\nGet an estimated fee rate for STX transfer transactions. This is a fee rate per byte, returned as a JSON integer (microSTX per byte).\nResponses\n200\nFee rate in microSTX per byte\napplication/json\nResponseinteger ¬∑ min: 1\nFee rate in microSTX per byte\n500\nInternal Server Error\ntext/plain\nget\n/v2/fees/transfer\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/fees/transfer HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nFee rate in microSTX per byte\nCopy```\n3\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-fees-transaction)\nGet approximate fees for the given transaction\npost\nhttp://localhost:20443/v2/fees/transaction\nGet an estimated fee for the supplied transaction. This estimates the execution cost of the transaction, the current fee rate of the network, and returns estimates for fee amounts.\n  * `transaction_payload` is a hex-encoded serialization of the TransactionPayload for the transaction.\n  * `estimated_len` is an optional argument that provides the endpoint with an estimation of the final length (in bytes) of the transaction, including any post-conditions and signatures\n\n\nIf the node cannot provide an estimate for the transaction (e.g., if the node has never seen a contract-call for the given contract and function) or if estimation is not configured on this node, a 400 response is returned. The 400 response will be a JSON error containing a `reason` field which can be one of the following:\n  * `DatabaseError` - this Stacks node has had an internal database error while trying to estimate the costs of the supplied transaction.\n  * `NoEstimateAvailable` - this Stacks node has not seen this kind of contract-call before, and it cannot provide an estimate yet.\n  * `CostEstimationDisabled` - this Stacks node does not perform fee or cost estimation, and it cannot respond on this endpoint.\n\n\nThe 200 response contains the following data:\n  * `estimated_cost` - the estimated multi-dimensional cost of executing the Clarity VM on the provided transaction.\n  * `estimated_cost_scalar` - a unitless integer that the Stacks node uses to compare how much of the block limit is consumed by different transactions. This value incorporates the estimated length of the transaction and the estimated execution cost of the transaction. The range of this integer may vary between different Stacks nodes. In order to compute an estimate of total fee amount for the transaction, this value is multiplied by the same Stacks node\"s estimated fee rate.\n  * `cost_scalar_change_by_byte` - a float value that indicates how much the `estimated_cost_scalar` value would increase for every additional byte in the final transaction.\n  * `estimations` - an array of estimated fee rates and total fees to pay in microSTX for the transaction. This array provides a range of estimates (default: 3) that may be used. Each element of the array contains the following fields:\n    * `fee_rate` - the estimated value for the current fee rates in the network\n    * `fee` - the estimated value for the total fee in microSTX that the given transaction should pay. These values are the result of computing: `fee_rate` x `estimated_cost_scalar`. If the estimated fees are less than the minimum relay fee `(1 ustx x estimated_len)`, then that minimum relay fee will be returned here instead.\n\n\nNote: If the final transaction\"s byte size is larger than supplied to `estimated_len`, then applications should increase this fee amount by:\n`fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`)\nBody\napplication/json\napplication/json\nanyOptional\nResponses\n200\nEstimated fees for the transaction\napplication/json\nResponseany\n400\nFee estimation error\napplication/json\n500\nInternal Server Error\ntext/plain\npost\n/v2/fees/transaction\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/fees/transaction HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\nContent-Length: 69\n{\n  \"$ref\": \"./components/examples/fee-transaction-request.example.json\"\n}\n```\n\nTest it\n200\nEstimated fees for the transaction\nCopy```\n{\n  \"$ref\": \"./components/examples/fee-transaction-response.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-accounts-principal)\nGet account info\nget\nhttp://localhost:20443/v2/accounts/{principal}\nGet the account data for the provided principal\nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is a unsigned 64-bit integer, and the proofs are provided as hex strings.\nFor non-existent accounts, this does not 404, rather it returns an object with balance and nonce of 0.\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/accounts/{principal}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/accounts/{principal} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/account-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v3-contracts-fast-call-read-contract_address-contract_name-function_name)\nCall read-only function in fast mode (no cost and memory tracking)\npost\nhttp://localhost:20443/v3/contracts/fast-call-read/{contract_address}/{contract_name}/{function_name}\nCall a read-only public function on a given smart contract without cost tracking.\nThe contract is identified with [Stacks Address] and [Contract Name] in the URL path. The function is identified with [Function Name].\nThe arguments to the function are supplied via the POST body. This should be a JSON object with two main properties:\n  * `sender` which should be a standard Stacks address\n  * `arguments` which should be an array of hex-encoded Clarity values.\n\n\n**This API endpoint requires a basic Authorization header.**\nrpcAuth\nrpcAuth\nPath parameters\nfunction_nameanyRequired\nBody\napplication/json\napplication/json\nanyOptionalExample: `{\"sender\":\"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info\",\"arguments\":[\"0x0011...\",\"0x00231...\"]}`\nResponses\n200\nFunction executed successfully\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n408\nTimeout\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v3/contracts/fast-call-read/{contract_address}/{contract_name}/{function_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v3/contracts/fast-call-read/{contract_address}/{contract_name}/{function_name} HTTP/1.1\nHost: localhost:20443\nauthorization: YOUR_API_KEY\nContent-Type: application/json\nAccept: */*\nContent-Length: 102\n{\n  \"sender\": \"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info\",\n  \"arguments\": [\n    \"0x0011...\",\n    \"0x00231...\"\n  ]\n}\n```\n\nTest it\n200\nFunction executed successfully\n```\n\nNo content\n\n```\n\nSuccessful function call\n### \n[](https://docs.stacks.co/reference/api#post-v2-contracts-call-read-contract_address-contract_name-function_name)\nCall read-only function\npost\nhttp://localhost:20443/v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}\nCall a read-only public function on a given contract.\nThe contract is identified with [Stacks Address] and [Contract Name] in the URL path. The function is identified with [Function Name].\nThe arguments to the function are supplied via the POST body. This should be a JSON object with two main properties:\n  * `sender` which should be a standard Stacks address\n  * `arguments` which should be an array of hex-encoded Clarity values.\n\n\nPath parameters\nfunction_nameanyRequired\nBody\napplication/json\napplication/json\nanyOptional\nResponses\n200\nFunction executed successfully\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/contracts/call-read/{contract_address}/{contract_name}/{function_name} HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\n\n```\n\nTest it\n200\nFunction executed successfully\n```\n\nNo content\n\n```\n\nSuccessful function call\n### \n[](https://docs.stacks.co/reference/api#get-v2-contracts-source-contract_address-contract_name)\nGet contract source\nget\nhttp://localhost:20443/v2/contracts/source/{contract_address}/{contract_name}\nReturns the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data.\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/contracts/source/{contract_address}/{contract_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/contracts/source/{contract_address}/{contract_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/contract-source.example.json\"\n}\n```\n\n[PreviousCommunity Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)[NextClarity Types](https://docs.stacks.co/reference/types)\nLast updated 29 days ago\nWas this helpful?\n",
      "wordCount": 6528,
      "title": "API | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/types",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Clarity Types\n### \n[](https://docs.stacks.co/reference/types#clarity-type-system)\nClarity Type System\nThe type system contains the following types:\nTypes\nNotes\n`int`\nsigned 128-bit integer\n`uint`\nunsigned 128-bit integer\n`bool`\nboolean value (`true` or `false`)\n`principal`\nobject representing a principal (whether a contract principal or standard principal)\n`(buff max-len)`\nbyte buffer of maximum length `max-len`.\n`(string-ascii max-len)`\nASCII string of maximum length `max-len`\n`(string-utf8 max-len)`\nUTF-8 string of maximum length `max-len` (u\"A smiley face emoji \\u{1F600} as a utf8 string\")\n`(list max-len entry-type)`\nlist of maximum length `max-len`, with entries of type `entry-type`\n`{label-0: value-type-0, label-1: value-type-1, ...}`\ntuple, group of data values with named fields\n`(optional some-type)`\nan option type for objects that can either be `(some value)` or `none`\n`(response ok-type err-type)`\nobject used by public functions to commit their changes or abort. May be returned or used by other functions as well, however, only public functions have the commit/abort behavior.\n[PreviousAPI](https://docs.stacks.co/reference/api)[NextClarity Functions](https://docs.stacks.co/reference/functions)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 694,
      "title": "Clarity Types | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/functions",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [* (multiply)‚Äã](https://docs.stacks.co/reference/functions#multiply)\n  * [+ (add)‚Äã](https://docs.stacks.co/reference/functions#add)\n  * [- (subtract)‚Äã](https://docs.stacks.co/reference/functions#subtract)\n  * [/ (divide)‚Äã](https://docs.stacks.co/reference/functions#divide)\n  * [< (less than)‚Äã](https://docs.stacks.co/reference/functions#less-than-less-than)\n  * [<= (less than or equal)‚Äã](https://docs.stacks.co/reference/functions#less-than-less-than-or-equal)\n  * [> (greater than)‚Äã](https://docs.stacks.co/reference/functions#greater-than-greater-than)\n  * [>= (greater than or equal)‚Äã](https://docs.stacks.co/reference/functions#greater-than-greater-than-or-equal)\n  * [and‚Äã](https://docs.stacks.co/reference/functions#and)\n  * [append‚Äã](https://docs.stacks.co/reference/functions#append)\n  * [as-contract‚Äã](https://docs.stacks.co/reference/functions#as-contract)\n  * [as-max-len?‚Äã](https://docs.stacks.co/reference/functions#as-max-len)\n  * [asserts!](https://docs.stacks.co/reference/functions#asserts)\n  * [at-block‚Äã](https://docs.stacks.co/reference/functions#at-block)\n  * [begin‚Äã](https://docs.stacks.co/reference/functions#begin)\n  * [bit-and‚Äã](https://docs.stacks.co/reference/functions#bit-and)\n  * [bit-not‚Äã](https://docs.stacks.co/reference/functions#bit-not)\n  * [bit-or‚Äã](https://docs.stacks.co/reference/functions#bit-or)\n  * [bit-shift-left‚Äã](https://docs.stacks.co/reference/functions#bit-shift-left)\n  * [bit-shift-right‚Äã](https://docs.stacks.co/reference/functions#bit-shift-right)\n  * [bit-xor‚Äã](https://docs.stacks.co/reference/functions#bit-xor)\n  * [buff-to-int-be‚Äã](https://docs.stacks.co/reference/functions#buff-to-int-be)\n  * [buff-to-int-le‚Äã](https://docs.stacks.co/reference/functions#buff-to-int-le)\n  * [buff-to-uint-be‚Äã](https://docs.stacks.co/reference/functions#buff-to-uint-be)\n  * [buff-to-uint-le‚Äã](https://docs.stacks.co/reference/functions#buff-to-uint-le)\n  * [concat‚Äã](https://docs.stacks.co/reference/functions#concat)\n  * [contract-call?‚Äã](https://docs.stacks.co/reference/functions#contract-call)\n  * [contract-of‚Äã](https://docs.stacks.co/reference/functions#contract-of)\n  * [default-to‚Äã](https://docs.stacks.co/reference/functions#default-to)\n  * [define-constant‚Äã](https://docs.stacks.co/reference/functions#define-constant)\n  * [define-data-var‚Äã](https://docs.stacks.co/reference/functions#define-data-var)\n  * [define-fungible-token‚Äã](https://docs.stacks.co/reference/functions#define-fungible-token)\n  * [define-map‚Äã](https://docs.stacks.co/reference/functions#define-map)\n  * [define-non-fungible-token‚Äã](https://docs.stacks.co/reference/functions#define-non-fungible-token)\n  * [define-private‚Äã](https://docs.stacks.co/reference/functions#define-private)\n  * [define-public‚Äã](https://docs.stacks.co/reference/functions#define-public)\n  * [define-read-only‚Äã](https://docs.stacks.co/reference/functions#define-read-only)\n  * [define-trait‚Äã](https://docs.stacks.co/reference/functions#define-trait)\n  * [element-at‚Äã](https://docs.stacks.co/reference/functions#element-at)\n  * [element-at?‚Äã](https://docs.stacks.co/reference/functions#element-at-1)\n  * [err‚Äã](https://docs.stacks.co/reference/functions#err)\n  * [filter‚Äã](https://docs.stacks.co/reference/functions#filter)\n  * [fold‚Äã](https://docs.stacks.co/reference/functions#fold)\n  * [from-consensus-buff?‚Äã](https://docs.stacks.co/reference/functions#from-consensus-buff)\n  * [ft-burn?‚Äã](https://docs.stacks.co/reference/functions#ft-burn)\n  * [ft-get-balance‚Äã](https://docs.stacks.co/reference/functions#ft-get-balance)\n  * [ft-get-supply‚Äã](https://docs.stacks.co/reference/functions#ft-get-supply)\n  * [ft-mint?‚Äã](https://docs.stacks.co/reference/functions#ft-mint)\n  * [ft-transfer?‚Äã](https://docs.stacks.co/reference/functions#ft-transfer)\n  * [get‚Äã](https://docs.stacks.co/reference/functions#get)\n  * [get-block-info?‚Äã](https://docs.stacks.co/reference/functions#get-block-info)\n  * [get-burn-block-info?‚Äã](https://docs.stacks.co/reference/functions#get-burn-block-info)\n  * [get-stacks-block-info?](https://docs.stacks.co/reference/functions#get-stacks-block-info)\n  * [get-tenure-info?](https://docs.stacks.co/reference/functions#get-tenure-info)\n  * [hash160‚Äã](https://docs.stacks.co/reference/functions#hash160)\n  * [if‚Äã](https://docs.stacks.co/reference/functions#if)\n  * [impl-trait‚Äã](https://docs.stacks.co/reference/functions#impl-trait)\n  * [index-of‚Äã](https://docs.stacks.co/reference/functions#index-of)\n  * [index-of?‚Äã](https://docs.stacks.co/reference/functions#index-of-1)\n  * [int-to-ascii‚Äã](https://docs.stacks.co/reference/functions#int-to-ascii)\n  * [int-to-utf8‚Äã](https://docs.stacks.co/reference/functions#int-to-utf8)\n  * [is-eq‚Äã](https://docs.stacks.co/reference/functions#is-eq)\n  * [is-err‚Äã](https://docs.stacks.co/reference/functions#is-err)\n  * [is-none‚Äã](https://docs.stacks.co/reference/functions#is-none)\n  * [is-ok‚Äã](https://docs.stacks.co/reference/functions#is-ok)\n  * [is-some‚Äã](https://docs.stacks.co/reference/functions#is-some)\n  * [is-standard‚Äã](https://docs.stacks.co/reference/functions#is-standard)\n  * [keccak256‚Äã](https://docs.stacks.co/reference/functions#keccak256)\n  * [len‚Äã](https://docs.stacks.co/reference/functions#len)\n  * [let‚Äã](https://docs.stacks.co/reference/functions#let)\n  * [list‚Äã](https://docs.stacks.co/reference/functions#list)\n  * [log2‚Äã](https://docs.stacks.co/reference/functions#log2)\n  * [map‚Äã](https://docs.stacks.co/reference/functions#map)\n  * [map-delete‚Äã](https://docs.stacks.co/reference/functions#map-delete)\n  * [map-get?‚Äã](https://docs.stacks.co/reference/functions#map-get)\n  * [map-insert‚Äã](https://docs.stacks.co/reference/functions#map-insert)\n  * [map-set‚Äã](https://docs.stacks.co/reference/functions#map-set)\n  * [match‚Äã](https://docs.stacks.co/reference/functions#match)\n  * [merge‚Äã](https://docs.stacks.co/reference/functions#merge)\n  * [mod‚Äã](https://docs.stacks.co/reference/functions#mod)\n  * [nft-burn?‚Äã](https://docs.stacks.co/reference/functions#nft-burn)\n  * [nft-get-owner?‚Äã](https://docs.stacks.co/reference/functions#nft-get-owner)\n  * [nft-mint?‚Äã](https://docs.stacks.co/reference/functions#nft-mint)\n  * [nft-transfer?‚Äã](https://docs.stacks.co/reference/functions#nft-transfer)\n  * [not‚Äã](https://docs.stacks.co/reference/functions#not)\n  * [ok‚Äã](https://docs.stacks.co/reference/functions#ok)\n  * [or‚Äã](https://docs.stacks.co/reference/functions#or)\n  * [pow‚Äã](https://docs.stacks.co/reference/functions#pow)\n  * [principal-construct?‚Äã](https://docs.stacks.co/reference/functions#principal-construct)\n  * [principal-destruct?‚Äã](https://docs.stacks.co/reference/functions#principal-destruct)\n  * [principal-of?‚Äã](https://docs.stacks.co/reference/functions#principal-of)\n  * [print‚Äã](https://docs.stacks.co/reference/functions#print)\n  * [replace-at?‚Äã](https://docs.stacks.co/reference/functions#replace-at)\n  * [secp256k1-recover?‚Äã](https://docs.stacks.co/reference/functions#secp256k1-recover)\n  * [secp256k1-verify‚Äã](https://docs.stacks.co/reference/functions#secp256k1-verify)\n  * [sha256‚Äã](https://docs.stacks.co/reference/functions#sha256)\n  * [sha512‚Äã](https://docs.stacks.co/reference/functions#sha512)\n  * [sha512/256‚Äã](https://docs.stacks.co/reference/functions#sha512-256)\n  * [slice?‚Äã](https://docs.stacks.co/reference/functions#slice)\n  * [some‚Äã](https://docs.stacks.co/reference/functions#some)\n  * [sqrti‚Äã](https://docs.stacks.co/reference/functions#sqrti)\n  * [string-to-int?‚Äã](https://docs.stacks.co/reference/functions#string-to-int)\n  * [string-to-uint?‚Äã](https://docs.stacks.co/reference/functions#string-to-uint)\n  * [stx-account‚Äã](https://docs.stacks.co/reference/functions#stx-account)\n  * [stx-burn?‚Äã](https://docs.stacks.co/reference/functions#stx-burn)\n  * [stx-get-balance‚Äã](https://docs.stacks.co/reference/functions#stx-get-balance)\n  * [stx-transfer-memo?‚Äã](https://docs.stacks.co/reference/functions#stx-transfer-memo)\n  * [stx-transfer?‚Äã](https://docs.stacks.co/reference/functions#stx-transfer)\n  * [to-consensus-buff?‚Äã](https://docs.stacks.co/reference/functions#to-consensus-buff)\n  * [to-int‚Äã](https://docs.stacks.co/reference/functions#to-int)\n  * [to-uint‚Äã](https://docs.stacks.co/reference/functions#to-uint)\n  * [try!](https://docs.stacks.co/reference/functions#try)\n  * [tuple‚Äã](https://docs.stacks.co/reference/functions#tuple)\n  * [unwrap!](https://docs.stacks.co/reference/functions#unwrap)\n  * [unwrap-err!](https://docs.stacks.co/reference/functions#unwrap-err)\n  * [unwrap-err-panic‚Äã](https://docs.stacks.co/reference/functions#unwrap-err-panic)\n  * [unwrap-panic‚Äã](https://docs.stacks.co/reference/functions#unwrap-panic)\n  * [use-trait‚Äã](https://docs.stacks.co/reference/functions#use-trait)\n  * [var-get‚Äã](https://docs.stacks.co/reference/functions#var-get)\n  * [var-set‚Äã](https://docs.stacks.co/reference/functions#var-set)\n  * [xor‚Äã](https://docs.stacks.co/reference/functions#xor)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Clarity Functions\n## \n[](https://docs.stacks.co/reference/functions#multiply)\n* (multiply)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(* i1 i2...)`\n**description:**\nMultiplies a variable number of integer inputs and returns the result. In the event of an _overflow_ , throws a runtime error.\n**example:**\nCopy```\n(* 2 3) ;; Returns 6\n(* 5 2) ;; Returns 10\n(* 2 2 2) ;; Returns 8\n```\n\n## \n[](https://docs.stacks.co/reference/functions#add)\n+ (add)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(+ i1 i2...)`\n**description:**\nAdds a variable number of integer inputs and returns the result. In the event of an _overflow_ , throws a runtime error.\n**example:**\nCopy```\n(+ 1 2 3) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#subtract)\n- (subtract)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(- i1 i2...)`\n**description:**\nSubtracts a variable number of integer inputs and returns the result. In the event of an _underflow_ , throws a runtime error.\n**example:**\nCopy```\n(- 2 1 1) ;; Returns 0\n(- 0 3) ;; Returns -3\n```\n\n## \n[](https://docs.stacks.co/reference/functions#divide)\n/ (divide)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(/ i1 i2...)`\n**description:**\nInteger divides a variable number of integer inputs and returns the result. In the event of division by zero, throws a runtime error.\n**example:**\nCopy```\n(/ 2 3) ;; Returns 0\n(/ 5 2) ;; Returns 2\n(/ 4 2 2) ;; Returns 1\n```\n\n## \n[](https://docs.stacks.co/reference/functions#less-than-less-than)\n< (less than)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(< i1 i2)`\n**description:**\nCompares two integers, returning `true` if `i1` is less than `i2` and `false` otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `<`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `<`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(< 1 2) ;; Returns true\n(< 5 2) ;; Returns false\n(< \"aaa\" \"baa\") ;; Returns true\n(< \"aa\" \"aaa\") ;; Returns true\n(< 0x01 0x02) ;; Returns true\n(< 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#less-than-less-than-or-equal)\n<= (less than or equal)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(<= i1 i2)`\n**description:**\nCompares two integers, returning true if `i1` is less than or equal to `i2` and `false` otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `<=`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `<=`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(<= 1 1) ;; Returns true\n(<= 5 2) ;; Returns false\n(<= \"aaa\" \"baa\") ;; Returns true\n(<= \"aa\" \"aaa\") ;; Returns true\n(<= 0x01 0x02) ;; Returns true\n(<= 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#greater-than-greater-than)\n> (greater than)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(> i1 i2)`\n**description:**\nCompares two integers, returning `true` if `i1` is greater than `i2` and false otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `>`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `>`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(> 1 2) ;; Returns false\n(> 5 2) ;; Returns true\n(> \"baa\" \"aaa\") ;; Returns true\n(> \"aaa\" \"aa\") ;; Returns true\n(> 0x02 0x01) ;; Returns true\n(> 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#greater-than-greater-than-or-equal)\n>= (greater than or equal)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(>= i1 i2)`\n**description:**\nCompares two integers, returning `true` if `i1` is greater than or equal to `i2` and `false` otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `>=`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `>=`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(>= 1 1) ;; Returns true\n(>= 5 2) ;; Returns true\n(>= \"baa\" \"aaa\") ;; Returns true\n(>= \"aaa\" \"aa\") ;; Returns true\n(>= 0x02 0x01) ;; Returns true\n(>= 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#and)\nand‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool, ...`\n**output:** `bool`\n**signature:** `(and b1 b2 ...)`\n**description:**\nReturns `true` if all boolean inputs are `true`. Importantly, the supplied arguments are evaluated in-order and lazily. Lazy evaluation means that if one of the arguments returns `false`, the function short-circuits, and no subsequent arguments are evaluated.\n**example:**\nCopy```\n(and true false) ;; Returns false\n(and (is-eq (+ 1 2) 1) (is-eq 4 4)) ;; Returns false\n(and (is-eq (+ 1 2) 3) (is-eq 4 4)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#append)\nappend‚Äã\nIntroduced in: **Clarity 1**\n**input:** `list A, A`\n**output:** `list`\n**signature:** `(append (list 1 2 3 4) 5)`\n**description:**\nThe `append` function takes a list and another value with the same entry type, and outputs a list of the same type with max_len += 1.\n**example:**\nCopy```\n(append (list 1 2 3 4) 5) ;; Returns (1 2 3 4 5)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#as-contract)\nas-contract‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `A`\n**signature:** `(as-contract expr)`\n**description:**\nThe `as-contract` function switches the current context's `tx-sender` value to the _contract's_ principal and executes `expr` with that context. It returns the resulting value of `expr`.\n**example:**\nCopy```\n(as-contract tx-sender) ;; Returns S1G2081040G2081040G2081040G208105NK8PE5.docs-test\n```\n\n## \n[](https://docs.stacks.co/reference/functions#as-max-len)\nas-max-len?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, uint`\n**output:** `(optional sequence_A)`\n**signature:** `(as-max-len? sequence max_length)`\n**description:**\nThe `as-max-len?` function takes a sequence argument and a uint-valued, literal length argument. The function returns an optional type. If the input sequence length is less than or equal to the supplied max_length, this returns `(some sequence)`, otherwise it returns `none`. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`.\n**example:**\nCopy```\n(as-max-len? (list 2 2 2) u3) ;; Returns (some (2 2 2))\n(as-max-len? (list 1 2 3) u2) ;; Returns none\n(as-max-len? \"hello\" u10) ;; Returns (some \"hello\")\n(as-max-len? 0x010203 u10) ;; Returns (some 0x010203)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#asserts)\nasserts!\nIntroduced in: **Clarity 1**\n**input:** `bool, C`\n**output:** `bool`\n**signature:** `(asserts! bool-expr thrown-value)`\n**description:**\nThe `asserts!` function admits a boolean argument and asserts its evaluation: if bool-expr is `true`, `asserts!` returns `true` and proceeds in the program execution. If the supplied argument is returning a false value, `asserts!` _returns_ `thrown-value` and exits the current control-flow.\n**example:**\nCopy```\n(asserts! (is-eq 1 1) (err 1)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#at-block)\nat-block‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 32), A`\n**output:** `A`\n**signature:** `(at-block id-block-hash expr)`\n**description:**\nThe `at-block` function evaluates the expression `expr` _as if_ it were evaluated at the end of the block indicated by the _block-hash_ argument. The `expr` closure must be read-only.\nNote: The block identifying hash must be a hash returned by the `id-header-hash` block information property. This hash uniquely identifies Stacks blocks and is unique across Stacks forks. While the hash returned by `header-hash` is unique within the context of a single fork, it is not unique across Stacks forks.\nThe function returns the result of evaluating `expr`.\n**example:**\nCopy```\n(define-data-var data int 1)\n(at-block 0x0000000000000000000000000000000000000000000000000000000000000000 block-height) ;; Returns u0\n(at-block (get-block-info? id-header-hash 0) (var-get data)) ;; Throws NoSuchDataVariable because `data` wasn't initialized at block height 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#begin)\nbegin‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AnyType, ... A`\n**output:** `A`\n**signature:** `(begin expr1 expr2 expr3 ... expr-last)`\n**description:**\nThe `begin` function evaluates each of its input expressions, returning the return value of the last such expression. Note: intermediary statements returning a response type must be checked.\n**example:**\nCopy```\n(begin (+ 1 2) 4 5) ;; Returns 5\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-and)\nbit-and‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(bit-and i1 i2...)`\n**description:**\nReturns the result of bitwise and'ing a variable number of integer inputs.\n**example:**\nCopy```\n(bit-and 24 16) ;; Returns 16\n(bit-and 28 24 -1) ;; Returns 24\n(bit-and u24 u16) ;; Returns u16\n(bit-and -128 -64) ;; Returns -128\n(bit-and 28 24 -1) ;; Returns 24\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-not)\nbit-not‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int | uint`\n**output:** `int | uint`\n**signature:** `(bit-not i1)`\n**description:**\nReturns the one's complement (sometimes also called the bitwise compliment or not operator) of `i1`, effectively reversing the bits in `i1`. In other words, every bit that is `1` in √¨1`will be`0`in the result. Conversely, every bit that is`0`in`i1`will be`1` in the result.\n**example:**\nCopy```\n(bit-not 3) ;; Returns -4\n(bit-not u128) ;; Returns u340282366920938463463374607431768211327\n(bit-not 128) ;; Returns -129\n(bit-not -128) ;; Returns 127\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-or)\nbit-or‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(bit-or i1 i2...)`\n**description:**\nReturns the result of bitwise inclusive or'ing a variable number of integer inputs.\n**example:**\nCopy```\n(bit-or 4 8) ;; Returns 12\n(bit-or 1 2 4) ;; Returns 7\n(bit-or 64 -32 -16) ;; Returns -16\n(bit-or u2 u4 u32) ;; Returns u38\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-shift-left)\nbit-shift-left‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, uint | uint, uint`\n**output:** `int | uint`\n**signature:** `(bit-shift-left i1 shamt)`\n**description:**\nShifts all the bits in `i1` to the left by the number of places specified in `shamt` modulo 128 (the bit width of Clarity integers).\nNote that there is a deliberate choice made to ignore arithmetic overflow for this operation. In use cases where overflow should be detected, developers should use `*`, `/`, and `pow` instead of the shift operators.\n**example:**\nCopy```\n(bit-shift-left 2 u1) ;; Returns 4\n(bit-shift-left 16 u2) ;; Returns 64\n(bit-shift-left -64 u1) ;; Returns -128\n(bit-shift-left u4 u2) ;; Returns u16\n(bit-shift-left 123 u9999999999) ;; Returns -170141183460469231731687303715884105728\n(bit-shift-left u123 u9999999999) ;; Returns u170141183460469231731687303715884105728\n(bit-shift-left -1 u7) ;; Returns -128\n(bit-shift-left -1 u128) ;; Returns -1\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-shift-right)\nbit-shift-right‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, uint | uint, uint`\n**output:** `int | uint`\n**signature:** `(bit-shift-right i1 shamt)`\n**description:**\nShifts all the bits in `i1` to the right by the number of places specified in `shamt` modulo 128 (the bit width of Clarity integers). When `i1` is a `uint` (unsigned), new bits are filled with zeros. When `i1` is an `int` (signed), the sign is preserved, meaning that new bits are filled with the value of the previous sign-bit.\nNote that there is a deliberate choice made to ignore arithmetic overflow for this operation. In use cases where overflow should be detected, developers should use `*`, `/`, and `pow` instead of the shift operators.\n**example:**\nCopy```\n(bit-shift-right 2 u1) ;; Returns 1\n(bit-shift-right 128 u2) ;; Returns 32\n(bit-shift-right -64 u1) ;; Returns -32\n(bit-shift-right u128 u2) ;; Returns u32\n(bit-shift-right 123 u9999999999) ;; Returns 0\n(bit-shift-right u123 u9999999999) ;; Returns u0\n(bit-shift-right -128 u7) ;; Returns -1\n(bit-shift-right -256 u1) ;; Returns -128\n(bit-shift-right 5 u2) ;; Returns 1\n(bit-shift-right -5 u2) ;; Returns -2\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-xor)\nbit-xor‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(bit-xor i1 i2...)`\n**description:**\nReturns the result of bitwise exclusive or'ing a variable number of integer inputs.\n**example:**\nCopy```\n(bit-xor 1 2) ;; Returns 3\n(bit-xor 120 280) ;; Returns 352\n(bit-xor -128 64) ;; Returns -64\n(bit-xor u24 u4) ;; Returns u28\n(bit-xor 1 2 4 -1) ;; Returns -8\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-int-be)\nbuff-to-int-be‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `int`\n**signature:** `(buff-to-int-be (buff 16))`\n**description:**\nConverts a byte buffer to a signed integer use a big-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a big-endian encoding, the input behaves as if it is zero-padded on the _left_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-int-be 0x01) ;; Returns 1\n(buff-to-int-be 0x00000000000000000000000000000001) ;; Returns 1\n(buff-to-int-be 0xffffffffffffffffffffffffffffffff) ;; Returns -1\n(buff-to-int-be 0x) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-int-le)\nbuff-to-int-le‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `int`\n**signature:** `(buff-to-int-le (buff 16))`\n**description:**\nConverts a byte buffer to a signed integer use a little-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a little-endian encoding, the input behaves as if it is zero-padded on the _right_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-int-le 0x01) ;; Returns 1\n(buff-to-int-le 0x01000000000000000000000000000000) ;; Returns 1\n(buff-to-int-le 0xffffffffffffffffffffffffffffffff) ;; Returns -1\n(buff-to-int-le 0x) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-uint-be)\nbuff-to-uint-be‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `uint`\n**signature:** `(buff-to-uint-be (buff 16))`\n**description:**\nConverts a byte buffer to an unsigned integer use a big-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a big-endian encoding, the input behaves as if it is zero-padded on the _left_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-uint-be 0x01) ;; Returns u1\n(buff-to-uint-be 0x00000000000000000000000000000001) ;; Returns u1\n(buff-to-uint-be 0xffffffffffffffffffffffffffffffff) ;; Returns u340282366920938463463374607431768211455\n(buff-to-uint-be 0x) ;; Returns u0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-uint-le)\nbuff-to-uint-le‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `uint`\n**signature:** `(buff-to-uint-le (buff 16))`\n**description:**\nConverts a byte buffer to an unsigned integer use a little-endian encoding.. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a little-endian encoding, the input behaves as if it is zero-padded on the _right_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-uint-le 0x01) ;; Returns u1\n(buff-to-uint-le 0x01000000000000000000000000000000) ;; Returns u1\n(buff-to-uint-le 0xffffffffffffffffffffffffffffffff) ;; Returns u340282366920938463463374607431768211455\n(buff-to-uint-le 0x) ;; Returns u0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#concat)\nconcat‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, sequence_A`\n**output:** `sequence_A`\n**signature:** `(concat sequence1 sequence2)`\n**description:**\nThe `concat` function takes two sequences of the same type, and returns a concatenated sequence of the same type, with the resulting sequence_len = sequence1_len + sequence2_len. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`.\n**example:**\nCopy```\n(concat (list 1 2) (list 3 4)) ;; Returns (1 2 3 4)\n(concat \"hello \" \"world\") ;; Returns \"hello world\"\n(concat 0x0102 0x0304) ;; Returns 0x01020304\n```\n\n## \n[](https://docs.stacks.co/reference/functions#contract-call)\ncontract-call?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `ContractName, PublicFunctionName, Arg0, ...`\n**output:** `(response A B)`\n**signature:** `(contract-call? .contract-name function-name arg0 arg1 ...)`\n**description:**\nThe `contract-call?` function executes the given public function of the given contract. You _may not_ use this function to call a public function defined in the current contract. If the public function returns _err_ , any database changes resulting from calling `contract-call?` are aborted. If the function returns _ok_ , database changes occurred.\n**example:**\nCopy```\n;; instantiate the sample-contracts/tokens.clar contract first\n(as-contract (contract-call? .tokens mint! u19)) ;; Returns (ok u19)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#contract-of)\ncontract-of‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Trait`\n**output:** `principal`\n**signature:** `(contract-of .contract-name)`\n**description:**\nThe `contract-of` function returns the principal of the contract implementing the trait.\n**example:**\nCopy```\n(use-trait token-a-trait 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait)\n(define-public (forward-get-balance (user principal) (contract <token-a-trait>))\n  (begin    \n    (ok (contract-of contract)))) ;; returns the principal of the contract implementing <token-a-trait>\n```\n\n## \n[](https://docs.stacks.co/reference/functions#default-to)\ndefault-to‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A, (optional A)`\n**output:** `A`\n**signature:** `(default-to default-value option-value)`\n**description:**\nThe `default-to` function attempts to 'unpack' the second argument: if the argument is a `(some ...)` option, it returns the inner value of the option. If the second argument is a `(none)` value, `default-to` it returns the value of `default-value`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(default-to 0 (get id (map-get? names-map (tuple (name \"blockstack\"))))) ;; Returns 1337\n(default-to 0 (get id (map-get? names-map (tuple (name \"non-existant\"))))) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-constant)\ndefine-constant‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-constant name expression)`\n**description:**\n`define-constant` is used to define a private constant value in a smart contract. The expression passed into the definition is evaluated at contract launch, in the order that it is supplied in the contract. This can lead to undefined function or undefined variable errors in the event that a function or variable used in the expression has not been defined before the constant.\nLike other kinds of definition statements, `define-constant` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-constant four (+ 2 2))\n(+ 4 four) ;; Returns 8\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-data-var)\ndefine-data-var‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, TypeDefinition, Value`\n**output:** `Not Applicable`\n**signature:** `(define-data-var var-name type value)`\n**description:**\n`define-data-var` is used to define a new persisted variable for use in a smart contract. Such variable are only modifiable by the current smart contract.\nPersisted variable are defined with a type and a value.\nLike other kinds of definition statements, `define-data-var` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-data-var size int 0)\n(define-private (set-size (value int))  \n  (var-set size value))\n(set-size 1)\n(set-size 2)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-fungible-token)\ndefine-fungible-token‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, <uint>`\n**output:** `Not Applicable`\n**signature:** `(define-fungible-token token-name <total-supply>)`\n**description:**\n`define-fungible-token` is used to define a new fungible token class for use in the current contract.\nThe second argument, if supplied, defines the total supply of the fungible token. This ensures that all calls to the `ft-mint?` function will never be able to create more than `total-supply` tokens. If any such call were to increase the total supply of tokens passed that amount, that invocation of `ft-mint?` will result in a runtime error and abort.\nLike other kinds of definition statements, `define-fungible-token` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nTokens defined using `define-fungible-token` may be used in `ft-transfer?`, `ft-mint?`, and `ft-get-balance` functions\n**example:**\nCopy```\n(define-fungible-token stacks)\n(define-fungible-token limited-supply-stacks u100)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-map)\ndefine-map‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, TypeDefinition, TypeDefinition`\n**output:** `Not Applicable`\n**signature:** `(define-map map-name key-type value-type)`\n**description:**\n`define-map` is used to define a new datamap for use in a smart contract. Such maps are only modifiable by the current smart contract.\nMaps are defined with a key type and value type, often these types are tuple types.\nLike other kinds of definition statements, `define-map` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-map squares { x: int } { square: int })\n(define-private (add-entry (x int)) \n  (map-insert squares { x: 2 } { square: (* x x) }))\n(add-entry 1)\n(add-entry 2)\n(add-entry 3)\n(add-entry 4)\n(add-entry 5)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-non-fungible-token)\ndefine-non-fungible-token‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, TypeSignature`\n**output:** `Not Applicable`\n**signature:** `(define-non-fungible-token asset-name asset-identifier-type)`\n**description:**\n`define-non-fungible-token` is used to define a new non-fungible token class for use in the current contract. Individual assets are identified by their asset identifier, which must be of the type `asset-identifier-type`. Asset identifiers are _unique_ identifiers.\nLike other kinds of definition statements, `define-non-fungible-token` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nAssets defined using `define-non-fungible-token` may be used in `nft-transfer?`, `nft-mint?`, and `nft-get-owner?` functions\n**example:**\nCopy```\n(define-non-fungible-token names (buff 50))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-private)\ndefine-private‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-private (function-name (arg-name-0 arg-type-0) (arg-name-1 arg-type-1) ...) function-body)`\n**description:**\n`define-private` is used to define _private_ functions for a smart contract. Private functions may not be called from other smart contracts, nor may they be invoked directly by users. Instead, these functions may only be invoked by other functions defined in the same smart contract.\nLike other kinds of definition statements, `define-private` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nPrivate functions may return any type.\n**example:**\nCopy```\n(define-private (max-of (i1 int) (i2 int))  \n  (if (> i1 i2)\n    i1      \n    i2))\n(max-of 4 6) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-public)\ndefine-public‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-public (function-name (arg-name-0 arg-type-0) (arg-name-1 arg-type-1) ...) function-body)`\n**description:**\n`define-public` is used to define a _public_ function and transaction for a smart contract. Public functions are callable from other smart contracts and may be invoked directly by users by submitting a transaction to the Stacks blockchain.\nLike other kinds of definition statements, `define-public` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nPublic functions _must_ return a ResponseType (using either `ok` or `err`). Any datamap modifications performed by a public function is aborted if the function returns an `err` type. Public functions may be invoked by other contracts via `contract-call?`.\n**example:**\nCopy```\n(define-public (hello-world (input int))  \n  (begin \n    (print (+ 2 input))\n    (ok input)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-read-only)\ndefine-read-only‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-read-only (function-name (arg-name-0 arg-type-0) (arg-name-1 arg-type-1) ...) function-body)`\n**description:**\n`define-read-only` is used to define a _public read-only_ function for a smart contract. Such functions are callable from other smart contracts.\nLike other kinds of definition statements, `define-read-only` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nRead-only functions may return any type. However, read-only functions may not perform any datamap modifications, or call any functions which perform such modifications. This is enforced both during type checks and during the execution of the function. Public read-only functions may be invoked by other contracts via `contract-call?`.\n**example:**\nCopy```\n(define-read-only (just-return-one-hundred)  \n  (* 10 10))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-trait)\ndefine-trait‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, [MethodSignature]`\n**output:** `Not Applicable`\n**signature:** `(define-trait trait-name ((func1-name (arg1-type arg2-type ...) (return-type))))`\n**description:**\n`define-trait` is used to define a new trait definition for use in a smart contract. Other contracts can implement a given trait and then have their contract identifier being passed as a function argument in order to be called dynamically with `contract-call?`.\nTraits are defined with a name, and a list functions, defined with a name, a list of argument types, and return type.\nIn Clarity 1, a trait type can be used to specify the type of a function parameter. A parameter with a trait type can be used as the target of a dynamic `contract-call?`. A principal literal (e.g. `ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.foo`) may be passed as a trait parameter if the specified contract implements all of the functions specified by the trait. A trait value (originating from a parameter with trait type) may also be passed as a trait parameter if the types are the same.\nBeginning in Clarity 2, a trait can be used in all of the same ways that a built-in type can be used, except that it cannot be stored in a data var or map, since this would inhibit static analysis. This means that a trait type can be embedded in a compound type (e.g. `(optional <my-trait>)` or `(list 4 <my-trait>)`) and a trait value can be bound to a variable in a `let` or `match` expression. In addition to the principal literal and trait value with matching type allowed in Clarity 1, Clarity 2 also supports implicit casting from a compatible trait, meaning that a value of type `trait-a` may be passed to a parameter with type `trait-b` if `trait-a` includes all of the requirements of `trait-b` (and optionally additional functions).\nLike other kinds of definition statements, `define-trait` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-trait token-trait    \n  ((transfer? (principal principal uint) (response uint uint)) \n  (get-balance (principal) (response uint uint))))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#element-at)\nelement-at‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, uint`\n**output:** `(optional A)`\n**signature:** `(element-at? sequence index)`\n**description:**\nThe `element-at?` function returns the element at `index` in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. In Clarity1, `element-at` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(element-at? \"blockstack\" u5) ;; Returns (some \"s\")\n(element-at? (list 1 2 3 4 5) u5) ;; Returns none\n(element-at? (list 1 2 3 4 5) (+ u1 u2)) ;; Returns (some 4)\n(element-at? \"abcd\" u1) ;; Returns (some \"b\")\n(element-at? 0xfb01 u1) ;; Returns (some 0x01)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#element-at-1)\nelement-at?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, uint`\n**output:** `(optional A)`\n**signature:** `(element-at? sequence index)`\n**description:**\nThe `element-at?` function returns the element at `index` in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. In Clarity1, `element-at` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(element-at? \"blockstack\" u5) ;; Returns (some \"s\")\n(element-at? (list 1 2 3 4 5) u5) ;; Returns none\n(element-at? (list 1 2 3 4 5) (+ u1 u2)) ;; Returns (some 4)\n(element-at? \"abcd\" u1) ;; Returns (some \"b\")\n(element-at? 0xfb01 u1) ;; Returns (some 0x01)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#err)\nerr‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `(response A B)`\n**signature:** `(err value)`\n**description:**\nThe `err` function constructs a response type from the input value. Use `err` for creating return values in public functions. An _err_ value indicates that any database changes during the processing of the function should be rolled back.\n**example:**\nCopy```\n(err true) ;; Returns (err true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#filter)\nfilter‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Function(A) -> bool, sequence_A`\n**output:** `sequence_A`\n**signature:** `(filter func sequence)`\n**description:**\nThe `filter` function applies the input function `func` to each element of the input sequence, and returns the same sequence with any elements removed for which `func` returned `false`. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. The `func` argument must be a literal function name.\n**example:**\nCopy```\n(filter not (list true false true false)) ;; Returns (false false)\n(define-private (is-a (char (string-utf8 1))) \n  (is-eq char u\"a\"))\n(filter is-a u\"acabd\") ;; Returns u\"aa\"\n(define-private (is-zero (char (buff 1)))\n  (is-eq char 0x00))\n(filter is-zero 0x00010002) ;; Returns 0x0000\n```\n\n## \n[](https://docs.stacks.co/reference/functions#fold)\nfold‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Function(A, B) -> B, sequence_A, B`\n**output:** `B`\n**signature:** `(fold func sequence_A initial_B)`\n**description:**\nThe `fold` function condenses `sequence_A` into a value of type `B` by recursively applies the function `func` to each element of the input sequence _and_ the output of a previous application of `func`.\n`fold` uses `initial_B` in the initial application of `func`, along with the first element of `sequence_A`. The resulting value of type `B` is used for the next application of `func`, along with the next element of `sequence_A` and so on. `fold` returns the last value of type `B` returned by these successive applications `func`.\nApplicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. The `func` argument must be a literal function name.\n**example:**\nCopy```\n(fold * (list 2 2 2) 1) ;; Returns 8\n(fold * (list 2 2 2) 0) ;; Returns 0\n;; calculates (- 11 (- 7 (- 3 2)))\n(fold - (list 3 7 11) 2) ;; Returns 5 \n(define-private (concat-string (a (string-ascii 20)) (b (string-ascii 20))) \n  (unwrap-panic (as-max-len? (concat a b) u20)))\n(fold concat-string \"cdef\" \"ab\")   ;; Returns \"fedcab\"\n(fold concat-string (list \"cd\" \"ef\") \"ab\")   ;; Returns \"efcdab\"\n(define-private (concat-buff (a (buff 20)) (b (buff 20)))\n  (unwrap-panic (as-max-len? (concat a b) u20)))\n(fold concat-buff 0x03040506 0x0102)   ;; Returns 0x060504030102\n```\n\n## \n[](https://docs.stacks.co/reference/functions#from-consensus-buff)\nfrom-consensus-buff?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `type-signature(t), buff`\n**output:** `(optional t)`\n**signature:** `(from-consensus-buff? type-signature buffer)`\n**description:**\n`from-consensus-buff?` is a special function that will deserialize a buffer into a Clarity value, using the SIP-005 serialization of the Clarity value. The type that `from-consensus-buff?` tries to deserialize into is provided by the first parameter to the function. If it fails to deserialize the type, the method returns `none`.\n**example:**\nCopy```\n(from-consensus-buff? int 0x0000000000000000000000000000000001) ;; Returns (some 1)\n(from-consensus-buff? uint 0x0000000000000000000000000000000001) ;; Returns none \n(from-consensus-buff? uint 0x0100000000000000000000000000000001) ;; Returns (some u1)\n(from-consensus-buff? bool 0x0000000000000000000000000000000001) ;; Returns none\n(from-consensus-buff? bool 0x03) ;; Returns (some true)\n(from-consensus-buff? bool 0x04) ;; Returns (some false)\n(from-consensus-buff? principal 0x051fa46ff88886c2ef9762d970b4d2c63678835bd39d) ;; Returns (some SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(from-consensus-buff? { abc: int, def: int } 0x0c00000002036162630000000000000000000000000000000003036465660000000000000000000000000000000004) ;; Returns (some (tuple (abc 3) (def 4)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-burn)\nft-burn?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, uint, principal`\n**output:** `(response bool uint)`\n**signature:** `(ft-burn? token-name amount sender)`\n**description:**\n`ft-burn?` is used to decrease the token balance for the `sender` principal for a token type defined using `define-fungible-token`. The decreased token balance is _not_ transferred to another principal, but rather destroyed, reducing the circulating supply.\nOn a successful burn, it returns `(ok true)`. In the event of an unsuccessful burn it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to burn this amount or the amount specified is not positive\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(ft-burn? stackaroo u50 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-get-balance)\nft-get-balance‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, principal`\n**output:** `uint`\n**signature:** `(ft-get-balance token-name principal)`\n**description:**\n`ft-get-balance` returns `token-name` balance of the principal `principal`. The token type must have been defined using `define-fungible-token`.\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(ft-get-balance stackaroo 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns u100\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-get-supply)\nft-get-supply‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName`\n**output:** `uint`\n**signature:** `(ft-get-supply token-name)`\n**description:**\n`ft-get-balance` returns `token-name` circulating supply. The token type must have been defined using `define-fungible-token`.\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(ft-get-supply stackaroo) ;; Returns u100\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-mint)\nft-mint?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, uint, principal`\n**output:** `(response bool uint)`\n**signature:** `(ft-mint? token-name amount recipient)`\n**description:**\n`ft-mint?` is used to increase the token balance for the `recipient` principal for a token type defined using `define-fungible-token`. The increased token balance is _not_ transfered from another principal, but rather minted.\nIf a non-positive amount is provided to mint, this function returns `(err 1)`. Otherwise, on successfully mint, it returns `(ok true)`.\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-transfer)\nft-transfer?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, uint, principal, principal`\n**output:** `(response bool uint)`\n**signature:** `(ft-transfer? token-name amount sender recipient)`\n**description:**\n`ft-transfer?` is used to increase the token balance for the `recipient` principal for a token type defined using `define-fungible-token` by debiting the `sender` principal. In contrast to `stx-transfer?`, any user can transfer the assets. When used, relevant guards need to be added.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to transfer `(err u2)` -- `sender` and `recipient` are the same principal `(err u3)` -- amount to send is non-positive\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(ft-transfer? stackaroo u50 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(ft-transfer? stackaroo u60 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (err u1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get)\nget‚Äã\nIntroduced in: **Clarity 1**\n**input:** `KeyName, (tuple) | (optional (tuple))`\n**output:** `A`\n**signature:** `(get key-name tuple)`\n**description:**\nThe `get` function fetches the value associated with a given key from the supplied typed tuple. If an `Optional` value is supplied as the inputted tuple, `get` returns an `Optional` type of the specified key in the tuple. If the supplied option is a `(none)` option, get returns `(none)`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(get id (tuple (name \"blockstack\") (id 1337))) ;; Returns 1337\n(get id (map-get? names-map (tuple (name \"blockstack\")))) ;; Returns (some 1337)\n(get id (map-get? names-map (tuple (name \"non-existent\")))) ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-block-info)\nget-block-info?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `BlockInfoPropertyName, uint`\n**output:** `(optional buff) | (optional uint)`\n**signature:** `(get-block-info? prop-name block-height)`\n**description:** In Clarity 3, `get-block-info?` is removed. In its place, `get-stacks-block-info?` can be used to retrieve information about a Stacks block and `get-tenure-info?` can be used to get information pertaining to the tenure. The `get-block-info?` function fetches data for a block of the given _Stacks_ block height. The value and type returned are determined by the specified `BlockInfoPropertyName`. If the provided `block-height` does not correspond to an existing block prior to the current block, the function returns `none`. The currently available property names are as follows:\n  * `burnchain-header-hash`: This property returns a `(buff 32)` value containing the header hash of the burnchain (Bitcoin) block that selected the Stacks block at the given Stacks chain height.\n  * `id-header-hash`: This property returns a `(buff 32)` value containing the _index block hash_ of a Stacks block. This hash is globally unique, and is derived from the block hash and the history of accepted PoX operations. This is also the block hash value you would pass into `(at-block)`.\n  * `header-hash`: This property returns a `(buff 32)` value containing the header hash of a Stacks block, given a Stacks chain height. *_WARNING_ this hash is not guaranteed to be globally unique, since the same Stacks block can be mined in different PoX forks. If you need global uniqueness, you should use `id-header-hash`.\n  * `miner-address`: This property returns a `principal` value corresponding to the miner of the given block. **WARNING** In Stacks 2.1, this is not guaranteed to be the same `principal` that received the block reward, since Stacks 2.1 supports coinbase transactions that pay the reward to a contract address. This is merely the address of the `principal` that produced the block.\n  * `time`: This property returns a `uint` value of the block header time field. This is a Unix epoch timestamp in seconds which roughly corresponds to when the block was mined. This timestamp comes from the burnchain block. **Note** : this does not increase monotonically with each block and block times are accurate only to within two hours. See [BIP113](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki) for more information. For blocks mined after epoch 3.0, all Stacks blocks in one tenure will share the same timestamp. To get the Stacks block time for a block in epoch 3.0+, use `get-stacks-block-info?`.\n  * `vrf-seed`: This property returns a `(buff 32)` value of the VRF seed for the corresponding block.\n  * `block-reward`: This property returns a `uint` value for the total block reward of the indicated Stacks block. This value is only available once the reward for the block matures. That is, the latest `block-reward` value available is at least 101 Stacks blocks in the past (on mainnet). The reward includes the coinbase, the anchored block's transaction fees, and the shares of the confirmed and produced microblock transaction fees earned by this block's miner. Note that this value may be smaller than the Stacks coinbase at this height, because the miner may have been punished with a valid `PoisonMicroblock` transaction in the event that the miner published two or more microblock stream forks. Added in Clarity 2.\n  * `miner-spend-total`: This property returns a `uint` value for the total number of burnchain tokens (i.e. satoshis) spent by all miners trying to win this block. Added in Clarity 2.\n  * `miner-spend-winner`: This property returns a `uint` value for the number of burnchain tokens (i.e. satoshis) spent by the winning miner for this Stacks block. Note that this value is less than or equal to the value for `miner-spend-total` at the same block height. Added in Clarity 2.\n\n\n**example:**\nCopy```\n(get-block-info? time u0) ;; Returns (some u1557860301) \n(get-block-info? header-hash u0) ;; Returns (some 0x374708fff7719dd5979ec875d56cd2286f6d3cf7ec317a3b25632aab28ec37bb)\n(get-block-info? vrf-seed u0) ;; Returns (some 0xf490de2920c8a35fabeb13208852aa28c76f9be9b03a4dd2b3c075f7a26923b4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-burn-block-info)\nget-burn-block-info?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `BurnBlockInfoPropertyName, uint`\n**output:** `(optional buff) | (optional (tuple (addrs (list 2 (tuple (hashbytes (buff 32)) (version (buff 1))))) (payout uint)))`\n**signature:** `(get-burn-block-info? prop-name block-height)`\n**description:**\nThe `get-burn-block-info?` function fetches data for a block of the given _burnchain_ block height. The value and type returned are determined by the specified `BlockInfoPropertyName`. Valid values for `block-height` only include heights between the burnchain height at the time the Stacks chain was launched, and the last-processed burnchain block. If the `block-height` argument falls outside of this range, then `none` shall be returned.\nThe following `BlockInfoPropertyName` values are defined:\n  * The `header-hash` property returns a 32-byte buffer representing the header hash of the burnchain block at burnchain height `block-height`.\n  * The `pox-addrs` property returns a tuple with two items: a list of up to two PoX addresses that received a PoX payout at that block height, and the amount of burnchain tokens paid to each address (note that per the blockchain consensus rules, each PoX payout will be the same for each address in the block-commit transaction). The list will include burn addresses -- that is, the unspendable addresses that miners pay to when there are no PoX addresses left to be paid. During the prepare phase, there will be exactly one burn address reported. During the reward phase, up to two burn addresses may be reported in the event that some PoX reward slots are not claimed.\n\n\nThe `addrs` list contains the same PoX address values passed into the PoX smart contract:\n  * They each have type signature `(tuple (hashbytes (buff 32)) (version (buff 1)))`\n  * The `version` field can be any of the following:\n    * `0x00` means this is a p2pkh address, and `hashbytes` is the 20-byte hash160 of a single public key\n    * `0x01` means this is a p2sh address, and `hashbytes` is the 20-byte hash160 of a redeemScript script\n    * `0x02` means this is a p2wpkh-p2sh address, and `hashbytes` is the 20-byte hash160 of a p2wpkh witness script\n    * `0x03` means this is a p2wsh-p2sh address, and `hashbytes` is the 20-byte hash160 of a p2wsh witness script\n    * `0x04` means this is a p2wpkh address, and `hashbytes` is the 20-byte hash160 of the witness script\n    * `0x05` means this is a p2wsh address, and `hashbytes` is the 32-byte sha256 of the witness script\n    * `0x06` means this is a p2tr address, and `hashbytes` is the 32-byte sha256 of the witness script\n\n\n**example:**\nCopy```\n(get-burn-block-info? header-hash u677050) ;; Returns (some 0xe67141016c88a7f1203eca0b4312f2ed141531f59303a1c267d7d83ab6b977d8)\n(get-burn-block-info? pox-addrs u677050) ;; Returns (some (tuple (addrs ( (tuple (hashbytes 0x395f3643cea07ec4eec73b4d9a973dcce56b9bf1) (version 0x00)) (tuple (hashbytes 0x7c6775e20e3e938d2d7e9d79ac310108ba501ddb) (version 0x01)))) (payout u123)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-stacks-block-info)\nget-stacks-block-info?\nIntroduced in: **Clarity 3**\n**input:** `StacksBlockInfoPropertyName, uint`\n**output:** `(optional buff), (optional uint)`\n**signature:** `(get-stacks-block-info? prop-name stacks-block-height)`\n**description:**\nThe `get-stacks-block-info?` function fetches data for a block of the given _Stacks_ block height. The value and type returned are determined by the specified `StacksBlockInfoPropertyName`. If the provided `stacks-block-height` does not correspond to an existing block prior to the current block, the function returns `none`. The currently available property names are as follows:\n  * `id-header-hash`: This property returns a `(buff 32)` value containing the _index block hash_ of a Stacks block. This hash is globally unique, and is derived from the block hash and the history of accepted PoX operations. This is also the block hash value you would pass into `(at-block)`.\n  * `header-hash`: This property returns a `(buff 32)` value containing the header hash of a Stacks block, given a Stacks chain height. **WARNING** this hash is not guaranteed to be globally unique, since the same Stacks block can be mined in different PoX forks. If you need global uniqueness, you should use `id-header-hash`.\n  * `time`: This property returns a `uint` value of the block header time field. This is a Unix epoch timestamp in seconds which roughly corresponds to when the block was mined. For a block mined before epoch 3.0, this timestamp comes from the burnchain block. **Note** : this does not increase monotonically with each block and block times are accurate only to within two hours. See [BIP113](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki) for more information. For a block mined after epoch 3.0, this timestamp comes from the Stacks block header. **Note** : this is the time, according to the miner, when the mining of this block started, but is not guaranteed to be accurate. This time will be validated by the signers to be:\n  * Greater than the timestamp of the previous block\n  * At most 15 seconds into the future (according to their own local clocks)\n\n\n**example:**\nCopy```\n(get-stacks-block-info? time u0) ;; Returns (some u1557860301)\n(get-stacks-block-info? header-hash u0) ;; Returns (some 0x374708fff7719dd5979ec875d56cd2286f6d3cf7ec317a3b25632aab28ec37bb)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-tenure-info)\nget-tenure-info?\nIntroduced in: **Clarity 3**\n**input:** `TenureInfoPropertyName, uint`\n**output:** `(optional buff) | (optional uint)`\n**signature:** `(get-tenure-info? prop-name stacks-block-height)`\n**description:**\nThe `get-tenure-info?` function fetches data for the tenure at the given block height. The value and type returned are determined by the specified `TenureInfoPropertyName`. If the provided `stacks-block-height` does not correspond to an existing block prior to the current block, the function returns `none`. The currently available property names are as follows:\n  * `burnchain-header-hash`: This property returns a `(buff 32)` value containing the header hash of the burnchain (Bitcoin) block that selected the tenure at the given height.\n  * `miner-address`: This property returns a `principal` value corresponding to the miner of the given tenure. **WARNING** This is not guaranteed to be the same `principal` that received the block reward, since Stacks 2.1+ supports coinbase transactions that pay the reward to a contract address. This is merely the address of the `principal` that produced the tenure.\n  * `time`: This property returns a `uint` Unix epoch timestamp in seconds which roughly corresponds to when the tenure was started. This timestamp comes from the burnchain block. **Note** : this does not increase monotonically with each tenure and tenure times are accurate only to within two hours. See [BIP113](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki) for more information.\n  * `vrf-seed`: This property returns a `(buff 32)` value of the VRF seed for the corresponding tenure.\n  * `block-reward`: This property returns a `uint` value for the total block reward of the indicated tenure. This value is only available once the reward for the tenure matures. That is, the latest `block-reward` value available is at least 101 Stacks blocks in the past (on mainnet). The reward includes the coinbase, the anchored tenure's transaction fees, and the shares of the confirmed and produced microblock transaction fees earned by this block's miner. Note that this value may be smaller than the Stacks coinbase at this height, because the miner may have been punished with a valid `PoisonMicroblock` transaction in the event that the miner published two or more microblock stream forks.\n  * `miner-spend-total`: This property returns a `uint` value for the total number of burnchain tokens (i.e. satoshis) spent by all miners trying to win this tenure.\n  * `miner-spend-winner`: This property returns a `uint` value for the number of burnchain tokens (i.e. satoshis) spent by the winning miner for this tennure. Note that this value is less than or equal to the value for `miner-spend-total` at the same tenure height.\n\n\n**example:**\nCopy```\n(get-tenure-info? time u0) ;; Returns (some u1557860301)\n(get-tenure-info? vrf-seed u0) ;; Returns (some 0xf490de2920c8a35fabeb13208852aa28c76f9be9b03a4dd2b3c075f7a26923b4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#hash160)\nhash160‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 20)`\n**signature:** `(hash160 value)`\n**description:**\nThe `hash160` function computes `RIPEMD160(SHA256(x))` of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(hash160 0) ;; Returns 0xe4352f72356db555721651aa612e00379167b30f\n```\n\n## \n[](https://docs.stacks.co/reference/functions#if)\nif‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool, A, A`\n**output:** `A`\n**signature:** `(if bool1 expr1 expr2)`\n**description:**\nThe `if` function admits a boolean argument and two expressions which must return the same type. In the case that the boolean input is `true`, the `if` function evaluates and returns `expr1`. If the boolean input is `false`, the `if` function evaluates and returns `expr2`.\n**example:**\nCopy```\n(if true 1 2) ;; Returns 1\n(if (> 1 2) 1 2) ;; Returns 2\n```\n\n## \n[](https://docs.stacks.co/reference/functions#impl-trait)\nimpl-trait‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TraitIdentifier`\n**output:** `Not Applicable`\n**signature:** `(impl-trait trait-identifier)`\n**description:**\n`impl-trait` can be use for asserting that a contract is fully implementing a given trait. Additional checks are being performed when the contract is being published, rejecting the deployment if the contract is violating the trait specification.\nTrait identifiers can either be using the sugared syntax (.token-a.token-trait), or be fully qualified ('SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait).\nLike other kinds of definition statements, `impl-trait` may only be used at the top level of a smart contract definition (i.e., you cannot put such a statement in the middle of a function body).\n**example:**\nCopy```\n(impl-trait 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait)\n(define-public (get-balance (account principal))  \n  (ok u0))\n(define-public (transfer? (from principal) (to principal) (amount uint))  \n  (ok u0))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#index-of)\nindex-of‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, A`\n**output:** `(optional uint)`\n**signature:** `(index-of? sequence item)`\n**description:**\nThe `index-of?` function returns the first index at which `item` can be found, using `is-eq` checks, in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. If the target item is not found in the sequence (or if an empty string or buffer is supplied), this function returns `none`. In Clarity1, `index-of` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(index-of? \"blockstack\" \"b\") ;; Returns (some u0)\n(index-of? \"blockstack\" \"k\") ;; Returns (some u4)\n(index-of? \"blockstack\" \"\") ;; Returns none\n(index-of? (list 1 2 3 4 5) 6) ;; Returns none\n(index-of? 0xfb01 0x01) ;; Returns (some u1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#index-of-1)\nindex-of?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, A`\n**output:** `(optional uint)`\n**signature:** `(index-of? sequence item)`\n**description:**\nThe `index-of?` function returns the first index at which `item` can be found, using `is-eq` checks, in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. If the target item is not found in the sequence (or if an empty string or buffer is supplied), this function returns `none`. In Clarity1, `index-of` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(index-of? \"blockstack\" \"b\") ;; Returns (some u0)\n(index-of? \"blockstack\" \"k\") ;; Returns (some u4)\n(index-of? \"blockstack\" \"\") ;; Returns none\n(index-of? (list 1 2 3 4 5) 6) ;; Returns none\n(index-of? 0xfb01 0x01) ;; Returns (some u1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#int-to-ascii)\nint-to-ascii‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int | uint`\n**output:** `(string-ascii 40)`\n**signature:** `(int-to-ascii (int|uint))`\n**description:**\nConverts an integer, either `int` or `uint`, to a `string-ascii` string-value representation.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(int-to-ascii 1) ;; Returns \"1\"\n(int-to-ascii u1) ;; Returns \"1\"\n(int-to-ascii -1) ;; Returns \"-1\"\n```\n\n## \n[](https://docs.stacks.co/reference/functions#int-to-utf8)\nint-to-utf8‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int | uint`\n**output:** `(string-utf8 40)`\n**signature:** `(int-to-utf8 (int|uint))`\n**description:**\nConverts an integer, either `int` or `uint`, to a `string-utf8` string-value representation.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(int-to-utf8 1) ;; Returns u\"1\"\n(int-to-utf8 u1) ;; Returns u\"1\"\n(int-to-utf8 -1) ;; Returns u\"-1\"\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-eq)\nis-eq‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A, A, ...`\n**output:** `bool`\n**signature:** `(is-eq v1 v2...)`\n**description:**\nCompares the inputted values, returning `true` if they are all equal. Note that _unlike_ the `(and ...)` function, `(is-eq ...)` will _not_ short-circuit. All values supplied to is-eq _must_ be the same type.\n**example:**\nCopy```\n(is-eq 1 1) ;; Returns true\n(is-eq true false) ;; Returns false\n(is-eq \"abc\" 234 234) ;; Throws type error\n(is-eq \"abc\" \"abc\") ;; Returns true\n(is-eq 0x0102 0x0102) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-err)\nis-err‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(response A B)`\n**output:** `bool`\n**signature:** `(is-err value)`\n**description:**\n`is-err` tests a supplied response value, returning `true` if the response was an `err`, and `false` if it was an `ok`.\n**example:**\nCopy```\n(is-err (ok 1)) ;; Returns false\n(is-err (err 1)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-none)\nis-none‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A)`\n**output:** `bool`\n**signature:** `(is-none value)`\n**description:**\n`is-none` tests a supplied option value, returning `true` if the option value is `(none)`, and `false` if it is a `(some ...)`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(is-none (get id (map-get? names-map { name: \"blockstack\" }))) ;; Returns false\n(is-none (get id (map-get? names-map { name: \"non-existant\" }))) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-ok)\nis-ok‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(response A B)`\n**output:** `bool`\n**signature:** `(is-ok value)`\n**description:**\n`is-ok` tests a supplied response value, returning `true` if the response was `ok`, and `false` if it was an `err`.\n**example:**\nCopy```\n(is-ok (ok 1)) ;; Returns true\n(is-ok (err 1)) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-some)\nis-some‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A)`\n**output:** `bool`\n**signature:** `(is-some value)`\n**description:**\n`is-some` tests a supplied option value, returning `true` if the option value is `(some ...)`, and `false` if it is a `none`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(is-some (get id (map-get? names-map { name: \"blockstack\" }))) ;; Returns true\n(is-some (get id (map-get? names-map { name: \"non-existant\" }))) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-standard)\nis-standard‚Äã\nIntroduced in: **Clarity 2**\n**input:** `principal`\n**output:** `bool`\n**signature:** `(is-standard standard-or-contract-principal)`\n**description:**\nTests whether `standard-or-contract-principal` _matches_ the current network type, and therefore represents a principal that can spend tokens on the current network type. That is, the network is either of type `mainnet`, or `testnet`. Only `SPxxxx` and `SMxxxx` _c32check form_ addresses can spend tokens on a mainnet, whereas only `STxxxx` and `SNxxxx` _c32check forms_ addresses can spend tokens on a testnet. All addresses can _receive_ tokens, but only principal _c32check form_ addresses that match the network type can _spend_ tokens on the network. This method will return `true` if and only if the principal matches the network type, and false otherwise.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(is-standard 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6) ;; returns true on testnet and false on mainnet\n(is-standard 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6.foo) ;; returns true on testnet and false on mainnet\n(is-standard 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY) ;; returns true on mainnet and false on testnet\n(is-standard 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY.foo) ;; returns true on mainnet and false on testnet\n(is-standard 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; returns false on both mainnet and testnet\n```\n\n## \n[](https://docs.stacks.co/reference/functions#keccak256)\nkeccak256‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 32)`\n**signature:** `(keccak256 value)`\n**description:**\nThe `keccak256` function computes `KECCAK256(value)` of the inputted value. Note that this differs from the `NIST SHA-3` (that is, FIPS 202) standard. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(keccak256 0) ;; Returns 0xf490de2920c8a35fabeb13208852aa28c76f9be9b03a4dd2b3c075f7a26923b4\n```\n\n## \n[](https://docs.stacks.co/reference/functions#len)\nlen‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A`\n**output:** `uint`\n**signature:** `(len sequence)`\n**description:**\nThe `len` function returns the length of a given sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`.\n**example:**\nCopy```\n(len \"blockstack\") ;; Returns u10\n(len (list 1 2 3 4 5)) ;; Returns u5\n(len 0x010203) ;; Returns u3\n```\n\n## \n[](https://docs.stacks.co/reference/functions#let)\nlet‚Äã\nIntroduced in: **Clarity 1**\n**input:** `((name1 AnyType) (name2 AnyType) ...), AnyType, ... A`\n**output:** `A`\n**signature:** `(let ((name1 expr1) (name2 expr2) ...) expr-body1 expr-body2 ... expr-body-last)`\n**description:**\nThe `let` function accepts a list of `variable name` and `expression` pairs, evaluating each expression and _binding_ it to the corresponding variable name. `let` bindings are sequential: when a `let` binding is evaluated, it may refer to prior binding. The _context_ created by this set of bindings is used for evaluating its body expressions. The let expression returns the value of the last such body expression. Note: intermediary statements returning a response type must be checked\n**example:**\nCopy```\n(let \n  ( (a 2) (b (+ 5 6 7))) \n  (print a) \n  (print b) \n  (+ a b)) ;; Returns 20\n(let \n  ( (a 5) (c (+ a 1)) (d (+ c 1)) (b (+ a c d))) \n  (print a) \n  (print b) \n  (+ a b)) ;; Returns 23\n```\n\n## \n[](https://docs.stacks.co/reference/functions#list)\nlist‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A, ...`\n**output:** `(list A)`\n**signature:** `(list expr1 expr2 expr3 ...)`\n**description:**\nThe `list` function constructs a list composed of the inputted values. Each supplied value must be of the same type.\n**example:**\nCopy```\n(list (+ 1 2) 4 5) ;; Returns (3 4 5)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#log2)\nlog2‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int | uint`\n**output:** `int | uint`\n**signature:** `(log2 n)`\n**description:**\nReturns the power to which the number 2 must be raised to to obtain the value `n`, rounded down to the nearest integer. Fails on a negative numbers.\n**example:**\nCopy```\n(log2 u8) ;; Returns u3\n(log2 8) ;; Returns 3\n(log2 u1) ;; Returns u0\n(log2 1000) ;; Returns 9\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map)\nmap‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Function(A, B, ..., N) -> X, sequence_A, sequence_B, ..., sequence_N`\n**output:** `(list X)`\n**signature:** `(map func sequence_A sequence_B ... sequence_N)`\n**description:**\nThe `map` function applies the function `func` to each corresponding element of the input sequences, and outputs a _list_ of the same type containing the outputs from those function applications. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. The `func` argument must be a literal function name. Also, note that, no matter what kind of sequences the inputs are, the output is always a list.\n**example:**\nCopy```\n(map not (list true false true false)) ;; Returns (false true false true)\n(map + (list 1 2 3) (list 1 2 3) (list 1 2 3)) ;; Returns (3 6 9)\n(define-private (a-or-b (char (string-utf8 1))) \n  (if (is-eq char u\"a\") u\"a\" u\"b\"))\n(map a-or-b u\"aca\") ;; Returns (u\"a\" u\"b\" u\"a\")\n(define-private (zero-or-one (char (buff 1))) \n  (if (is-eq char 0x00) 0x00 0x01))\n(map zero-or-one 0x000102) ;; Returns (0x00 0x01 0x01)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-delete)\nmap-delete‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple`\n**output:** `bool`\n**signature:** `(map-delete map-name key-tuple)`\n**description:**\nThe `map-delete` function removes the value associated with the input key for the given map. If an item exists and is removed, the function returns `true`. If a value did not exist for this key in the data map, the function returns `false`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(map-delete names-map { name: \"blockstack\" }) ;; Returns true\n(map-delete names-map { name: \"blockstack\" }) ;; Returns false\n(map-delete names-map (tuple (name \"blockstack\"))) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-get)\nmap-get?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple`\n**output:** `(optional (tuple))`\n**signature:** `(map-get? map-name key-tuple)`\n**description:**\nThe `map-get?` function looks up and returns an entry from a contract's data map. The value is looked up using `key-tuple`. If there is no value associated with that key in the data map, the function returns a `none` option. Otherwise, it returns `(some value)`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(map-get? names-map (tuple (name \"blockstack\"))) ;; Returns (some (tuple (id 1337)))\n(map-get? names-map { name: \"blockstack\" }) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-insert)\nmap-insert‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple_A, tuple_B`\n**output:** `bool`\n**signature:** `(map-insert map-name key-tuple value-tuple)`\n**description:**\nThe `map-insert` function sets the value associated with the input key to the inputted value if and only if there is not already a value associated with the key in the map. If an insert occurs, the function returns `true`. If a value already existed for this key in the data map, the function returns `false`.\nNote: the `value-tuple` requires 1 additional byte for storage in the materialized blockchain state, and therefore the maximum size of a value that may be inserted into a map is MAX_CLARITY_VALUE - 1.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns false\n(map-insert names-map (tuple (name \"blockstack\")) (tuple (id 1337))) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-set)\nmap-set‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple_A, tuple_B`\n**output:** `bool`\n**signature:** `(map-set map-name key-tuple value-tuple)`\n**description:**\nThe `map-set` function sets the value associated with the input key to the inputted value. This function performs a _blind_ update; whether or not a value is already associated with the key, the function overwrites that existing association.\nNote: the `value-tuple` requires 1 additional byte for storage in the materialized blockchain state, and therefore the maximum size of a value that may be inserted into a map is MAX_CLARITY_VALUE - 1.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(map-set names-map (tuple (name \"blockstack\")) (tuple (id 1337))) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#match)\nmatch‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A) name expression expression | (response A B) name expression name expression`\n**output:** `C`\n**signature:** `(match opt-input some-binding-name some-branch none-branch) | (match-resp input ok-binding-name ok-branch err-binding-name err-branch)`\n**description:**\nThe `match` function is used to test and destructure optional and response types.\nIf the `input` is an optional, it tests whether the provided `input` is a `some` or `none` option, and evaluates `some-branch` or `none-branch` in each respective case.\nWithin the `some-branch`, the _contained value_ of the `input` argument is bound to the provided `some-binding-name` name.\nOnly _one_ of the branches will be evaluated (similar to `if` statements).\nIf the `input` is a response, it tests whether the provided `input` is an `ok` or `err` response type, and evaluates `ok-branch` or `err-branch` in each respective case.\nWithin the `ok-branch`, the _contained ok value_ of the `input` argument is bound to the provided `ok-binding-name` name.\nWithin the `err-branch`, the _contained err value_ of the `input` argument is bound to the provided `err-binding-name` name.\nOnly _one_ of the branches will be evaluated (similar to `if` statements).\nNote: Type checking requires that the type of both the ok and err parts of the response object be determinable. For situations in which one of the parts of a response is untyped, you should use `unwrap-panic` or `unwrap-err-panic` instead of `match`.\n**example:**\nCopy```\n(define-private (add-10 (x (optional int)))  \n  (match x \n    value (+ 10 value)\n    10))\n(add-10 (some 5)) ;; Returns 15\n(add-10 none) ;; Returns 10\n(define-private (add-or-pass-err (x (response int (string-ascii 10))) (to-add int))  \n  (match x\n    value (ok (+ to-add value))\n    err-value (err err-value)))\n(add-or-pass-err (ok 5) 20) ;; Returns (ok 25)\n(add-or-pass-err (err \"ERROR\") 20) ;; Returns (err \"ERROR\")\n```\n\n## \n[](https://docs.stacks.co/reference/functions#merge)\nmerge‚Äã\nIntroduced in: **Clarity 1**\n**input:** `tuple, tuple`\n**output:** `tuple`\n**signature:** `(merge tuple { key1: val1 })`\n**description:**\nThe `merge` function returns a new tuple with the combined fields, without mutating the supplied tuples.\n**example:**\nCopy```\n(define-map users { id: int } { name: (string-ascii 12), address: (optional principal) })\n(map-insert users { id: 1337 } { name: \"john\", address: none }) ;; Returns true\n(let \n  ( (user (unwrap-panic (map-get? users { id: 1337 }))))    \n  (merge user { address: (some 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) })) ;; Returns (tuple (address (some SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF)) (name \"john\"))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#mod)\nmod‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `int | uint`\n**signature:** `(mod i1 i2)`\n**description:**\nReturns the integer remainder from integer dividing `i1` by `i2`. In the event of a division by zero, throws a runtime error.\n**example:**\nCopy```\n(mod 2 3) ;; Returns 2\n(mod 5 2) ;; Returns 1\n(mod 7 1) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-burn)\nnft-burn?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A, principal`\n**output:** `(response bool uint)`\n**signature:** `(nft-burn? asset-class asset-identifier sender)`\n**description:**\n`nft-burn?` is used to burn an asset that the `sender` principal owns. The asset must have been defined using `define-non-fungible-token`, and the supplied `asset-identifier` must be of the same type specified in that definition.\nOn a successful burn, it returns `(ok true)`. In the event of an unsuccessful burn it returns one of the following error codes:\n`(err u1)` -- `sender` does not own the specified asset `(err u3)` -- the asset specified by `asset-identifier` does not exist\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(nft-burn? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-get-owner)\nnft-get-owner?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A`\n**output:** `(optional principal)`\n**signature:** `(nft-get-owner? asset-class asset-identifier)`\n**description:**\n`nft-get-owner?` returns the owner of an asset, identified by `asset-identifier`, or `none` if the asset does not exist. The asset type must have been defined using `define-non-fungible-token`, and the supplied `asset-identifier` must be of the same type specified in that definition.\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF)\n(nft-get-owner? stackaroo \"Roo\") ;; Returns (some SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF)\n(nft-get-owner? stackaroo \"Too\") ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-mint)\nnft-mint?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A, principal`\n**output:** `(response bool uint)`\n**signature:** `(nft-mint? asset-class asset-identifier recipient)`\n**description:**\n`nft-mint?` is used to instantiate an asset and set that asset's owner to the `recipient` principal. The asset must have been defined using `define-non-fungible-token`, and the supplied `asset-identifier` must be of the same type specified in that definition.\nIf an asset identified by `asset-identifier` _already exists_ , this function will return an error with the following error code:\n`(err u1)`\nOtherwise, on successfuly mint, it returns `(ok true)`.\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-transfer)\nnft-transfer?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A, principal, principal`\n**output:** `(response bool uint)`\n**signature:** `(nft-transfer? asset-class asset-identifier sender recipient)`\n**description:**\n`nft-transfer?` is used to change the owner of an asset identified by `asset-identifier` from `sender` to `recipient`. The `asset-class` must have been defined by `define-non-fungible-token` and `asset-identifier` must be of the type specified in that definition. In contrast to `stx-transfer?`, any user can transfer the asset. When used, relevant guards need to be added.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not own the asset `(err u2)` -- `sender` and `recipient` are the same principal `(err u3)` -- asset identified by asset-identifier does not exist\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(nft-transfer? stackaroo \"Roo\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(nft-transfer? stackaroo \"Roo\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (err u1)\n(nft-transfer? stackaroo \"Stacka\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (err u3)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#not)\nnot‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool`\n**output:** `bool`\n**signature:** `(not b1)`\n**description:**\nReturns the inverse of the boolean input.\n**example:**\nCopy```\n(not true) ;; Returns false\n(not (is-eq 1 2)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ok)\nok‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `(response A B)`\n**signature:** `(ok value)`\n**description:**\nThe `ok` function constructs a response type from the input value. Use `ok` for creating return values in public functions. An _ok_ value indicates that any database changes during the processing of the function should materialize.\n**example:**\nCopy```\n(ok 1) ;; Returns (ok 1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#or)\nor‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool, ...`\n**output:** `bool`\n**signature:** `(or b1 b2 ...)`\n**description:**\nReturns `true` if any boolean inputs are `true`. Importantly, the supplied arguments are evaluated in-order and lazily. Lazy evaluation means that if one of the arguments returns `true`, the function short-circuits, and no subsequent arguments are evaluated.\n**example:**\nCopy```\n(or true false) ;; Returns true\n(or (is-eq (+ 1 2) 1) (is-eq 4 4)) ;; Returns true\n(or (is-eq (+ 1 2) 1) (is-eq 3 4)) ;; Returns false\n(or (is-eq (+ 1 2) 3) (is-eq 4 4)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#pow)\npow‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `int | uint`\n**signature:** `(pow i1 i2)`\n**description:**\nReturns the result of raising `i1` to the power of `i2`. In the event of an _overflow_ , throws a runtime error. Note: Corner cases are handled with the following rules:\n  * if both `i1` and `i2` are `0`, return `1`\n  * if `i1` is `1`, return `1`\n  * if `i1` is `0`, return `0`\n  * if `i2` is negative or greater than `u32::MAX`, throw a runtime error\n\n\n**example:**\nCopy```\n(pow 2 3) ;; Returns 8\n(pow 2 2) ;; Returns 4\n(pow 7 1) ;; Returns 7\n```\n\n## \n[](https://docs.stacks.co/reference/functions#principal-construct)\nprincipal-construct?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 1), (buff 20), [(string-ascii 40)]`\n**output:** `(response principal { error_code: uint, principal: (option principal) })`\n**signature:** `(principal-construct? (buff 1) (buff 20) [(string-ascii 40)])`\n**description:**\nA principal value represents either a set of keys, or a smart contract. The former, called a _standard principal_ , is encoded as a `(buff 1)` _version byte_ , indicating the type of account and the type of network that this principal can spend tokens on, and a `(buff 20)` _public key hash_ , characterizing the principal's unique identity. The latter, a _contract principal_ , is encoded as a standard principal concatenated with a `(string-ascii 40)` _contract name_ that identifies the code body.\nThe `principal-construct?` function allows users to create either standard or contract principals, depending on which form is used. To create a standard principal, `principal-construct?` would be called with two arguments: it takes as input a `(buff 1)` which encodes the principal address's `version-byte`, a `(buff 20)` which encodes the principal address's `hash-bytes`. To create a contract principal, `principal-construct?` would be called with three arguments: the `(buff 1)` and `(buff 20)` to represent the standard principal that created the contract, and a `(string-ascii 40)` which encodes the contract's name. On success, this function returns either a standard principal or contract principal, depending on whether or not the third `(string-ascii 40)` argument is given.\nThis function returns a `Response`. On success, the `ok` value is a `Principal`. The `err` value is a value tuple with the form `{ error_code: uint, value: (optional principal) }`.\nIf the single-byte `version-byte` is in the valid range `0x00` to `0x1f`, but is not an appropriate version byte for the current network, then the error will be `u0`, and `value` will contain `(some principal)`, where the wrapped value is the principal. If the `version-byte` is not in this range, however, then the `value` will be `none`.\nIf the `version-byte` is a `buff` of length 0, if the single-byte `version-byte` is a value greater than `0x1f`, or the `hash-bytes` is a `buff` of length not equal to 20, then `error_code` will be `u1` and `value` will be `None`.\nIf a name is given, and the name is either an empty string or contains ASCII characters that are not allowed in contract names, then `error_code` will be `u2`.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (ok ST3X6QWWETNBZWGBK6DRGTR1KX50S74D3425Q1TPK)\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320 \"foo\") ;; Returns (ok ST3X6QWWETNBZWGBK6DRGTR1KX50S74D3425Q1TPK.foo)\n(principal-construct? 0x16 0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (err (tuple (error_code u0) (value (some SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY))))\n(principal-construct? 0x16 0xfa6bf38ed557fe417333710d6033e9419391a320 \"foo\") ;; Returns (err (tuple (error_code u0) (value (some SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY.foo))))\n(principal-construct? 0x   0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (err (tuple (error_code u1) (value none)))\n(principal-construct? 0x16 0xfa6bf38ed557fe417333710d6033e9419391a3)   ;; Returns (err (tuple (error_code u1) (value none)))\n(principal-construct? 0x20 0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (err (tuple (error_code u1) (value none)))\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320 \"\") ;; Returns (err (tuple (error_code u2) (value none)))\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320 \"foo[\") ;; Returns (err (tuple (error_code u2) (value none)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#principal-destruct)\nprincipal-destruct?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `principal`\n**output:** `(response (tuple (hash-bytes (buff 20)) (name (optional (string-ascii 40))) (version (buff 1))) (tuple (hash-bytes (buff 20)) (name (optional (string-ascii 40))) (version (buff 1))))`\n**signature:** `(principal-destruct? principal-address)`\n**description:**\nA principal value represents either a set of keys, or a smart contract. The former, called a _standard principal_ , is encoded as a `(buff 1)` _version byte_ , indicating the type of account and the type of network that this principal can spend tokens on, and a `(buff 20)` _public key hash_ , characterizing the principal's unique identity. The latter, a _contract principal_ , is encoded as a standard principal concatenated with a `(string-ascii 40)` _contract name_ that identifies the code body.\n`principal-destruct?` will decompose a principal into its component parts: either`{version-byte, hash-bytes}` for standard principals, or `{version-byte, hash-bytes, name}` for contract principals.\nThis method returns a `Response` that wraps this data as a tuple.\nIf the version byte of `principal-address` matches the network (see `is-standard`), then this method returns the pair as its `ok` value.\nIf the version byte of `principal-address` does not match the network, then this method returns the pair as its `err` value.\nIn both cases, the value itself is a tuple containing three fields: a `version` value as a `(buff 1)`, a `hash-bytes` value as a `(buff 20)`, and a `name` value as an `(optional (string-ascii 40))`. The `name` field will only be `(some ..)` if the principal is a contract principal.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(principal-destruct? 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6) ;; Returns (ok (tuple (hash-bytes 0x164247d6f2b425ac5771423ae6c80c754f7172b0) (name none) (version 0x1a)))\n(principal-destruct? 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6.foo) ;; Returns (ok (tuple (hash-bytes 0x164247d6f2b425ac5771423ae6c80c754f7172b0) (name (some \"foo\")) (version 0x1a)))\n(principal-destruct? 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY) ;; Returns (err (tuple (hash-bytes 0xfa6bf38ed557fe417333710d6033e9419391a320) (name none) (version 0x16)))\n(principal-destruct? 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY.foo) ;; Returns (err (tuple (hash-bytes 0xfa6bf38ed557fe417333710d6033e9419391a320) (name (some \"foo\")) (version 0x16)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#principal-of)\nprincipal-of?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 33)`\n**output:** `(response principal uint)`\n**signature:** `(principal-of? public-key)`\n**description:**\nThe `principal-of?` function returns the principal derived from the provided public key. If the `public-key` is invalid, it will return the error code `(err u1).`.\nNote: Before Stacks 2.1, this function has a bug, in that the principal returned would always be a testnet single-signature principal, even if the function were run on the mainnet. Starting with Stacks 2.1, this bug is fixed, so that this function will return a principal suited to the network it is called on. In particular, if this is called on the mainnet, it will return a single-signature mainnet principal.\n**example:**\nCopy```\n(principal-of? 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns (ok ST1AW6EKPGT61SQ9FNVDS17RKNWT8ZP582VF9HSCP)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#print)\nprint‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `A`\n**signature:** `(print expr)`\n**description:**\nThe `print` function evaluates and returns its input expression. On Stacks Core nodes configured for development (as opposed to production mining nodes), this function prints the resulting value to `STDOUT` (standard output).\n**example:**\nCopy```\n(print (+ 1 2 3)) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#replace-at)\nreplace-at?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, uint, A`\n**output:** `(optional sequence_A)`\n**signature:** `(replace-at? sequence index element)`\n**description:**\nThe `replace-at?` function takes in a sequence, an index, and an element, and returns a new sequence with the data at the index position replaced with the given element. The given element's type must match the type of the sequence, and must correspond to a single index of the input sequence. The return type on success is the same type as the input sequence.\nIf the provided index is out of bounds, this functions returns `none`.\n**example:**\nCopy```\n(replace-at? u\"ab\" u1 u\"c\") ;; Returns (some u\"ac\")\n(replace-at? 0x00112233 u2 0x44) ;; Returns (some 0x00114433)\n(replace-at? \"abcd\" u3 \"e\") ;; Returns (some \"abce\")\n(replace-at? (list 1) u0 10) ;; Returns (some (10))\n(replace-at? (list (list 1) (list 2)) u0 (list 33)) ;; Returns (some ( (33) (2)))\n(replace-at? (list 1 2) u3 4) ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#secp256k1-recover)\nsecp256k1-recover?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 32), (buff 65)`\n**output:** `(response (buff 33) uint)`\n**signature:** `(secp256k1-recover? message-hash signature)`\n**description:**\nThe `secp256k1-recover?` function recovers the public key used to sign the message which sha256 is `message-hash` with the provided `signature`. If the signature does not match, it will return the error code `(err u1).`. If the signature is invalid, it will return the error code `(err u2).`. The signature includes 64 bytes plus an additional recovery id (00..03) for a total of 65 bytes.\n**example:**\nCopy```\n(secp256k1-recover? 0xde5b9eb9e7c5592930eb2e30a01369c36586d872082ed8181ee83d2a0ec20f04 0x8738487ebe69b93d8e51583be8eee50bb4213fc49c767d329632730cc193b873554428fc936ca3569afc15f1c9365f6591d6251a89fee9c9ac661116824d3a1301) ;; Returns (ok 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#secp256k1-verify)\nsecp256k1-verify‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 32), (buff 64) | (buff 65), (buff 33)`\n**output:** `bool`\n**signature:** `(secp256k1-verify message-hash signature public-key)`\n**description:**\nThe `secp256k1-verify` function verifies that the provided signature of the message-hash was signed with the private key that generated the public key. The `message-hash` is the `sha256` of the message. The signature includes 64 bytes plus an optional additional recovery id (00..03) for a total of 64 or 65 bytes.\n**example:**\nCopy```\n(secp256k1-verify 0xde5b9eb9e7c5592930eb2e30a01369c36586d872082ed8181ee83d2a0ec20f04 0x8738487ebe69b93d8e51583be8eee50bb4213fc49c767d329632730cc193b873554428fc936ca3569afc15f1c9365f6591d6251a89fee9c9ac661116824d3a1301 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns true\n(secp256k1-verify 0xde5b9eb9e7c5592930eb2e30a01369c36586d872082ed8181ee83d2a0ec20f04 0x8738487ebe69b93d8e51583be8eee50bb4213fc49c767d329632730cc193b873554428fc936ca3569afc15f1c9365f6591d6251a89fee9c9ac661116824d3a13 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns true\n(secp256k1-verify 0x0000000000000000000000000000000000000000000000000000000000000000 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sha256)\nsha256‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 32)`\n**signature:** `(sha256 value)`\n**description:**\nThe `sha256` function computes `SHA256(x)` of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(sha256 0) ;; Returns 0x374708fff7719dd5979ec875d56cd2286f6d3cf7ec317a3b25632aab28ec37bb\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sha512)\nsha512‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 64)`\n**signature:** `(sha512 value)`\n**description:**\nThe `sha512` function computes `SHA512(x)` of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(sha512 1) ;; Returns 0x6fcee9a7b7a7b821d241c03c82377928bc6882e7a08c78a4221199bfa220cdc55212273018ee613317c8293bb8d1ce08d1e017508e94e06ab85a734c99c7cc34\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sha512-256)\nsha512/256‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 32)`\n**signature:** `(sha512/256 value)`\n**description:**\nThe `sha512/256` function computes `SHA512/256(x)` (the SHA512 algorithm with the 512/256 initialization vector, truncated to 256 bits) of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(sha512/256 1) ;; Returns 0x515a7e92e7c60522db968d81ff70b80818fc17aeabbec36baf0dda2812e94a86\n```\n\n## \n[](https://docs.stacks.co/reference/functions#slice)\nslice?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, uint, uint`\n**output:** `(optional sequence_A)`\n**signature:** `(slice? sequence left-position right-position)`\n**description:**\nThe `slice?` function attempts to return a sub-sequence of that starts at `left-position` (inclusive), and ends at `right-position` (non-inclusive). If `left_position`==`right_position`, the function returns an empty sequence. If either `left_position` or `right_position` are out of bounds OR if `right_position` is less than `left_position`, the function returns `none`.\n**example:**\nCopy```\n(slice? \"blockstack\" u5 u10) ;; Returns (some \"stack\")\n(slice? (list 1 2 3 4 5) u5 u9) ;; Returns none\n(slice? (list 1 2 3 4 5) u3 u4) ;; Returns (some (4))\n(slice? \"abcd\" u1 u3) ;; Returns (some \"bc\")\n(slice? \"abcd\" u2 u2) ;; Returns (some \"\")\n(slice? \"abcd\" u3 u1) ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#some)\nsome‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `(optional A)`\n**signature:** `(some value)`\n**description:**\nThe `some` function constructs a `optional` type from the input value.\n**example:**\nCopy```\n(some 1) ;; Returns (some 1)\n(is-none (some 2)) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sqrti)\nsqrti‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int | uint`\n**output:** `int | uint`\n**signature:** `(sqrti n)`\n**description:**\nReturns the largest integer that is less than or equal to the square root of `n`. Fails on a negative numbers.\n**example:**\nCopy```\n(sqrti u11) ;; Returns u3\n(sqrti 1000000) ;; Returns 1000\n(sqrti u1) ;; Returns u1\n(sqrti 0) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#string-to-int)\nstring-to-int?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(string-ascii 1048576) | (string-utf8 262144)`\n**output:** `(optional int)`\n**signature:** `(string-to-int? (string-ascii|string-utf8))`\n**description:**\nConverts a string, either `string-ascii` or `string-utf8`, to an optional-wrapped signed integer. If the input string does not represent a valid integer, then the function returns `none`. Otherwise it returns an integer wrapped in `some`.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(string-to-int? \"1\") ;; Returns (some 1)\n(string-to-int? u\"-1\") ;; Returns (some -1)\n(string-to-int? \"a\") ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#string-to-uint)\nstring-to-uint?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(string-ascii 1048576) | (string-utf8 262144)`\n**output:** `(optional uint)`\n**signature:** `(string-to-uint? (string-ascii|string-utf8))`\n**description:**\nConverts a string, either `string-ascii` or `string-utf8`, to an optional-wrapped unsigned integer. If the input string does not represent a valid integer, then the function returns `none`. Otherwise it returns an unsigned integer wrapped in `some`.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(string-to-uint? \"1\") ;; Returns (some u1)\n(string-to-uint? u\"1\") ;; Returns (some u1)\n(string-to-uint? \"a\") ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-account)\nstx-account‚Äã\nIntroduced in: **Clarity 2**\n**input:** `principal`\n**output:** `(tuple (locked uint) (unlock-height uint) (unlocked uint))`\n**signature:** `(stx-account owner)`\n**description:**\n`stx-account` is used to query the STX account of the `owner` principal.\nThis function returns a tuple with the canonical account representation for an STX account. This includes the current amount of unlocked STX, the current amount of locked STX, and the unlock height for any locked STX, all denominated in microstacks.\n**example:**\nCopy```\n(stx-account 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns (tuple (locked u0) (unlock-height u0) (unlocked u0))\n(stx-account (as-contract tx-sender)) ;; Returns (tuple (locked u0) (unlock-height u0) (unlocked u1000))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-burn)\nstx-burn?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `uint, principal`\n**output:** `(response bool uint)`\n**signature:** `(stx-burn? amount sender)`\n**description:**\n`stx-burn?` decreases the `sender` principal's STX holdings by `amount`, specified in microstacks, by destroying the STX. The `sender` principal _must_ be equal to the current context's `tx-sender`.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to transfer `(err u3)` -- amount to send is non-positive `(err u4)` -- the `sender` principal is not the current `tx-sender`\n**example:**\nCopy```\n(as-contract  (stx-burn? u60 tx-sender)) ;; Returns (ok true)\n(as-contract  (stx-burn? u50 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)) ;; Returns (err u4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-get-balance)\nstx-get-balance‚Äã\nIntroduced in: **Clarity 1**\n**input:** `principal`\n**output:** `uint`\n**signature:** `(stx-get-balance owner)`\n**description:**\n`stx-get-balance` is used to query the STX balance of the `owner` principal.\nThis function returns the STX balance, in microstacks (1 STX = 1,000,000 microstacks), of the `owner` principal. In the event that the `owner` principal isn't materialized, it returns 0.\n**example:**\nCopy```\n(stx-get-balance 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns u0\n(stx-get-balance (as-contract tx-sender)) ;; Returns u1000\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-transfer-memo)\nstx-transfer-memo?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `uint, principal, principal, buff`\n**output:** `(response bool uint)`\n**signature:** `(stx-transfer-memo? amount sender recipient memo)`\n**description:**\n`stx-transfer-memo?` is similar to `stx-transfer?`, except that it adds a `memo` field.\nThis function returns (ok true) if the transfer is successful, or, on an error, returns the same codes as `stx-transfer?`.\n**example:**\nCopy```\n(as-contract  (stx-transfer-memo? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 0x010203)) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-transfer)\nstx-transfer?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `uint, principal, principal`\n**output:** `(response bool uint)`\n**signature:** `(stx-transfer? amount sender recipient)`\n**description:**\n`stx-transfer?` is used to increase the STX balance for the `recipient` principal by debiting the `sender` principal by `amount`, specified in microstacks. The `sender` principal _must_ be equal to the current context's `tx-sender`.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to transfer `(err u2)` -- `sender` and `recipient` are the same principal `(err u3)` -- amount to send is non-positive `(err u4)` -- the `sender` principal is not the current `tx-sender`\n**example:**\nCopy```\n(as-contract  (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)) ;; Returns (ok true)\n(as-contract  (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)) ;; Returns (ok true)\n(as-contract  (stx-transfer? u50 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR tx-sender)) ;; Returns (err u4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#to-consensus-buff)\nto-consensus-buff?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `any`\n**output:** `(optional buff)`\n**signature:** `(to-consensus-buff? value)`\n**description:**\n`to-consensus-buff?` is a special function that will serialize any Clarity value into a buffer, using the SIP-005 serialization of the Clarity value. Not all values can be serialized: some value's consensus serialization is too large to fit in a Clarity buffer (this is because of the type prefix in the consensus serialization).\nIf the value cannot fit as serialized into the maximum buffer size, this returns `none`, otherwise, it will be `(some consensus-serialized-buffer)`. During type checking, the analyzed type of the result of this method will be the maximum possible consensus buffer length based on the inferred type of the supplied value.\n**example:**\nCopy```\n(to-consensus-buff? 1) ;; Returns (some 0x0000000000000000000000000000000001)\n(to-consensus-buff? u1) ;; Returns (some 0x0100000000000000000000000000000001)\n(to-consensus-buff? true) ;; Returns (some 0x03)\n(to-consensus-buff? false) ;; Returns (some 0x04)\n(to-consensus-buff? none) ;; Returns (some 0x09)\n(to-consensus-buff? 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns (some 0x051fa46ff88886c2ef9762d970b4d2c63678835bd39d)\n(to-consensus-buff? { abc: 3, def: 4 }) ;; Returns (some 0x0c00000002036162630000000000000000000000000000000003036465660000000000000000000000000000000004)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#to-int)\nto-int‚Äã\nIntroduced in: **Clarity 1**\n**input:** `uint`\n**output:** `int`\n**signature:** `(to-int u)`\n**description:**\nTries to convert the `uint` argument to an `int`. Will cause a runtime error and abort if the supplied argument is >= `pow(2, 127)`\n**example:**\nCopy```\n(to-int u238) ;; Returns 238\n```\n\n## \n[](https://docs.stacks.co/reference/functions#to-uint)\nto-uint‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int`\n**output:** `uint`\n**signature:** `(to-uint i)`\n**description:**\nTries to convert the `int` argument to a `uint`. Will cause a runtime error and abort if the supplied argument is negative.\n**example:**\nCopy```\n(to-uint 238) ;; Returns u238\n```\n\n## \n[](https://docs.stacks.co/reference/functions#try)\ntry!\nIntroduced in: **Clarity 1**\n**input:** `(optional A) | (response A B)`\n**output:** `A`\n**signature:** `(try! option-input)`\n**description:**\nThe `try!` function attempts to 'unpack' the first argument: if the argument is an option type, and the argument is a `(some ...)` option, `try!` returns the inner value of the option. If the argument is a response type, and the argument is an `(ok ...)` response, `try!` returns the inner value of the `ok`. If the supplied argument is either an `(err ...)` or a `none` value, `try!` _returns_ either `none` or the `(err ...)` value from the current function and exits the current control-flow.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(try! (map-get? names-map { name: \"blockstack\" })) ;; Returns (tuple (id 1337))\n(define-private (checked-even (x int))  \n  (if (is-eq (mod x 2) 0)      \n    (ok x)      \n    (err false)))\n(define-private (double-if-even (x int))  \n  (ok (* 2 (try! (checked-even x)))))\n(double-if-even 10) ;; Returns (ok 20)\n(double-if-even 3) ;; Returns (err false)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#tuple)\ntuple‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(key-name A), (key-name-2 B), ...`\n**output:** `(tuple (key-name A) (key-name-2 B) ...)`\n**signature:** `(tuple (key0 expr0) (key1 expr1) ...)`\n**description:**\nThe `tuple` special form constructs a typed tuple from the supplied key and expression pairs. A `get` function can use typed tuples as input to select specific values from a given tuple. Key names may not appear multiple times in the same tuple definition. Supplied expressions are evaluated and associated with the expressions' paired key name.\nThere is a shorthand using curly brackets of the form {key0: expr0, key1: expr, ...}\n**example:**\nCopy```\n(tuple (name \"blockstack\") \n(id 1337)) ;; using tuple    \n{name: \"blockstack\", id: 1337} ;; using curly brackets\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap)\nunwrap!\nIntroduced in: **Clarity 1**\n**input:** `(optional A) | (response A B), C`\n**output:** `A`\n**signature:** `(unwrap! option-input thrown-value)`\n**description:**\nThe `unwrap!` function attempts to 'unpack' the first argument: if the argument is an option type, and the argument is a `(some ...)` option, `unwrap!` returns the inner value of the option. If the argument is a response type, and the argument is an `(ok ...)` response, `unwrap!` returns the inner value of the `ok`. If the supplied argument is either an `(err ...)` or a `(none)` value, `unwrap!` _returns_ `thrown-value` from the current function and exits the current control-flow.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(define-private (get-name-or-err (name (string-ascii 12)))  \n  (let ( (raw-name (unwrap! (map-get? names-map { name: name }) (err 1))))       \n  (ok raw-name)))\n(get-name-or-err \"blockstack\") ;; Returns (ok (tuple (id 1337)))\n(get-name-or-err \"non-existant\") ;; Returns (err 1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap-err)\nunwrap-err!\nIntroduced in: **Clarity 1**\n**input:** `(response A B), C`\n**output:** `B`\n**signature:** `(unwrap-err! response-input thrown-value)`\n**description:**\nThe `unwrap-err!` function attempts to 'unpack' the first argument: if the argument is an `(err ...)` response, `unwrap-err!` returns the inner value of the `err`. If the supplied argument is an `(ok ...)` value, `unwrap-err!` _returns_ `thrown-value` from the current function and exits the current control-flow.\n**example:**\nCopy```\n(unwrap-err! (err 1) false) ;; Returns 1\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap-err-panic)\nunwrap-err-panic‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(response A B)`\n**output:** `B`\n**signature:** `(unwrap-err-panic response-input)`\n**description:**\nThe `unwrap-err` function attempts to 'unpack' the first argument: if the argument is an `(err ...)` response, `unwrap` returns the inner value of the `err`. If the supplied argument is an `(ok ...)` value, `unwrap-err` throws a runtime error, aborting any further processing of the current transaction.\n**example:**\nCopy```\n(unwrap-err-panic (err 1)) ;; Returns 1\n(unwrap-err-panic (ok 1)) ;; Throws a runtime exception\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap-panic)\nunwrap-panic‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A) | (response A B)`\n**output:** `A`\n**signature:** `(unwrap-panic option-input)`\n**description:**\nThe `unwrap` function attempts to 'unpack' its argument: if the argument is an option type, and the argument is a `(some ...)` option, this function returns the inner value of the option. If the argument is a response type, and the argument is an `(ok ...)` response, it returns the inner value of the `ok`. If the supplied argument is either an `(err ...)` or a `(none)` value, `unwrap` throws a runtime error, aborting any further processing of the current transaction.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(unwrap-panic (map-get? names-map { name: \"blockstack\" })) ;; Returns (tuple (id 1337))\n(unwrap-panic (map-get? names-map { name: \"non-existant\" })) ;; Throws a runtime exception\n```\n\n## \n[](https://docs.stacks.co/reference/functions#use-trait)\nuse-trait‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, TraitIdentifier`\n**output:** `Not Applicable`\n**signature:** `(use-trait trait-alias trait-identifier)`\n**description:**\n`use-trait` is used to bring a trait, defined in another contract, to the current contract. Subsequent references to an imported trait are signaled with the syntax `<trait-alias>`.\nTraits import are defined with a name, used as an alias, and a trait identifier. Trait identifiers can either be using the sugared syntax (.token-a.token-trait), or be fully qualified ('SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait).\nLike other kinds of definition statements, `use-trait` may only be used at the top level of a smart contract definition (i.e., you cannot put such a statement in the middle of a function body).\n**example:**\nCopy```\n(use-trait token-a-trait 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait)\n(define-public (forward-get-balance (user principal) (contract <token-a-trait>))  \n  (begin (ok 1)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#var-get)\nvar-get‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName`\n**output:** `A`\n**signature:** `(var-get var-name)`\n**description:**\nThe `var-get` function looks up and returns an entry from a contract's data map. The value is looked up using `var-name`.\n**example:**\nCopy```\n(define-data-var cursor int 6)\n(var-get cursor) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#var-set)\nvar-set‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, AnyType`\n**output:** `bool`\n**signature:** `(var-set var-name expr1)`\n**description:**\nThe `var-set` function sets the value associated with the input variable to the inputted value. The function always returns `true`.\n**example:**\nCopy```\n(define-data-var cursor int 6)\n(var-get cursor) ;; Returns 6\n(var-set cursor (+ (var-get cursor) 1)) ;; Returns true\n(var-get cursor) ;; Returns 7\n```\n\n## \n[](https://docs.stacks.co/reference/functions#xor)\nxor‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `int | uint`\n**signature:** `(xor i1 i2)`\n**description:**\nReturns the result of bitwise exclusive or'ing `i1` with `i2`.\n**example:**\nCopy```\n(xor 1 2) ;; Returns 3\n(xor 120 280) ;; Returns 352\n```\n\n[PreviousClarity Types](https://docs.stacks.co/reference/types)[NextClarity Keywords](https://docs.stacks.co/reference/keywords)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 15427,
      "title": "Clarity Functions | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/keywords",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [block-height‚Äã](https://docs.stacks.co/reference/keywords#block-height)\n  * [burn-block-height‚Äã](https://docs.stacks.co/reference/keywords#burn-block-height)\n  * [chain-id‚Äã](https://docs.stacks.co/reference/keywords#chain-id-clarity2)\n  * [contract-caller‚Äã](https://docs.stacks.co/reference/keywords#contract-caller)\n  * [false‚Äã](https://docs.stacks.co/reference/keywords#false)\n  * [is-in-mainnet‚Äã](https://docs.stacks.co/reference/keywords#is-in-mainnet-clarity2)\n  * [is-in-regtest‚Äã](https://docs.stacks.co/reference/keywords#is-in-regtest)\n  * [none‚Äã](https://docs.stacks.co/reference/keywords#none)\n  * [stacks-block-height](https://docs.stacks.co/reference/keywords#stacks-block-height)\n  * [stx-liquid-supply‚Äã](https://docs.stacks.co/reference/keywords#stx-liquid-supply)\n  * [tenure-height](https://docs.stacks.co/reference/keywords#tenure-height)\n  * [true‚Äã](https://docs.stacks.co/reference/keywords#true)\n  * [tx-sender‚Äã](https://docs.stacks.co/reference/keywords#tx-sender)\n  * [tx-sponsor?‚Äã](https://docs.stacks.co/reference/keywords#tx-sponsor-clarity2)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Clarity Keywords\n### \n[](https://docs.stacks.co/reference/keywords#block-height)\nblock-height‚Äã\nThe Nakamoto hard fork will introduce a few new Clarity keywords. It's important to note that even with the new [block production mechanism](https://docs.stacks.co/concepts/block-production), the `block-height` keyword behavior will not change. It will simply correspond to the current tenure height. This means any Clarity contracts using this keyword will be backwards compatible after the Nakamoto Upgrade.\nIntroduced in: Clarity 1\n**output:**`**uint**`\n**description:**\nReturns the current block height of the Stacks blockchain in Clarity 1 and 2. Upon activation of epoch 3.0, `block-height` will return the same value as `tenure-height`. In Clarity 3, `block-height` is removed and has been replaced with `stacks-block-height`.\n**example:**\nCopy```\n(> block-height u1000) ;; returns true if the current block-height has passed 1000 blocks.\n\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#burn-block-height)\nburn-block-height‚Äã\nThere is a bug in Clarity 3 when `burn-block-height` is used within an `at-block` expression. Normally, keywords executed within an `at-block` expression will return the data for that specified block. This bug causes `burn-block-height` to always return the burn block at the current chain tip, even within an `at-block` expression. This behavior affects any Clarity 3 contracts and will be fixed in a future hard fork.\nIntroduced in: Clarity 1\n**output:**`**uint**`\n**description:**\nReturns the current block height of the underlying burn blockchain as a uint\n**example:**\nCopy```\n(> burn-block-height 1000) ;; returns true if the current height of the underlying burn blockchain has passed 1000 blocks.\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#chain-id-clarity2)\nchain-id‚Äã\nIntroduced in: Clarity 2\n**output:**`**uint**`\n**description:**\nReturns the 32-bit chain ID of the blockchain running this transaction\n**example:**\nCopy```\n(print chain-id) ;; Will print 'u1' if the code is running on mainnet, and 'u2147483648' on testnet, and other values on different chains.\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#contract-caller)\ncontract-caller‚Äã\nIntroduced in: Clarity 1\n**output:**`**principal**`\n**description:**\nReturns the caller of the current contract context. If this contract is the first one called by a signed transaction, the caller will be equal to the signing principal. If `contract-call?` was used to invoke a function from a new contract, `contract-caller` changes to the _calling_ contract's principal. If `as-contract` is used to change the `tx-sender` context, `contract-caller` _also_ changes to the same contract principal.\n**example:**\nCopy```\n(print contract-caller) ;; Will print out a Stacks address of the transaction sender\n```\n\nUse caution when leveraging all contract calls, particularly tx-sender and contract-caller as based on the design, you can unintentionally introduce attack surface area. [Read more](https://www.setzeus.com/community-blog-posts/clarity-carefully-tx-sender).\n### \n[](https://docs.stacks.co/reference/keywords#false)\nfalse‚Äã\nIntroduced in: Clarity 1\n**output:**`**bool**`\n**description:**\nBoolean false constant.\n**example:**\nCopy```\n(and true false) ;; Evaluates to false\n(or false true)  ;; Evaluates to true\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#is-in-mainnet-clarity2)\nis-in-mainnet‚Äã\nIntroduced in: Clarity 2\n**output:**`**bool**`\n**description:**\nReturns a boolean indicating whether or not the code is running on the mainnet\n**example:**\nCopy```\n(print is-in-mainnet) ;; Will print 'true' if the code is running on the mainnet\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#is-in-regtest)\nis-in-regtest‚Äã\nIntroduced in: Clarity 1\n**output:**`**bool**`\n**description:**\nReturns whether or not the code is running in a regression test\n**example:**\nCopy```\n(print is-in-regtest) ;; Will print 'true' if the code is running in a regression test\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#none)\nnone‚Äã\nIntroduced in: Clarity 1\n**output:**`**(optional ?)**`\n**description:**\nRepresents the _none_ option indicating no value for a given optional (analogous to a null value).\n**example:**\nCopy```\n(define-public (only-if-positive (a int))\n  (if (> a 0)\n      (some a)\n      none))\n(only-if-positive 4) ;; Returns (some 4)\n(only-if-positive (- 3)) ;; Returns none\n```\n\nCopy```\n(print stx-liquid-supply) ;; Will print out the total number of liqui\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#stacks-block-height)\n**stacks-block-height**\nIntroduced in: Clarity 3\n**output:**`**uint**`\n**description:**\nReturns the current Stacks block height.\n**example:**\nCopy```\n(print stacks-block-height) ;; Will print out the current Stacks block height\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#stx-liquid-supply)\nstx-liquid-supply‚Äã\nIntroduced in: Clarity 1\n**output:**`**uint**`\n**description:**\nReturns the total number of micro-STX (uSTX) that are liquid in the system as of this block.\n**example:**\nCopy```\n(print stx-liquid-supply) ;; Will print out the total number of liquid uSTX\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#tenure-height)\n**tenure-height**\nIntroduced in: Clarity 3\n**output:**`**uint**`\n**description:**\nReturns the number of tenures that have passed. When the Nakamoto block-processing starts, this will be equal to the chain length.\n**example:**\nCopy```\n(print tenure-height) ;; Will print out the current tenure height\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#true)\ntrue‚Äã\nIntroduced in: Clarity 1\n**output:**`**bool**`\n**description:**\nBoolean true constant.\n**example:**\nCopy```\n(and true false) ;; Evaluates to false\n(or false true)  ;; Evaluates to true\n```\n\n### \n[](https://docs.stacks.co/reference/keywords#tx-sender)\ntx-sender‚Äã\nIntroduced in: Clarity 1\n**output:**`**principal**`\n**description:**\nReturns the original sender of the current transaction, or if `as-contract` was called to modify the sending context, it returns that contract principal.\n**example:**\nCopy```\n(print tx-sender) ;; Will print out a Stacks address of the transaction sender\n```\n\nUse caution when leveraging all contract calls, particularly tx-sender and contract-caller as based on the design, you can unintentionally introduce attack surface area. [Read more](https://www.setzeus.com/community-blog-posts/clarity-carefully-tx-sender).\n### \n[](https://docs.stacks.co/reference/keywords#tx-sponsor-clarity2)\ntx-sponsor?‚Äã\nIntroduced in: Clarity 2\n**output:**`**optional principal**`\n**description:**\nReturns the sponsor of the current transaction if there is a sponsor, otherwise returns None.\n**example:**\nCopy```\n(print tx-sponsor?) ;; Will print out an optional value containing the Stacks address of the transaction sponsor\n```\n\n[PreviousClarity Functions](https://docs.stacks.co/reference/functions)[NextStacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 1402,
      "title": "Clarity Keywords | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/stacks-node-configuration",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Usage](https://docs.stacks.co/reference/stacks-node-configuration#usage)\n  * [Configuration File Options](https://docs.stacks.co/reference/stacks-node-configuration#configuration-file-options)\n  * [Example Mainnet Follower Configuration](https://docs.stacks.co/reference/stacks-node-configuration#example-mainnet-follower-configuration)\n  * [Example Testnet Follower Configuration](https://docs.stacks.co/reference/stacks-node-configuration#example-testnet-follower-configuration)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Stacks Node Configuration\nNote that these config fields are for a Stacks follower node. If you are running a signer alongside your Stacks node, you'll want to use the sample file found on the [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files) page as it contains additional parameters needed for your signer and Stacks node to function properly.\n### \n[](https://docs.stacks.co/reference/stacks-node-configuration#usage)\nUsage\nCopy```\nstacks-nodesub-command [--subcommand-option <value>]\n```\n\n#### \n[](https://docs.stacks.co/reference/stacks-node-configuration#subcommands)\nSubcommands\n  * `mocknet`: start a mocknet instance using defaults\n  * `testnet`: start a testnet instance using defaults (chainstate is not persistent)\n  * `mainnet`: start a mainnet instance using defaults (chainstate is not persistent)\n  * `start`: combined with `--config`, starts an instance with a specified configuration file\n  * `version`: displays binary version\n  * `help`: displays the help message\n\n\n### \n[](https://docs.stacks.co/reference/stacks-node-configuration#configuration-file-options)\nConfiguration File Options\nThe Stacks Blockchain configuration file has multiple sections under which an option may be placed.\n  * node\n  * events_observer\n  * connection_options\n  * burnchain\n  * ustx_balance\n  * miner\n\n\nFor reference, several configuration file examples are [available here](https://github.com/stacks-network/stacks-core/tree/master/sample/conf).\n#### \n[](https://docs.stacks.co/reference/stacks-node-configuration#node)\nnode\nContains various configuration options for the stacks-node binary.\nName\nRequired\nDescription\nrpc_bind\n‚úì\nIPv4 address and port to open for RPC connections\np2p_bind\n‚úì\nIPv4 address and port to open for P2P connections\nworking_dir\nAbsolute path to the directory where chainstate data will be stored\ndata_url\nIPv4 address and port for incoming RPC connections\np2p_address\nIPv4 address and port for incoming P2P connections\nbootstrap_node\nPublic key, IPv4 address, and port to bootstrap the chainstate\nwait_time_for_microblocks\nThe amount of time in ms to wait before trying to mine a block after catching up to the anchored chain tip\nseed\nThe private key to use for mining. Only needed if `miner` is set to `true`\nlocal_peer_seed\nThe private key to use for signing P2P messages in the networking stack\nminer\nDetermines whether the node is running a follower (`false`) or a miner (`true`). Defaults to `false`\nmock_mining\nSimulates running a miner (typically used for debugging)\nmock_mining_output_dir\nFolder for mock mining data\nmine_microblocks\nDetermines whether the node will mine microblocks. Will only take effect if `miner` is set to `true`\nprometheus_bind\nAddress and port for Prometheus metrics collection.\ndeny_nodes\nList of ip addresses of nodes that should be ignored\nstacker\nDetermines whether the node is running a stacker (`true`) that issues events for signer binary\n#### \n[](https://docs.stacks.co/reference/stacks-node-configuration#events_observer)\nevents_observer\nThis section is _optional_ and not required\nHowever, if this section is added, **all** fields are required.\nContains options for sending events emitted to the [stacks-blockchain-api](https://github.com/hirosystems/stacks-blockchain-api) service.\nName\nRequired\nDescription\nendpoint\n‚úì\nAddress and port to a [stacks-blockchain-api](https://github.com/hirosystems/stacks-blockchain-api) service\nevents_keys\n‚úì\nEvent keys for which to watch. The emitted node events can be restricted by account, function name and event type. Asterix (\"*\") can be used to emit all events.\n#### \n[](https://docs.stacks.co/reference/stacks-node-configuration#connection_options)\nconnection_options\nThis section is _optional_ and not required.\nSpecifies configuration options for others connecting to the stacks node.\nName\nRequired\nDescription\npublic_ip_address\nPublic IPv4 to advertise to other nodes\ndownload_interval\nTime (in seconds) between attempts to download blocks\nwalk_interval\nTime (in seconds) between attempts to walk the list of neighbors\nprivate_neighbors\nIf false, this node won't announce or accept neighbors that are behind private networks. Defaults to true.\nread_only_call_limit_read_length\nTotal number of bytes allowed to be read by an individual read-only function call\nread_only_call_limit_read_count\nTotal number of independent read operations permitted for an individual read-only function call\nread_only_call_limit_runtime\n[Runtime cost](https://github.com/stacksgov/sips/blob/main/sips/sip-006/sip-006-runtime-cost-assessment.md) limit for an individual read-only function call\n#### \n[](https://docs.stacks.co/reference/stacks-node-configuration#burnchain)\nburnchain\nThis section contains configuration options pertaining to the blockchain the stacks-node binds to on the backend for proof-of-transfer (BTC).\nName\nRequired\nDescription\nchain\n‚úì\nThe blockchain stacks-node binds to on the backend for proof-of-transfer. Only value supported: `bitcoin`\nmode\n‚úì\nThe profile or test phase of which to run stacks-node. Valid values are [ `mocknet`, `testnet`, `xenon`, `mainnet` ]\npeer_host\nFQDN of the host running the backend Bitcoin blockchain\nrpc_port\nRPC port of `peer_host`\npeer_port\nP2P port of `peer_host`\n**Mining**\nName\nRequired\nDescription\nburn_fee_cap\n‚úì\nMaximum amount (in sats) of \"burn commitment\" to broadcast for the next block's leader election\nsatoshis_per_byte\n‚úì\n[Amount (in sats) per byte](https://bitcoinfees.net/) - Used to calculate the transaction fees\ncommit_anchor_block_within\nSets the time period (in milliseconds) for commitments. Only used when `mode` is set to `mocknet`.\ntenure_extend_cost_threshold\nPercentage of block budget that must be used before attempting a time-based tenure extend\nblock_rejection_timeout_steps\nDefine the timeout to apply while waiting for signers responses, based on the amount of rejections\n#### \n[](https://docs.stacks.co/reference/stacks-node-configuration#ustx_balance)\nustx_balance\nThis section is only required for the `testnet` and `mocknet` networks.\nHowever, if this section is added, **all** fields are required.\nThis section contains configuration options allocating microSTX per address in the genesis block\nThis section can repeat multiple times, but each section can only define a single address.\nName\nRequired\nDescription\naddress\n‚úì\nAddress which maintains a microSTX balance\namount\n‚úì\nThe balance of microSTX given to the address at the start of the node\n### \n[](https://docs.stacks.co/reference/stacks-node-configuration#example-mainnet-follower-configuration)\nExample Mainnet Follower Configuration\nCopy```\n[node]\nworking_dir = \"/stacks-blockchain\"\nrpc_bind = \"0.0.0.0:30443\"\np2p_bind = \"0.0.0.0:20444\"\nbootstrap_node = \"02196f005965cebe6ddc3901b7b1cc1aa7a88f305bb8c5893456b8f9a605923893@seed.mainnet.hiro.so:20444,02539449ad94e6e6392d8c1deb2b4e61f80ae2a18964349bc14336d8b903c46a8c@cet.stacksnodes.org:20444,02ececc8ce79b8adf813f13a0255f8ae58d4357309ba0cedd523d9f1a306fcfb79@sgt.stacksnodes.org:20444,0303144ba518fe7a0fb56a8a7d488f950307a4330f146e1e1458fc63fb33defe96@est.stacksnodes.org:20444\"\n[burnchain]\nchain = \"bitcoin\"\nmode = \"mainnet\"\npeer_host = \"localhost\"\npeer_port = 8333\n[[events_observer]]\nendpoint = \"localhost:3700\"\nevents_keys = [\"*\"]\n```\n\n### \n[](https://docs.stacks.co/reference/stacks-node-configuration#example-testnet-follower-configuration)\nExample Testnet Follower Configuration\nCopy```\n[node]\nrpc_bind = \"0.0.0.0:20443\"\np2p_bind = \"0.0.0.0:20444\"\nbootstrap_node = \"029266faff4c8e0ca4f934f34996a96af481df94a89b0c9bd515f3536a95682ddc@seed.testnet.hiro.so:30444\"\nprometheus_bind = \"127.0.0.1:9153\"\nworking_dir = \"/stacks-blockchain\"\n[burnchain]\nchain = \"bitcoin\"\nmode = \"krypton\"\npeer_host = \"bitcoin.regtest.hiro.so\"\npeer_port = 18444\npox_prepare_length = 100\npox_reward_length = 900\n[[ustx_balance]]\naddress = \"ST2QKZ4FKHAH1NQKYKYAYZPY440FEPK7GZ1R5HBP2\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST319CF5WV77KYR1H3GT0GZ7B8Q4AQPY42ETP1VPF\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST221Z6TDTC5E0BYR2V624Q2ST6R0Q71T78WTAX6H\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST2TFVBMRPS5SSNP98DQKQ5JNB2B6NZM91C4K3P7B\"\namount = 10000000000000000\n[fee_estimation]\nfee_estimator = \"fuzzed_weighted_median_fee_rate\"\n[[burnchain.epochs]]\nepoch_name = \"1.0\"\nstart_height = 0\n[[burnchain.epochs]]\nepoch_name = \"2.0\"\nstart_height = 0\n[[burnchain.epochs]]\nepoch_name = \"2.05\"\nstart_height = 1\n[[burnchain.epochs]]\nepoch_name = \"2.1\"\nstart_height = 2\n[[burnchain.epochs]]\nepoch_name = \"2.2\"\nstart_height = 3\n[[burnchain.epochs]]\nepoch_name = \"2.3\"\nstart_height = 4\n[[burnchain.epochs]]\nepoch_name = \"2.4\"\nstart_height = 5\n[[burnchain.epochs]]\nepoch_name = \"2.5\"\nstart_height = 6\n[[burnchain.epochs]]\nepoch_name = \"3.0\"\nstart_height = 1_900\n[[burnchain.epochs]]\nepoch_name = \"3.1\"\nstart_height = 2_000\n[[burnchain.epochs]]\nepoch_name = \"3.2\"\nstart_height = 71_525\n```\n\n[PreviousClarity Keywords](https://docs.stacks.co/reference/keywords)[NextSigner Configuration](https://docs.stacks.co/reference/sample-configuration-files)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 1558,
      "title": "Stacks Node Configuration | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/sample-configuration-files",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Signer Configuration File Options](https://docs.stacks.co/reference/sample-configuration-files#signer-configuration-file-options)\n  * [Example Configs](https://docs.stacks.co/reference/sample-configuration-files#example-configs)\n  * [Testnet Signer](https://docs.stacks.co/reference/sample-configuration-files#testnet-signer)\n  * [Stacks Node Testnet Config](https://docs.stacks.co/reference/sample-configuration-files#stacks-node-testnet-config)\n  * [Mainnet Signer](https://docs.stacks.co/reference/sample-configuration-files#mainnet-signer)\n  * [Mainnet Stacks Node](https://docs.stacks.co/reference/sample-configuration-files#mainnet-stacks-node)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Signer Configuration\nNote that in this version, the Stacks node will not boot if it sees config values that are unused. If your node is not booting, be sure to check your logs for any messages indicating\n### \n[](https://docs.stacks.co/reference/sample-configuration-files#signer-configuration-file-options)\nSigner Configuration File Options\nThe signer configuration file is a TOML file that contains the configuration options for your signer. Below are the options you can set in the signer configuration file.\nName\nRequired\nDescription\nnode_host\n‚úì\nIP:PORT where your Stacks node can be accessed. The port 20443 is the default RPC endpoint for Stacks nodes. Note that you must use an IP address - DNS hosts are not supported at this time.\nendpoint\n‚úì\nIP:PORT where the signer will expose an RPC endpoint for receiving events from your Stacks node.\nstacks_private_key\n‚úì\nHex representation of the signer's Stacks private key used for communicating with the Stacks Node, including writing to the Stacker DB instance.\nnetwork\n‚úì\nNetwork to use. One of \"mainnet\", \"testnet\" or \"mocknet\".\nauth_password\n‚úì\nAuthorization token for HTTP requests made from the signer to your Stacks node.\ndb_path\n‚úì\nPath to the signer's database file\nblock_proposal_timeout_ms\nSpecifies the maximum time (in milliseconds) a signer waits after a Bitcoin block for a miner to produce their first Nakamoto block. If the miner exceeds this time, the signer marks their tenure as invalid and rejects subsequent block proposals. Default value of 600_000 (10 minutes).\nmetrics_endpoint\nIP:PORT for Prometheus metrics collection.\nchain_id\nAn optional ChainID, only used for custom networks (like Nakamoto Testnet)\n### \n[](https://docs.stacks.co/reference/sample-configuration-files#example-configs)\nExample Configs\nBelow are sample configuration files for running a Stacks node and signer provided in one place for convenience. You'll need to modify some of these according to the [How to Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) doc.\n### \n[](https://docs.stacks.co/reference/sample-configuration-files#testnet-signer)\nTestnet Signer\nCopy```\n# The IP address and port where your Stacks node can be accessed.\n# The port 20443 is the default RPC endpoint for Stacks nodes.\n# Note that you must use an IP address - DNS hosts are not supported at this time.\n# This should be the IP address accessible via Docker, usually via a network.\nnode_host =\"127.0.0.1:20443\"\n# This is the location where the signer will expose an RPC endpoint for\n# receiving events from your Stacks node.\nendpoint =\"127.0.0.1:30000\"\n# Either ‚Äútestnet‚Äù or ‚Äúmainnet‚Äù\nnetwork =\"testnet\"\n# this is a file path where your signer will persist data. If using Docker,\n# this must be within a volume, so that data can be persisted across restarts\ndb_path =\"/var/stacks/signer.sqlite\"\n# an authentication token that is used for some HTTP requests made from the\n# signer to your Stacks node. You‚Äôll need to use this later on when configuring\n# your Stacks node. You create this field yourself, rather than it being generated\n# with your private key.\nauth_password =\"$your_http_auth_token\"\n# This is the privateKey field from the keys you generated in the\n# previous step.\nstacks_private_key =\"$your_stacks_private_key\"\n```\n\n### \n[](https://docs.stacks.co/reference/sample-configuration-files#stacks-node-testnet-config)\nStacks Node Testnet Config\nNote that the `block_proposal_token` field has changed to `auth_token` in the Stacks node configuration file.\nThis is the configuration you'll need to run a Stacks follower node if you are also running a signer. Be sure to change the commented lines to the appropriate data for your setup. If you are not familiar with the process of setting up a signer, be sure to follow the [How to Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) guide.\nAn overview of all Stacks node configuration options can be found in the [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration) doc.\nAdditions necessary specifically to run a signer are the `[connection_options]` and `[[events_observer]]` sections and the `stacker = true` line. There are also a few comments detailing other lines that need to change.\nCopy```\n[node]\nrpc_bind = \"0.0.0.0:20443\"\np2p_bind = \"0.0.0.0:20444\"\nbootstrap_node = \"029266faff4c8e0ca4f934f34996a96af481df94a89b0c9bd515f3536a95682ddc@seed.testnet.hiro.so:30444\"\nprometheus_bind = \"127.0.0.1:9153\"\nworking_dir = \"/hirosystems/data\"\nlocal_peer_seed = \"{{ redacted }}\"\n# Required for nodes attached to signers, optional for other nodes\nstacker = true\n[burnchain]\nchain = \"bitcoin\"\nmode = \"krypton\"\npeer_host = \"bitcoin.regtest.hiro.so\"\npeer_port = 18444\npox_prepare_length = 100\npox_reward_length = 900\n# Set your auth token, which the signer uses\n# This should match the auth_password field of your signer config\n[connection_options]\nauth_token = \"12345\"\n# Set your signer as an event observer\n[[events_observer]]\n# This endpoint is where your signer will communicate with your Stacks node\nendpoint = \"127.0.0.1:30000\"\nevents_keys = [\"stackerdb\", \"block_proposal\", \"burn_blocks\"]\n[[ustx_balance]]\naddress = \"ST2QKZ4FKHAH1NQKYKYAYZPY440FEPK7GZ1R5HBP2\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST319CF5WV77KYR1H3GT0GZ7B8Q4AQPY42ETP1VPF\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST221Z6TDTC5E0BYR2V624Q2ST6R0Q71T78WTAX6H\"\namount = 10000000000000000\n[[ustx_balance]]\naddress = \"ST2TFVBMRPS5SSNP98DQKQ5JNB2B6NZM91C4K3P7B\"\namount = 10000000000000000\n[fee_estimation]\nfee_estimator = \"fuzzed_weighted_median_fee_rate\"\n[[burnchain.epochs]]\nepoch_name = \"1.0\"\nstart_height = 0\n[[burnchain.epochs]]\nepoch_name = \"2.0\"\nstart_height = 0\n[[burnchain.epochs]]\nepoch_name = \"2.05\"\nstart_height = 1\n[[burnchain.epochs]]\nepoch_name = \"2.1\"\nstart_height = 2\n[[burnchain.epochs]]\nepoch_name = \"2.2\"\nstart_height = 3\n[[burnchain.epochs]]\nepoch_name = \"2.3\"\nstart_height = 4\n[[burnchain.epochs]]\nepoch_name = \"2.4\"\nstart_height = 5\n[[burnchain.epochs]]\nepoch_name = \"2.5\"\nstart_height = 6\n[[burnchain.epochs]]\nepoch_name = \"3.0\"\nstart_height = 1_900\n[[burnchain.epochs]]\nepoch_name = \"3.1\"\nstart_height = 2_000\n[[burnchain.epochs]]\nepoch_name = \"3.2\"\nstart_height = 71_525\n```\n\n### \n[](https://docs.stacks.co/reference/sample-configuration-files#mainnet-signer)\nMainnet Signer\nThis config is very similar to the testnet config, except the `network` field is changed.\nCopy```\n# The IP address and port where your Stacks node can be accessed.\n# The port 20443 is the default RPC endpoint for Stacks nodes.\n# Note that you must use an IP address - DNS hosts are not supported at this time.\n# This should be the IP address accessible via Docker, usually via a network.\nnode_host = \"127.0.0.1:20443\"\n# This is the location where the signer will expose an RPC endpoint for\n# receiving events from your Stacks node.\nendpoint = \"127.0.0.1:30000\"\n# Either ‚Äútestnet‚Äù or ‚Äúmainnet‚Äù\nnetwork = \"mainnet\"\n# this is a file path where your signer will persist data. If using Docker,\n# this must be within a volume, so that data can be persisted across restarts\ndb_path = \"/var/stacks/signer.sqlite\"\n# an authentication token that is used for some HTTP requests made from the\n# signer to your Stacks node. You‚Äôll need to use this later on when configuring\n# your Stacks node. You create this field yourself, rather than it being generated\n# with your private key.\nauth_password = \"$your_http_auth_token\"\n# This is the privateKey field from the keys you generated in the\n# previous step.\nstacks_private_key = \"$your_stacks_private_key\"\n# The IP address and port where prometheus metrics can be accessed.\nmetrics_endpoint = \"127.0.0.1:9154\"\n# Determining when a time-based tenure extend will be accepted\ntenure_idle_timeout_secs = 120\n```\n\n### \n[](https://docs.stacks.co/reference/sample-configuration-files#mainnet-stacks-node)\nMainnet Stacks Node\nWith a mainnet Stacks node config, you'll need to change the bootstrap node field and the burnchain fields. Other than that, the `ustx_balance` fields are not necessary.\nCopy```\n[node]\n# Set this based on where you downloaded\n# the chain state archive as described in the How to Run a Signer guide:\nworking_dir = \"/data-dir-somewhere\"\nrpc_bind = \"0.0.0.0:20443\"\np2p_bind = \"0.0.0.0:20444\"\n# This is the node that your node will use to begin syncing chain state\nbootstrap_node = \"02196f005965cebe6ddc3901b7b1cc1aa7a88f305bb8c5893456b8f9a605923893@seed.mainnet.hiro.so:20444,02539449ad94e6e6392d8c1deb2b4e61f80ae2a18964349bc14336d8b903c46a8c@cet.stacksnodes.org:20444,02ececc8ce79b8adf813f13a0255f8ae58d4357309ba0cedd523d9f1a306fcfb79@sgt.stacksnodes.org:20444,0303144ba518fe7a0fb56a8a7d488f950307a4330f146e1e1458fc63fb33defe96@est.stacksnodes.org:20444\"\n# Required for nodes attached to signers, optional for other nodes\nstacker = true\n[burnchain]\nchain = \"bitcoin\"\nmode = \"mainnet\"\npeer_host = \"bitcoin.mainnet.stacks.org\"\n# Set your auth token, which the signer uses\n# This should match the auth_password field of your signer config\n[connection_options]\nauth_token = \"12345\"\n# Set your signer as an event observer\n[[events_observer]]\n# This endpoint is where your signer will communicate with your Stacks node\nendpoint = \"127.0.0.1:30000\"\nevents_keys = [\"stackerdb\", \"block_proposal\", \"burn_blocks\"]\n```\n\n[PreviousStacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)[NextStacks Tooling](https://docs.stacks.co/reference/the-stack)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 1810,
      "title": "Signer Configuration | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference/the-stack",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Building Blocks](https://docs.stacks.co/reference/the-stack#building-blocks)\n  * [Tools](https://docs.stacks.co/reference/the-stack#tools)\n  * [Educational Resources](https://docs.stacks.co/reference/the-stack#educational-resources)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Stacks Tooling\nNew to developing on Stacks or looking for a quick reference guide for all the important components and links? You're in the right place.\nWe'll go over all the building blocks you need to be aware of to build high-quality Stacks dapps. This page exists to serve as a reference to the Stacks developer's tool chest. In addition to the tools below, stacks.co houses an index of [apps, services, and other integrations available on Stacks](https://www.stacks.co/explore/ecosystem?category=All+Teams#tools).\n### \n[](https://docs.stacks.co/reference/the-stack#building-blocks)\nBuilding Blocks\n#### \n[](https://docs.stacks.co/reference/the-stack#clarity)\nClarity\n[Clarity](https://github.com/stacks-network/docs/blob/master/reference/broken-reference/README.md) is the smart contract language on Stacks. If you want to build the next decentralized social network, DeFi protocol, or any other Stacks dapp, you'll need to know Clarity.\n#### \n[](https://docs.stacks.co/reference/the-stack#post-conditions)\nPost Conditions\n[Post conditions](https://docs.stacks.co/reference/the-stack#post-conditions) are a cool feature of the Stacks blockchain that allow you to verify the legitimacy of a transaction on the client side before it is executed. This adds an additional layer of defense against malicious smart contracts.\n#### \n[](https://docs.stacks.co/reference/the-stack#proof-of-transfer)\nProof of Transfer\n[PoX](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer) is the unique consensus mechanism of Stacks that facilitates new block production and also allows Stackers to earn real Bitcoin yield by participating in locking their STX tokens.\n#### \n[](https://docs.stacks.co/reference/the-stack#stacking)\nStacking\nSpeaking of [Stacking](https://docs.stacks.co/concepts/block-production/stacking), it's the mechanism that helps to secure the Stacks chain and allows Stackers to earn real Bitcoin yield transferred by miners.\n#### \n[](https://docs.stacks.co/reference/the-stack#sip-009-and-sip-010-tokens)\nSIP-009 and SIP-010 Tokens\nFungible and non-fungible tokens in Clarity are defined by [SIP-009](https://docs.stacks.co/) and [SIP-010](https://github.com/stacksgov/sips/blob/main/sips/sip-010/sip-010-fungible-token-standard.md) standards. You can learn more about how to work with these tokens in the Clarity book.\n### \n[](https://docs.stacks.co/reference/the-stack#tools)\nTools\n#### \n[](https://docs.stacks.co/reference/the-stack#wallets)\nWallets\nWallets are a key tool in any web3 ecosystem, and Stacks is no different. There are several options available including:\n  * [Leather](https://leather.io/)\n  * [Xverse](https://www.xverse.app/)\n  * [Asigna](https://asigna.io/)\n\n\n#### \n[](https://docs.stacks.co/reference/the-stack#platform)\nPlatform\nThe [Hiro Platform](https://www.hiro.so/platform) is your all-in-one cloud development environment for Stacks development, and is integrated with most of the tools listed below.\nIt's by far the easiest way to get up and running quickly. Plus, they have SSH integration\n#### \n[](https://docs.stacks.co/reference/the-stack#explorer)\nExplorer\nEvery developer needs a block explorer to see take a look at information about blocks and transactions being submitted to the chain. You have two choices here: the [Hiro Explorer](https://explorer.hiro.so/) and [STXScan](https://stxscan.co/).\n#### \n[](https://docs.stacks.co/reference/the-stack#api)\nAPI\nIf you want to interact with or read data from the chain, there's a good chance the [Hiro API](https://docs.hiro.so/stacks-blockchain-api) has an endpoint for that.\n#### \n[](https://docs.stacks.co/reference/the-stack#stacks.js)\nStacks.js\n[Stacks.js](https://www.hiro.so/stacks-js) is the de-facto JavaScript library for the Stacks ecosystem. There are several packages here that will help you build robust frontends for your applications.\n#### \n[](https://docs.stacks.co/reference/the-stack#clarinet)\nClarinet\nAll good developer tooling needs a robust, easy-to-use development environment. Enter [Clarinet](https://www.hiro.so/clarinet). Clarinet provides everything you need to write, test, and deploy Clarity smart contracts, including a fully-featured local devnet blockchain.\n#### \n[](https://docs.stacks.co/reference/the-stack#chainhook)\nChainhook\nOne of the key use cases for Stacks is being able to directly interact with the Bitcoin chain. Hiro's [Chainhook](https://docs.hiro.so/chainhook) makes this easier by providing an IFTTT system for responding and reacting to events on both the Bitcoin and Stacks chains.\n#### \n[](https://docs.stacks.co/reference/the-stack#stacking-tools)\nStacking Tools\nThe Degen Lab team has created a [suite of tools](https://stacking.tools/) to make stacking significantly easier including a signer signature generator, a solo stacking dapp to stack without needing to run a signer, and a TypeScript library for mocking stacking functions.\n#### \n[](https://docs.stacks.co/reference/the-stack#oracles-and-price-feeds)\nOracles and Price Feeds\nDIA and Pyth provide oracle services for the Stacks layer. Find [documentation for DIA here](https://docs.diadata.org/use-nexus-product/nexus/data-delivery-usage/integrated-blockchains/stacks-price-oracles) and learn more about the [developer release of Pyth here](https://www.pyth.network/blog/developer-release-pyth-on-stacks).\n### \n[](https://docs.stacks.co/reference/the-stack#educational-resources)\nEducational Resources\n#### \n[](https://docs.stacks.co/reference/the-stack#docs)\nDocs\nThese docs you are currently looking at are a great place to get a comprehensive view of all things in the Stacks ecosystem, as well as providing some links out to additional resources you'll find helpful.\n#### \n[](https://docs.stacks.co/reference/the-stack#hiro-docs)\nHiro Docs\nHiro is a key player in the Stacks ecosystem, providing several developer tools to make your life easier. They also publish excellent [guides and docs](https://docs.hiro.so/) to make using these tools a breeze.\n#### \n[](https://docs.stacks.co/reference/the-stack#clarity-book)\nClarity Book\nThe [Clarity Book](https://book.clarity-lang.org/) is the go-to resource for learning how to be a Clarity developer. In it you'll not only get the basics of Clarity but go through several practice projects and learn best practices.\n#### \n[](https://docs.stacks.co/reference/the-stack#learnweb3)\nLearnWeb3\nLearnWeb3 is one of the best education providers in the game. They have recently begun publishing courses as part of their [Stacks Developer Degree](https://learnweb3.io/degrees/stacks-developer-degree/). LearnWeb3 courses will teach you everything you need to know about building Stacks Dapps.\n#### \n[](https://docs.stacks.co/reference/the-stack#easya)\nEasyA\n[EasyA](https://www.easya.io/) is a mobile app with a Stacks course built in. The EasyA app allows you to learn on the go and is a great way to learn the basics of Stacks and Clarity development all directly in their app.\n#### \n[](https://docs.stacks.co/reference/the-stack#bitcoin-primer)\nBitcoin Primer\nIf you're new to Bitcoin, interested in how it works, and how you can build Stacks dapps that interact with it, the [Bitcoin Primer](https://start.bitcoinprimer.dev/) is a great place to start.\n[PreviousSigner Configuration](https://docs.stacks.co/reference/sample-configuration-files)[NextAudited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 1361,
      "title": "Stacks Tooling | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/example-contracts/audited-starter-contracts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üèóÔ∏èExample Contracts](https://docs.stacks.co/example-contracts)\n\n\n# Audited Starter Contracts\nHere's a list of sample contracts to learn Clarity or to serve as a starting point for your next project. All contracts come from the [Clarity book](https://book.clarity-lang.org/) and have been audited by [Coinfabrik](https://www.coinfabrik.com/).\n  * [Counter](https://github.com/clarity-lang/book/tree/main/projects/counter)\n  * [Multisig Vault](https://github.com/clarity-lang/book/tree/main/projects/multisig-vault)\n  * [Sip-009 NFT](https://github.com/clarity-lang/book/tree/main/projects/sip009-nft)\n  * [SIP-010 FT](https://github.com/clarity-lang/book/tree/main/projects/sip010-ft)\n  * [Timelocked Wallet](https://github.com/clarity-lang/book/tree/main/projects/timelocked-wallet)\n  * [Tiny Market (NFT marketplace)](https://github.com/clarity-lang/book/tree/main/projects/tiny-market)\n\n\n[PreviousStacks Tooling](https://docs.stacks.co/reference/the-stack)[NextStacking](https://docs.stacks.co/example-contracts/stacking)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 602,
      "title": "Audited Starter Contracts | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/example-contracts/stacking",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Prerequisites](https://docs.stacks.co/example-contracts/stacking#prerequisites)\n  * [Solo Stacking](https://docs.stacks.co/example-contracts/stacking#solo-stacking)\n  * [Delegated Stacking](https://docs.stacks.co/example-contracts/stacking#delegated-stacking)\n  * [How Stacking Reward Distribution Works](https://docs.stacks.co/example-contracts/stacking#how-stacking-reward-distribution-works)\n  * [Errors](https://docs.stacks.co/example-contracts/stacking#errors)\n\n\nWas this helpful?\nCopy\n  1. [üèóÔ∏èExample Contracts](https://docs.stacks.co/example-contracts)\n\n\n# Stacking\nStacking is implemented as a smart contract using Clarity. You can always find the Stacking contract identifier using the Stacks Blockchain API [`v2/pox` endpoint](https://docs.hiro.so/api#operation/get_pox_info).\nCurrently, stacking uses the pox-4 contract. The deployed pox-4 contract and included comments can be [viewed in the explorer](https://explorer.hiro.so/txid/SP000000000000000000002Q6VF78.pox-4?chain=mainnet).\nIn this walkthrough, we'll cover the entire stacking contract from start to finish, including descriptions of the various functions and errors, and when you might use/encounter them.\nIf you are running into a specific stacking error, jump to the [errors section](https://docs.stacks.co/example-contracts/stacking#errors).\nRather than walking through the contract line by line, which you can do by simply reading the contract code and the comments, we'll instead explore it from the perspective of conducting stacking operations, including solo stacking, delegating, and running a pool.\nAt the bottom you will find a list of some errors you may run into and their explanations.\nThere are a few utilities that make interacting with this contract easier including [Leather Earn](https://earn.leather.io) as an UI and the [@stacks/stacking package](https://www.npmjs.com/package/@stacks/stacking) for a JS library.\nHiro has a [detailed guide](https://docs.hiro.so/stacks.js/guides/how-to-integrate-stacking) available for stacking using this library as well as a [Nakamoto guide](https://docs.hiro.so/nakamoto/stacks-js) specifically for the additions made to work with `pox-4`.\n### \n[](https://docs.stacks.co/example-contracts/stacking#prerequisites)\nPrerequisites\nIf you are not familiar with stacking as a concept, it will be useful to [familiarize yourself with that first](https://docs.stacks.co/concepts/block-production/stacking) before diving into the contract.\n### \n[](https://docs.stacks.co/example-contracts/stacking#solo-stacking)\nSolo Stacking\nSolo stacking is the simplest option, and begins by calling the `stack-stx` function.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#stack-stx)\nstack-stx\nThis function locks up the given amount of STX for the given lock period (number of reward cycles) for the `tx-sender`.\nHere's the full code for that function, then we'll dive into how it works below that.\nCopy```\n(define-public (stack-stx (amount-ustx uint)\n                          (pox-addr (tuple (version (buff1)) (hashbytes (buff32))))\n                          (start-burn-ht uint)\n                          (lock-period uint)\n                          (signer-sig (optional (buff65)))\n                          (signer-key (buff33))\n                          (max-amount uint)\n                          (auth-id uint))\n;; this stacker's first reward cycle is the _next_ reward cycle\n    (let ((first-reward-cycle (+ u1 (current-pox-reward-cycle)))\n          (specified-reward-cycle (+ u1 (burn-height-to-reward-cycle start-burn-ht))))\n;; the start-burn-ht must result in the next reward cycle, do not allow stackers\n;;  to \"post-date\" their `stack-stx` transaction\n      (asserts! (is-eq first-reward-cycle specified-reward-cycle)\n                (err ERR_INVALID_START_BURN_HEIGHT))\n;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n;; tx-sender principal must not be stacking\n      (asserts! (is-none (get-stacker-info tx-sender))\n        (err ERR_STACKING_ALREADY_STACKED))\n;; tx-sender must not be delegating\n      (asserts! (is-none (get-check-delegation tx-sender))\n        (err ERR_STACKING_ALREADY_DELEGATED))\n;; the Stacker must have sufficient unlocked funds\n      (asserts! (>= (stx-get-balance tx-sender) amount-ustx)\n        (err ERR_STACKING_INSUFFICIENT_FUNDS))\n;; Validate ownership of the given signer key\n      (try! (consume-signer-key-authorization pox-addr (- first-reward-cycle u1) \"stack-stx\" lock-period signer-sig signer-key amount-ustx max-amount auth-id))\n;; ensure that stacking can be performed\n      (try! (can-stack-stx pox-addr amount-ustx first-reward-cycle lock-period))\n;; register the PoX address with the amount stacked\n      (let ((reward-set-indexes (try! (add-pox-addr-to-reward-cycles pox-addr first-reward-cycle lock-period amount-ustx tx-sender signer-key))))\n;; add stacker record\n         (map-set stacking-state\n           { stacker: tx-sender }\n           { pox-addr: pox-addr,\n             reward-set-indexes: reward-set-indexes,\n             first-reward-cycle: first-reward-cycle,\n             lock-period: lock-period,\n             delegated-to: none })\n;; return the lock-up information, so the node can actually carry out the lock.\n          (ok { stacker: tx-sender, lock-amount: amount-ustx, signer-key: signer-key, unlock-burn-height: (reward-cycle-to-burn-height (+ first-reward-cycle lock-period)) }))))\n```\n\nFirst let's cover the needed parameters.\n  * `amount-ustx` is the amount of STX you would like to lock, denoted in micro-STX, or uSTX (1 STX = 1,000,000 uSTX).\n  * `pox-addr` is a tuple that encodes the Bitcoin address to be used for the PoX rewards, details below.\n  * `start-burn-ht` is the Bitcoin block height you would like to begin stacking. You will receive rewards in the reward cycle following `start-burn-ht`. Importantly, `start-burn-ht` may not be further into the future than the current reward cycle, and in most cases should be set to the current burn block height.\n  * `lock-period` sets the number of reward cycles you would like you lock your STX for, this can be between 1 and 12.\n  * `signer-sig` is a unique generated signature that proves ownership of this signer. Further details for its role and how to generate it can be found in the [How to Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow) document.\n  * `signer-key` is the public key of your signer, more details in the [How to Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) document.\n  * `max-amount` sets the maximum amount allowed to be stacked during the provided stacking period.\n  * `auth-id` is a unique string to prevent re-use of this stacking transaction.\n\n\nIt's important to make sure that these fields match what you pass in to the signer signature generation. If they don't, you will likely get error 35 (`ERR_INVALID_SIGNATURE_PUBKEY`) when trying to submit this transaction as the signer signature will not be valid.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#supported-reward-address-types)\nSupported Reward Address Types\nFor the `pox-addr` field, the `version` buffer must represent what kind of bitcoin address is being submitted. These are all the possible values you can pass here depending on your address type:\nCopy```\n(define-constant ADDRESS_VERSION_P2PKH 0x00)\n(define-constant ADDRESS_VERSION_P2SH 0x01)\n(define-constant ADDRESS_VERSION_P2WPKH 0x02)\n(define-constant ADDRESS_VERSION_P2WSH 0x03)\n(define-constant ADDRESS_VERSION_NATIVE_P2WPKH 0x04)\n(define-constant ADDRESS_VERSION_NATIVE_P2WSH 0x05)\n(define-constant ADDRESS_VERSION_NATIVE_P2TR 0x06)\n```\n\nThe `hashbytes` are the 20 hash bytes of the bitcoin address. You can obtain that from a bitcoin library, for instance using [`bitcoinjs-lib`](https://github.com/bitcoinjs/bitcoinjs-lib):\nCopy```\nconst btc = require(\"bitcoinjs-lib\");\nconsole.log(\n  \"0x\" +\n    btc.address\n      .fromBase58Check(\"1C56LYirKa3PFXFsvhSESgDy2acEHVAEt6\")\n      .hash.toString(\"hex\")\n);\n```\n\nThe first thing the `stack-stx` function will do perform several checks including:\n  * The `start-burn-ht` results in the next reward cycle\n  * The function is being called by the `tx-sender` or an allowed contract caller\n  * The `tx-sender` is not currently stacking or delegating\n  * The `tx-sender` has enough funds\n  * The given `signer-key` is valid, proving ownership\n  * Stacking can be performed. This is determined through additional checks including if the amount meets the minimum stacking threshold and if the lock period and provided Bitcoin address are valid\n\n\nYou can explore the private functions that handle these checks to see exactly how they do so.\nNext we register the provided PoX address for the next reward cycle, assign its specific reward slot, and add it to the `stacking-state` map, which keeps track of all current stackers per reward cycle.\nFinally we return the lock up information so the node can carry out the lock by reading this information. This step is what actually locks the STX and prevents the stacker from using them on-chain.\nFrom here, the locked STX tokens will be unlocked automatically at the end of the lock period.\nThe other option is that the stacker can call the `stack-increase` or `stack-extend` functions to either increase the amount of STX they have locked or extend the time to lock them, respectively.\n### \n[](https://docs.stacks.co/example-contracts/stacking#delegated-stacking)\nDelegated Stacking\nDelegated stacking has a few additional steps to it. It is essentially a three-step process:\n  * Delegator delegates their STX to a pool operator\n  * Pool operator stacks their delegated STX\n  * Pool operator commits an aggregate of all STX delegated to them\n\n\nThere are also a few alternative steps here depending on the action you want to take.\n  * Revoke delegation\n\n\nEach of these steps has a corresponding function. Let's dig into them.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#delegate-stx)\ndelegate-stx\nThis function is called by the individual stacker delegating their STX to a pool operator. An individual stacker choosing to delegate does not need to run their own signer.\nThis function does not actually lock the STX, but just allows the pool operator to issue the lock.\nCopy```\n(define-public (delegate-stx (amount-ustx uint)\n                             (delegate-to principal)\n                             (until-burn-ht (optional uint))\n                             (pox-addr (optional { version: (buff 1), hashbytes: (buff 32) })))\n    (begin\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n                (err ERR_STACKING_PERMISSION_DENIED))\n      ;; delegate-stx no longer requires the delegator to not currently\n      ;; be stacking.\n      ;; delegate-stack-* functions assert that\n      ;; 1. users can't swim in two pools at the same time.\n      ;; 2. users can't switch pools without cool down cycle.\n      ;;    Other pool admins can't increase or extend.\n      ;; 3. users can't join a pool while already directly stacking.\n      ;; pox-addr, if given, must be valid\n      (match pox-addr\n         address\n            (asserts! (check-pox-addr-version (get version address))\n                (err ERR_STACKING_INVALID_POX_ADDRESS))\n         true)\n      ;; tx-sender must not be delegating\n      (asserts! (is-none (get-check-delegation tx-sender))\n        (err ERR_STACKING_ALREADY_DELEGATED))\n      ;; add delegation record\n      (map-set delegation-state\n        { stacker: tx-sender }\n        { amount-ustx: amount-ustx,\n          delegated-to: delegate-to,\n          until-burn-ht: until-burn-ht,\n          pox-addr: pox-addr })\n      (ok true)))\n```\n\nThis function takes a few parameters:\n  * `amount-ustx` is the amount the stacker is delegating denoted in uSTX.\n  * `delegate-to` is the Stacks address of the pool operator (or delegate) being delegated to.\n  * `until-burn-ht` is an optional parameter that describes when this delegation expires.\n  * `pox-addr` is an optional Bitcoin address. If this is provided, the pool operator must send rewards to this address. If it is not provided, it is up to the discretion of the pool operator where to send the rewards.\n\n\nIt first runs through a few checks to ensure that the function caller is allowed, the provided `pox-addr` is valid, and that the stacker is not already delegating.\nFinally it updates the `delegation-state` of the contract with the details.\nAt this point, no STX have been locked. The pool operator next needs to call the `delegate-stack-stx` function in order to partially lock the STX.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#delegate-stack-stx)\ndelegate-stack-stx\nCopy```\n;; As a delegate, stack the given principal's STX using partial-stacked-by-cycle\n;; Once the delegate has stacked > minimum, the delegate should call stack-aggregation-commit\n(define-public (delegate-stack-stx (stacker principal)\n                                   (amount-ustx uint)\n                                   (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                   (start-burn-ht uint)\n                                   (lock-period uint))\n    ;; this stacker's first reward cycle is the _next_ reward cycle\n    (let ((first-reward-cycle (+ u1 (current-pox-reward-cycle)))\n          (specified-reward-cycle (+ u1 (burn-height-to-reward-cycle start-burn-ht)))\n          (unlock-burn-height (reward-cycle-to-burn-height (+ (current-pox-reward-cycle) u1 lock-period))))\n      ;; the start-burn-ht must result in the next reward cycle, do not allow stackers\n      ;;  to \"post-date\" their `stack-stx` transaction\n      (asserts! (is-eq first-reward-cycle specified-reward-cycle)\n                (err ERR_INVALID_START_BURN_HEIGHT))\n      ;; must be called directly by the tx-sender or by an allowed contract-caller\n      (asserts! (check-caller-allowed)\n        (err ERR_STACKING_PERMISSION_DENIED))\n      ;; stacker must have delegated to the caller\n      (let ((delegation-info (unwrap! (get-check-delegation stacker) (err ERR_STACKING_PERMISSION_DENIED))))\n        ;; must have delegated to tx-sender\n        (asserts! (is-eq (get delegated-to delegation-info) tx-sender)\n                  (err ERR_STACKING_PERMISSION_DENIED))\n        ;; must have delegated enough stx\n        (asserts! (>= (get amount-ustx delegation-info) amount-ustx)\n                  (err ERR_DELEGATION_TOO_MUCH_LOCKED))\n        ;; if pox-addr is set, must be equal to pox-addr\n        (asserts! (match (get pox-addr delegation-info)\n                         specified-pox-addr (is-eq pox-addr specified-pox-addr)\n                         true)\n                  (err ERR_DELEGATION_POX_ADDR_REQUIRED))\n        ;; delegation must not expire before lock period\n        (asserts! (match (get until-burn-ht delegation-info)\n                         until-burn-ht (>= until-burn-ht\n                                           unlock-burn-height)\n                      true)\n                  (err ERR_DELEGATION_EXPIRES_DURING_LOCK))\n        )\n      ;; stacker principal must not be stacking\n      (asserts! (is-none (get-stacker-info stacker))\n        (err ERR_STACKING_ALREADY_STACKED))\n      ;; the Stacker must have sufficient unlocked funds\n      (asserts! (>= (stx-get-balance stacker) amount-ustx)\n        (err ERR_STACKING_INSUFFICIENT_FUNDS))\n      ;; ensure that stacking can be performed\n      (try! (minimal-can-stack-stx pox-addr amount-ustx first-reward-cycle lock-period))\n      ;; register the PoX address with the amount stacked via partial stacking\n      ;;   before it can be included in the reward set, this must be committed!\n      (add-pox-partial-stacked pox-addr first-reward-cycle lock-period amount-ustx)\n      ;; add stacker record\n      (map-set stacking-state\n        { stacker: stacker }\n        { pox-addr: pox-addr,\n          first-reward-cycle: first-reward-cycle,\n          reward-set-indexes: (list),\n          lock-period: lock-period,\n          delegated-to: (some tx-sender) })\n      ;; return the lock-up information, so the node can actually carry out the lock.\n      (ok { stacker: stacker,\n            lock-amount: amount-ustx,\n            unlock-burn-height: unlock-burn-height })))\n```\n\nAt this point, the stacker has given their permission to the pool operator to delegate their STX on their behalf.\nThe delegation is now in the hands of the pool operator to stack these delegated STX using the `delegate-stack-stx` function.\nThis function can only be called after a stacker has called their respective `delegate-stx` function and must be called by the pool operator for each instance of a stacker calling `delegate-stx`.\nLike the other functions, this function takes in several parameters and runs through several checks before updating the contract state.\n  * `stacker` is the principal of the stacker who has delegated their STX.\n  * `amount-ustx` is at most the amount of uSTX they have delegated.\n  * `pox-addr` is the Bitcoin address the rewards will be sent to. If the stacker passed this field in to their `delegate-stx` function, this must be the same value.\n  * `start-burn-ht` corresponds to the field passed in by the stacker.\n  * `lock-period` corresponds to the number of cycles to lock the funds for. This can be at most 12, or the number of cycles left until the cycle matching `until-burn-ht` argument in `delegate-stx` (if set by delegator).\n\n\nNow we assign a few variables using `let` before running several checks.\n  * `first-reward-cycle` is set to the next reward cycle automatically\n  * `specified-reward-cycle` is the reward cycle that the passed-in `start-burn-ht` parameter falls within\n  * `unlock-burn-height` is the Bitcoin block height at which the stackers STX will be unlocked\n\n\nNow we proceed to run through some checks including:\n  * The first reward cycle is the same as the specified reward cycle\n  * The function is being called by the `tx-sender` or an approved contract\n  * That the stacker actually delegated to the contract caller\n  * Then we get the information from the delegation and make sure the information we are passing here matches it\n  * That the stacker is not currently stacking\n  * They have sufficient unlocked funds\n  * Run the `minimal-can-stack-stx` to run a few additional checks to make sure stacking can occur\n\n\nNext we call a function called `add-pox-partial-stacked` which will add this stacker to a `partial-stacked-by-cycle` map.\nAfter those checks and partial stacking, we update the `stacking-state` map and return the information for the node to process.\nAt this point this stacker's STX are considered partially stacked. We still need to perform one more step as the pool operator in order to officially lock them.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#stack-aggregation-commit-indexed)\nstack-aggregation-commit-indexed\nThe `stack-aggregation-commit-indexed` function is just a wrapper for the private `inner-stack-aggregation-commit` function, so that is the source code included here.\nCopy```\n;; Commit partially stacked STX and allocate a new PoX reward address slot.\n;;   This allows a stacker/delegate to lock fewer STX than the minimal threshold in multiple transactions,\n;;   so long as: 1. The pox-addr is the same.\n;;               2. This \"commit\" transaction is called _before_ the PoX anchor block.\n;;   This ensures that each entry in the reward set returned to the stacks-node is greater than the threshold,\n;;   but does not require it be all locked up within a single transaction\n;;\n;; Returns (ok uint) on success, where the given uint is the reward address's index in the list of reward\n;; addresses allocated in this reward cycle.  This index can then be passed to `stack-aggregation-increase`\n;; to later increment the STX this PoX address represents, in amounts less than the stacking minimum.\n;;\n;; *New in Stacks 2.1.*\n(define-private (inner-stack-aggregation-commit (pox-addr { version: (buff 1), hashbytes: (buff 32) })\n                                                (reward-cycle uint)\n                                                (signer-sig (optional (buff 65)))\n                                                (signer-key (buff 33))\n                                                (max-amount uint)\n                                                (auth-id uint))\n  (let ((partial-stacked\n         ;; fetch the partial commitments\n         (unwrap! (map-get? partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n                  (err ERR_STACKING_NO_SUCH_PRINCIPAL))))\n    ;; must be called directly by the tx-sender or by an allowed contract-caller\n    (asserts! (check-caller-allowed)\n              (err ERR_STACKING_PERMISSION_DENIED))\n    (let ((amount-ustx (get stacked-amount partial-stacked)))\n      (try! (consume-signer-key-authorization pox-addr reward-cycle \"agg-commit\" u1 signer-sig signer-key amount-ustx max-amount auth-id))\n      (try! (can-stack-stx pox-addr amount-ustx reward-cycle u1))\n      ;; Add the pox addr to the reward cycle, and extract the index of the PoX address\n      ;; so the delegator can later use it to call stack-aggregation-increase.\n      (let ((add-pox-addr-info\n                (add-pox-addr-to-ith-reward-cycle\n                   u0\n                   { pox-addr: pox-addr,\n                     first-reward-cycle: reward-cycle,\n                     num-cycles: u1,\n                     reward-set-indexes: (list),\n                     stacker: none,\n                     signer: signer-key,\n                     amount-ustx: amount-ustx,\n                     i: u0 }))\n           (pox-addr-index (unwrap-panic\n                (element-at (get reward-set-indexes add-pox-addr-info) u0))))\n        ;; don't update the stacking-state map,\n        ;;  because it _already has_ this stacker's state\n        ;; don't lock the STX, because the STX is already locked\n        ;;\n        ;; clear the partial-stacked state, and log it\n        (map-delete partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle })\n        (map-set logged-partial-stacked-by-cycle { pox-addr: pox-addr, sender: tx-sender, reward-cycle: reward-cycle } partial-stacked)\n        (ok pox-addr-index)))))\n```\n\nThis function contains many of the same parameters as the `stack-stx` function, with a few changes:\n  * `pox-addr` is a tuple that encodes the Bitcoin address to be used for the PoX rewards, details below\n  * `reward-cycle` is the reward cycle that these delegated STX will be stacked in\n  * `signer-sig` is a unique generated signature that proves ownership of this signer. Further details for its role and how to generate it can be found in the [How to Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow) doc\n  * `signer-key` is the public key of your signer, more details in the [How to Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) doc\n  * `max-amount` sets the maximum amount allowed to be stacked during the provided stacking period\n  * `auth-id` is a unique string to prevent re-use of this stacking transaction\n\n\nIt's important to make sure that these fields match what you pass in to the signer signature generation. If they don't, you will likely get error 35 (`ERR_INVALID_SIGNATURE_PUBKEY`) when trying to submit this transaction as the signer signature will not be valid.\nThe first thing we do is pull the partially stacked STX that have been added to the contract state via our `delegate-stack-stx` calls.\nNext we run through many of the same checks as in previous functions:\n  * Making sure the contract caller is allowed\n  * Making sure the signer signature is valid\n  * Making sure we can actually perform this stacking operation\n\n\nNow we take all of the delegated STX and actually add it to the reward cycle. At this point the pool operator has a reward slot in the chosen cycle.\nWe don't need to update the stacking state because we already did that in the `delegate-stack-stx` function.\nAll we need to do is delete and log the partially stacked STX state.\n### \n[](https://docs.stacks.co/example-contracts/stacking#how-stacking-reward-distribution-works)\nHow Stacking Reward Distribution Works\nAll of the above stacking functions take in a `pox-reward` field that corresponds to a Bitcoin address where BTC rewards will be sent. It's important to understand how these addresses are used and how reward distribution is handled in general.\nHow Bitcoin rewards are distributed is primarily up to the discretion of the pool operator. Since PoX reward distributions are handled using Bitcoin transactions, there is currently not an effective way to automate their distribution to individual delegated stackers.\nLet's go over the role of `pox-addr` in each function and how it should be used.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#stack-stx-1)\nstack-stx\nThis is the simplest option and simply corresponds to the Bitcoin address that the stacker would like to receive their rewards.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#delegate-stx-1)\ndelegate-stx\nIn this function, which is the one that the delegator will be calling to give permission to the pool operator to stack on their behalf, the `pox-addr` argument is optional.\nIf no `pox-addr` argument is not passed in, the pool operator determines where this delegator's rewards are sent.\nIf a `pox-addr` is passed in, then rewards must be distributed to that address. **However, if this is passed in, the delegator must have enough STX to meet the minimum stacking amount.**\nThe reason is because there are a finite amount of reward slots (4,000) and each `pox-addr` takes up one of these reward slots.\nStackers need to be able to stack the minimum in order to be eligible for one of these reward slots. A delegator may choose to delegate to a pool (even if they meet the minimum stacking requirement) if they do not want to handle the infrastructure of running a signer or the actual stacking operations, which is why this option exists.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#delegate-stack-stx-and-stack-aggregation-commit-indexed)\ndelegate-stack-stx and stack-aggregation-commit-indexed\nIn both of these functions, `pox-addr` corresponds to the address where the pool operator would like the rewards to be sent.\nAt this point, it is up to the pool operator to determine how to allocate rewards. In most cases, a pool operator will use a wrapper contract in order to transparently track this information on-chain, and manually send rewards out to participants according to the proportion that they delegated.\n### \n[](https://docs.stacks.co/example-contracts/stacking#errors)\nErrors\nYou may encounter several errors when trying to perform stacking operations. We won't cover them all in detail here, as you can see the error in the failed transaction and trace the source code to find it.\nBut we will cover some of the more common errors you may encounter, what they mean, and how to resolve them.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#error-35-err_invalid_signature_pubkey)\nError 35 - `ERR_INVALID_SIGNATURE_PUBKEY`\nThis is likely the most common error you will encounter, and you'll usually see it in a failed `stack-stx` or `stack-aggregation-commit` transaction.\nThis error actually occurs in the `consume-signer-key-authorization` which is called any time we pass in a signer signature.\nThis means one of two things:\n  * The public key you used to generate the signer signature is not the same as the one you are passing in to the `signer-key` field\n  * One of the fields you passed in to generate your signer signature does not match the field you passed in to either the `stack-stx` or `stack-aggregation-commit` function\n\n\nTo fix this, check all of the data you passed in to see where the mismatch is.\n#### \n[](https://docs.stacks.co/example-contracts/stacking#error-4-err_stacking_no_such_principal)\nError 4 - ERR_STACKING_NO_SUCH_PRINCIPAL\nThe stacking contract looks up partially stacked stx (after you have called `delegate-stack-stx`) with the lookup key `(pox-addr, stx-address, reward-cycle)`. This error means that either when you generated your signature or called the `stack-aggregation-commit` function, you passed in the wrong parameter for one of these. More information in the [stacking guide](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow#delegator-initiates-delegation).\n#### \n[](https://docs.stacks.co/example-contracts/stacking#error-24-err_invalid_start_burn_height)\nError 24 - ERR_INVALID_START_BURN_HEIGHT;\nThis means that the `start-burn-height` parameter parsed was invalid (in a past or future cycle, instead of the current one). This error will mostly be seen in `stack-stx` or `delegate-stack-stx` failed transactions.\n[PreviousAudited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)[NextBNS](https://docs.stacks.co/example-contracts/bns)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 4095,
      "title": "Stacking | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/example-contracts/bns",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Public functions](https://docs.stacks.co/example-contracts/bns#public-functions)\n  * [Read-only functions](https://docs.stacks.co/example-contracts/bns#read-only-functions)\n  * [Error codes](https://docs.stacks.co/example-contracts/bns#error-codes)\n\n\nWas this helpful?\nCopy\n  1. [üèóÔ∏èExample Contracts](https://docs.stacks.co/example-contracts)\n\n\n# BNS\nThe Bitcoin Name System (BNS) is implemented as a smart contract using Clarity.\nBelow is a list of public and read-only functions as well as error codes that can be returned by those methods:\n  * Public functions\n  * Read-only functions\n  * Error codes\n\n\n### \n[](https://docs.stacks.co/example-contracts/bns#public-functions)\nPublic functions\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-import)\nname-import\n**Input:**`**(buff 20), (buff 48), principal, (buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-import namespace name beneficiary zonefile-hash)**`\n**Description:**\nImports name to a revealed namespace. Each imported name is given both an owner and some off-chain state.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-preorder)\nname-preorder\n**Input:**`**(buff 20), uint**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(name-preorder hashed-salted-fqn stx-to-burn)**`\n**Description:**\nPreorders a name by telling all BNS nodes the salted hash of the BNS name. It pays the registration fee to the namespace owner's designated address.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-register)\nname-register\n**Input:**`**(buff 20), (buff 48), (buff 20), (buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-register namespace name salt zonefile-hash)**`\n**Description:**\nReveals the salt and the name to all BNS nodes, and assigns the name an initial public key hash and zone file hash.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-renewal)\nname-renewal\n**Input:**`**(buff 20), (buff 48), uint, (optional principal), (optional (buff 20))**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-renewal namespace name stx-to-burn new-owner zonefile-hash)**`\n**Description:**\nDepending in the namespace rules, a name can expire. For example, names in the .id namespace expire after 2 years. You need to send a name renewal every so often to keep your name.\nYou will pay the registration cost of your name to the namespace's designated burn address when you renew it. When a name expires, it enters a \"grace period\". The period is set to 5000 blocks (a month) but can be configured for each namespace.\nIt will stop resolving in the grace period, and all of the above operations will cease to be honored by the BNS consensus rules. You may, however, send a NAME_RENEWAL during this grace period to preserve your name. After the grace period, everybody can register that name again. If your name is in a namespace where names do not expire, then you never need to use this transaction.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-revoke)\nname-revoke\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-revoke namespace name)**`\n**Description:**\nMakes a name unresolvable. The BNS consensus rules stipulate that once a name is revoked, no one can change its public key hash or its zone file hash. The name's zone file hash is set to null to prevent it from resolving. You should only do this if your private key is compromised, or if you want to render your name unusable for whatever reason.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-transfer)\nname-transfer\n**Input:**`**(buff 20), (buff 48), principal, (optional (buff 20))**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-transfer namespace name new-owner zonefile-hash)**`\n**Description:**\nChanges the name's public key hash. You would send a name transfer transaction if you wanted to:\n  * Change your private key\n  * Send the name to someone else or\n  * Update your zone file\n\n\nWhen transferring a name, you have the option to also clear the name's zone file hash (i.e. set it to null). This is useful for when you send the name to someone else, so the recipient's name does not resolve to your zone file.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-update)\nname-update\n**Input:**`**(buff 20), (buff 48), (buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-update namespace name zonefile-hash)**`\n**Description:**\nChanges the name's zone file hash. You would send a name update transaction if you wanted to change the name's zone file contents. For example, you would do this if you want to deploy your own Gaia hub and want other people to read from it.\n#### \n[](https://docs.stacks.co/example-contracts/bns#namespace-preorder)\nnamespace-preorder\n**Input:**`**(buff 20), uint**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(namespace-preorder hashed-salted-namespace stx-to-burn)**`\n**Description:**\nRegisters the salted hash of the namespace with BNS nodes, and burns the requisite amount of cryptocurrency. Additionally, this step proves to the BNS nodes that user has honored the BNS consensus rules by including a recent consensus hash in the transaction. Returns pre-order's expiration date (in blocks).\n#### \n[](https://docs.stacks.co/example-contracts/bns#namespace-ready)\nnamespace-ready\n**Input:**`**(buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(namespace-ready namespace)**`\n**Description:**\nLaunches the namespace and makes it available to the public. Once a namespace is launched, anyone can register a name in it if they pay the appropriate amount of cryptocurrency.\n#### \n[](https://docs.stacks.co/example-contracts/bns#namespace-reveal)\nnamespace-reveal\n**Input:**`**(buff 20), (buff 20), uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, principal**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(namespace-reveal namespace namespace-salt p-func-base p-func-coeff p-func-b1 p-func-b2 p-func-b3 p-func-b4 p-func-b5 p-func-b6 p-func-b7 p-func-b8 p-func-b9 p-func-b10 p-func-b11 p-func-b12 p-func-b13 p-func-b14 p-func-b15 p-func-b16 p-func-non-alpha-discount p-func-no-vowel-discount lifetime namespace-import)**`\n**Description:**\nReveals the salt and the namespace ID (after a namespace preorder). It reveals how long names last in this namespace before they expire or must be renewed, and it sets a price function for the namespace that determines how cheap or expensive names its will be.All of the parameters prefixed by `p` make up the `price function`. These parameters govern the pricing and lifetime of names in the namespace.\nThe rules for a namespace are as follows:\n  * a name can fall into one of 16 buckets, measured by length. Bucket 16 incorporates all names at least 16 characters long.\n  * the pricing structure applies a multiplicative penalty for having numeric characters, or punctuation characters.\n  * the price of a name in a bucket is `((coeff) * (base) ^ (bucket exponent)) / ((numeric discount multiplier) * (punctuation discount multiplier))`\n\n\nExample:\n  * base = 10\n  * coeff = 2\n  * nonalpha discount: 10\n  * no-vowel discount: 10\n  * buckets 1, 2: 9\n  * buckets 3, 4, 5, 6: 8\n  * buckets 7, 8, 9, 10, 11, 12, 13, 14: 7\n  * buckets 15, 16+:\n\n\n### \n[](https://docs.stacks.co/example-contracts/bns#read-only-functions)\nRead-only functions\n#### \n[](https://docs.stacks.co/example-contracts/bns#can-name-be-registered)\ncan-name-be-registered\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(can-name-be-registered namespace name)**`\n**Description:**\nReturns true if the provided name can be registered.\n#### \n[](https://docs.stacks.co/example-contracts/bns#can-namespace-be-registered)\ncan-namespace-be-registered\n**Input:**`**(buff 20)**`\n**Output:**`**(response bool UnknownType)**`\n**Signature:**`**(can-namespace-be-registered namespace)**`\n**Description:**\nReturns true if the provided namespace is available.\n#### \n[](https://docs.stacks.co/example-contracts/bns#can-receive-name)\ncan-receive-name\n**Input:**`**principal**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(can-receive-name owner)**`\n**Description:**\nReturns true if the provided name can be received. That is, if it is not currently owned, a previous lease is expired, and the name wasn't revoked.\n#### \n[](https://docs.stacks.co/example-contracts/bns#get-name-price)\nget-name-price\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(get-name-price namespace name)**`\n**Description:**\nGets the price for a name.\n#### \n[](https://docs.stacks.co/example-contracts/bns#get-namespace-price)\nget-namespace-price\n**Input:**`**(buff 20)**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(get-namespace-price namespace)**`\n**Description:**\nGets the price for a namespace.\n#### \n[](https://docs.stacks.co/example-contracts/bns#get-namespace-properties)\nget-namespace-properties\n**Input:**`**(buff 20)**`\n**Output:**`**(response (tuple (namespace (buff 20)) (properties (tuple (can-update-price-function bool) (launched-at (optional uint)) (lifetime uint) (namespace-import principal) (price-function (tuple (base uint) (buckets (list 16 uint)) (coeff uint) (no-vowel-discount uint) (nonalpha-discount uint))) (revealed-at uint)))) int)**`\n**Signature:**`**(get-namespace-properties namespace)**`\n**Description:**\nGet namespace properties.\n#### \n[](https://docs.stacks.co/example-contracts/bns#is-name-lease-expired)\nis-name-lease-expired\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(is-name-lease-expired namespace name)**`\n**Description:**\nReturn true if the provided name lease is expired.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-resolve)\nname-resolve\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response (tuple (lease-ending-at (optional uint)) (lease-started-at uint) (owner principal) (zonefile-hash (buff 20))) int)**`\n**Signature:**`**(name-resolve namespace name)**`\n**Description:**\nGet name registration details.\n#### \n[](https://docs.stacks.co/example-contracts/bns#resolve-principal)\nresolve-principal\n**Input:**`**principal**`\n**Output:**`**(response (tuple (name (buff 48)) (namespace (buff 20))) (tuple (code int) (name (optional (tuple (name (buff 48)) (namespace (buff 20)))))))**`\n**Signature:**`**(resolve-principal owner)**`\n**Description:**\nReturns the registered name that a principal owns if there is one. A principal can only own one name at a time.\n### \n[](https://docs.stacks.co/example-contracts/bns#error-codes)\nError codes\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_insufficient_funds)\nERR_INSUFFICIENT_FUNDS\n**type:**`**int**`\n**value:**`**4001**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_already_exists)\nERR_NAMESPACE_ALREADY_EXISTS\n**type:**`**int**`\n**value:**`**1006**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_already_launched)\nERR_NAMESPACE_ALREADY_LAUNCHED\n**type:**`**int**`\n**value:**`**1014**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_blank)\nERR_NAMESPACE_BLANK\n**type:**`**int**`\n**value:**`**1013**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_charset_invalid)\nERR_NAMESPACE_CHARSET_INVALID\n**type:**`**int**`\n**value:**`**1016**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_hash_malformed)\nERR_NAMESPACE_HASH_MALFORMED\n**type:**`**int**`\n**value:**`**1015**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_not_found)\nERR_NAMESPACE_NOT_FOUND\n**type:**`**int**`\n**value:**`**1005**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_not_launched)\nERR_NAMESPACE_NOT_LAUNCHED\n**type:**`**int**`\n**value:**`**1007**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_operation_unauthorized)\nERR_NAMESPACE_OPERATION_UNAUTHORIZED\n**type:**`**int**`\n**value:**`**1011**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_already_exists)\nERR_NAMESPACE_PREORDER_ALREADY_EXISTS\n**type:**`**int**`\n**value:**`**1003**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_claimability_expired)\nERR_NAMESPACE_PREORDER_CLAIMABILITY_EXPIRED\n**type:**`**int**`\n**value:**`**1009**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_expired)\nERR_NAMESPACE_PREORDER_EXPIRED\n**type:**`**int**`\n**value:**`**1002**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_launchability_expired)\nERR_NAMESPACE_PREORDER_LAUNCHABILITY_EXPIRED\n**type:**`**int**`\n**value:**`**1010**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_not_found)\nERR_NAMESPACE_PREORDER_NOT_FOUND\n**type:**`**int**`\n**value:**`**1001**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_price_function_invalid)\nERR_NAMESPACE_PRICE_FUNCTION_INVALID\n**type:**`**int**`\n**value:**`**1008**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_stx_burnt_insufficient)\nERR_NAMESPACE_STX_BURNT_INSUFFICIENT\n**type:**`**int**`\n**value:**`**1012**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_unavailable)\nERR_NAMESPACE_UNAVAILABLE\n**type:**`**int**`\n**value:**`**1004**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_already_claimed)\nERR_NAME_ALREADY_CLAIMED\n**type:**`**int**`\n**value:**`**2011**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_blank)\nERR_NAME_BLANK\n**type:**`**int**`\n**value:**`**2010**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_charset_invalid)\nERR_NAME_CHARSET_INVALID\n**type:**`**int**`\n**value:**`**2022**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_claimability_expired)\nERR_NAME_CLAIMABILITY_EXPIRED\n**type:**`**int**`\n**value:**`**2012**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_could_not_be_minted)\nERR_NAME_COULD_NOT_BE_MINTED\n**type:**`**int**`\n**value:**`**2020**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_could_not_be_transferred)\nERR_NAME_COULD_NOT_BE_TRANSFERRED\n**type:**`**int**`\n**value:**`**2021**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_expired)\nERR_NAME_EXPIRED\n**type:**`**int**`\n**value:**`**2008**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_grace_period)\nERR_NAME_GRACE_PERIOD\n**type:**`**int**`\n**value:**`**2009**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_hash_malformed)\nERR_NAME_HASH_MALFORMED\n**type:**`**int**`\n**value:**`**2017**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_not_found)\nERR_NAME_NOT_FOUND\n**type:**`**int**`\n**value:**`**2013**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_not_resolvable)\nERR_NAME_NOT_RESOLVABLE\n**type:**`**int**`\n**value:**`**2019**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_operation_unauthorized)\nERR_NAME_OPERATION_UNAUTHORIZED\n**type:**`**int**`\n**value:**`**2006**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preordered_before_namespace_launch)\nERR_NAME_PREORDERED_BEFORE_NAMESPACE_LAUNCH\n**type:**`**int**`\n**value:**`**2018**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_already_exists)\nERR_NAME_PREORDER_ALREADY_EXISTS\n**type:**`**int**`\n**value:**`**2016**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_expired)\nERR_NAME_PREORDER_EXPIRED\n**type:**`**int**`\n**value:**`**2002**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_funds_insufficient)\nERR_NAME_PREORDER_FUNDS_INSUFFICIENT\n**type:**`**int**`\n**value:**`**2003**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_not_found)\nERR_NAME_PREORDER_NOT_FOUND\n**type:**`**int**`\n**value:**`**2001**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_revoked)\nERR_NAME_REVOKED\n**type:**`**int**`\n**value:**`**2014**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_stx_burnt_insufficient)\nERR_NAME_STX_BURNT_INSUFFICIENT\n**type:**`**int**`\n**value:**`**2007**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_transfer_failed)\nERR_NAME_TRANSFER_FAILED\n**type:**`**int**`\n**value:**`**2015**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_unavailable)\nERR_NAME_UNAVAILABLE\n**type:**`**int**`\n**value:**`**2004**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_panic)\nERR_PANIC\n**type:**`**int**`\n**value:**`**0**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_principal_already_associated)\nERR_PRINCIPAL_ALREADY_ASSOCIATED\n**type:**`**int**`\n**value:**`**3001**`\n[PreviousStacking](https://docs.stacks.co/example-contracts/stacking)[NextMulti Send](https://docs.stacks.co/example-contracts/multi-send)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1944,
      "title": "BNS | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/example-contracts/multi-send",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üèóÔ∏èExample Contracts](https://docs.stacks.co/example-contracts)\n\n\n# Multi Send\nMulti send is a very simple but highly useful utility contract for executing multiple STX transfers in a single transaction.\nIt takes in a list of addresses and amounts and folds through them to execute a STX transfer for each one.\nMainnet contract: <https://explorer.hiro.so/txid/0x59665b756dc0fa9efb3fca9e05a28f572c9b14ca894c115fd3e7d81a563e14f8?chain=mainnet>\nCopy```\n;; send-many\n(define-private (send-stx (recipient { to: principal, ustx: uint }))\n  (stx-transfer? (get ustx recipient) tx-sender (get to recipient)))\n(define-private (check-err (result (response bool uint))\n                           (prior (response bool uint)))\n  (match prior ok-value result\n               err-value (err err-value)))\n(define-public (send-many (recipients (list200 { to: principal, ustx: uint })))\n  (fold check-err\n    (map send-stx recipients)\n    (oktrue)))\n```\n\n[PreviousBNS](https://docs.stacks.co/example-contracts/bns)[Next2024](https://docs.stacks.co/press-and-top-links/2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 646,
      "title": "Multi Send | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n![Page cover](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FtOCiJfV1A2a8roFJSYLf%252F%252B%2520%286%29.svg%3Falt%3Dmedia%26token%3D093063f4-f5f2-4645-96fb-233fdc64ff4d&width=1248&dpr=4&quality=100&sign=3d6fa701&sv=2)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n\n\n#  üî∂2024\nThis page indexes top stories, press, and reports related to Stacks on a monthly basis.\nFor weekly stories delivered to your inbox, subscribe to [Stacks Snacks](https://stackssnacks.com/). For quarterly ecosystem recaps, subscribe to the [Stacks Foundation newsletter](https://newsletters.stacks.org).\n[üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)[üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)[üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)[üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)[üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)[üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)[üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)[üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)[üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)[üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)[üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)[üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n[PreviousMulti Send](https://docs.stacks.co/example-contracts/multi-send)[NextJanuary 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\nLast updated 9 months ago\nWas this helpful?\n",
      "wordCount": 602,
      "title": "2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/january-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏January 2024\nFor weekly stories delivered to your inbox, subscribe to [Stacks Snacks](https://stackssnacks.com/). For quarterly ecosystem recaps, subscribe to the [Stacks Foundation newsletter](https://newsletters.stacks.org).\n**üìô Bitcoin Layers Report by Spartan Group**[](https://docs.stacks.co/press-and-top-links/2024/january-2024#bitcoin-layers-report-by-spartan-group)\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252Fyov919stW71EYjFbopCk%252FCopy%2520of%2520Bitcoin%2520Layers-modified.png%3Falt%3Dmedia%26token%3De470a206-f945-47fe-b98f-ccc068b02d14&width=300&dpr=4&quality=100&sign=e828417e&sv=2)\n#### \n[](https://docs.stacks.co/press-and-top-links/2024/january-2024#tapestry-of-a-trustless-financial-era)\n**Tapestry of a Trustless Financial Era**\nDiving deep into the layers of Bitcoin's blossoming ecosystem, the first edition of the Bitcoin Layers Report unveils the emerging reality of a financial world where trust is embedded in technology rather than institutions. As Bitcoin evolves beyond a Store of Value, we stand on the cusp of a revolution in trustless finance and a new era of economic possibilities. [https://bitcoinlayersreport.com/](https://bitcoinlayersreport.com/)\nTitle\nOutlet/Author\nüå± [The Year Ahead | Pantera Blockchain Letter](https://panteracapital.com/blockchain-letter/the-year-ahead-2024/)\nPantera\nüüß [Q4 2023: No Denying Demand For Bitcoin L2s](https://newsletters.stacks.org/p/q4-2023)\nStacks Foundation\nüìô [Binance Research: Top 10 Narratives to Follow in 2024](https://public.bnbstatic.com/static/files/research/top-10-narratives.pdf)\nBinance Research\nüìï [The Bankless Guide to Stacks](https://www.bankless.com/the-bankless-guide-to-stacks)\nBankless\nüìä Electric Capital Report: [Stacks established developers up 51%](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL0tlblRoZVJvZ2Vycy9zdGF0dXMvMTc0ODA2MDU5OTcwMjE5MjYyNj9zPTIwJnJlZj1zdGFja3NibG9nJnV0bV9zb3VyY2U9c3RhY2tzc25hY2tzLmNvbSZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9jYW1wYWlnbj1kaXNjb3Zlci1zdGFja3MtaW4tc3BhcnRhbi1ncm91cC1iaXRjb2luLWwyLXJlcG9ydC1lbGVjdHJpYy1jYXBpdGFsLWRldmVsb3Blci1yZXBvcnQiLCJwb3N0X2lkIjoiZTdmYWFkODEtZmI3Ni00MjBmLTk3YWItNGJjMjdmM2RiYjdiIiwicHVibGljYXRpb25faWQiOiIzY2ZhYmZjYy0xNDU5LTQ0NTAtODI3MC1iOGJmM2RkMmFiOTciLCJ2aXNpdF90b2tlbiI6ImQxNDQwNWJiLWMxOWEtNDJiYi05NGQxLTY4MmRiNzZkOWQ3ZSIsImlhdCI6MTcwODA5NzQyMSwiaXNzIjoib3JjaGlkIn0.t0UBYmIXoMyGWCemN_n36kslOn35rIcv2v7LQR3nMLs)\nElectric Capital\nüì∞ [Bitcoin Could See Growth in Layer-2 Ecosystem, Drawing on Ethereum's Experience](https://www.coindesk.com/tech/2024/01/18/bitcoin-could-see-growth-in-layer-2-ecosystem-drawing-on-ethereums-experience/)\nCoindesk, Yahoo Finance\nüîÆ [Paul Veradittakit of Pantera Capital Lists Stacks In 6 Predictions Crypto 2024](https://www.coindesk.com/consensus-magazine/2023/12/20/6-predictions-for-crypto-in-2024-panteras-paul-veradittakit)\nCoindesk\nüèõÔ∏è [Franklin Templeton: Ordinals & Layer 2 solutions on Bitcoin shouldn‚Äôt be ignored](https://x.com/fti_us/status/1747708193378025475?s=46)\nFranklin Templeton\nüîâ [Podcast: Muneeb Ali joins us in The Blueprint](https://twitter.com/TheSpartanGroup/status/1747546980321304629)\nThe Blueprint\nüé® [Jack Butcher: Onboarding to Bitcoin](https://x.com/jackbutcher/status/1745557822203470022?t=ps-Sn2Ohh0TWBR4ptywL-Q&s=33)\nJack Butcher\nüëÄ [2024 Bitcoin Outlook: Ecosystem Beyond ETFs](https://4pillars.io/en/articles/2024-Bitcoin-Outlook-Ecosystem-Beyond-ETFs/public)\nFour Pillars\n‚ìÇÔ∏è [This Bitcoin ecosystem is having its moment](https://x.com/cosmo_jiang/status/1752870233231212747?s=20)\nCosmo Jiang, Pantera Capital\nüß™ [MT Capital Research Report: Stacks Nakamoto is about to be upgraded to inject new impetus into the Bitcoin ecosystem](https://www.gate.io/learn/articles/stacks-nakamoto-is-about-to-be-upgraded-to-inject-new-impetus-into-the-bitcoin-ecosystem/1211)\nMT Capital via Gate.io\nüìä [House of Chimera Analyzes Rapid Growth in Stacks Transactions](https://twitter.com/HouseofChimera/status/1745452755681218792)\nHouse of Chimera\nüëõ [Ryder to operate FAST Pool, become signer in Stacks‚Äô Nakamoto upgrade](https://crypto.news/ryder-to-operate-fast-pool-become-signer-in-stacks-nakamoto-upgrade/)\nCrypto.news\nüî∂ [Bitcoin 2024 Outlook](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3d3dy5va3guY29tL25sL2xlYXJuL3ZlbnR1cmVzLTIwMjQtYml0Y29pbi1vdXRsb29rP3V0bV9zb3VyY2U9c3RhY2tzc25hY2tzLmNvbSZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9jYW1wYWlnbj1iaXRjb2luLWwyLWRleC1yYWlzZXMtMS0zbS1pbi1wcmUtc2VlZC1mdW5kaW5nLXRoZS1sYXVuY2gtb2YtbjIxIiwicG9zdF9pZCI6IjU5MjAwM2Q5LTI0YjktNGMxOS1hNDc0LWYwNDRkYzlhMWUxNCIsInB1YmxpY2F0aW9uX2lkIjoiM2NmYWJmY2MtMTQ1OS00NDUwLTgyNzAtYjhiZjNkZDJhYjk3IiwidmlzaXRfdG9rZW4iOiJkMTQ0MDViYi1jMTlhLTQyYmItOTRkMS02ODJkYjc2ZDlkN2UiLCJpYXQiOjE3MDgwOTczNDAsImlzcyI6Im9yY2hpZCJ9.ZpuDlatRCYz537iRKwlGojFXDCZWCxl1NAGfCYZ_S7Y) (featuring Stacks and ALEX)\nOKX\nüí∞ Bitcoin DEX Bitflow raises [$1.3M in pre-seed funding](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL0JpdGZsb3dfRmluYW5jZS9zdGF0dXMvMTc1MDQ5NDc0MDc0NTc5MzkxMD91dG1fc291cmNlPXN0YWNrc3NuYWNrcy5jb20mdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fY2FtcGFpZ249Yml0Y29pbi1sMi1kZXgtcmFpc2VzLTEtM20taW4tcHJlLXNlZWQtZnVuZGluZy10aGUtbGF1bmNoLW9mLW4yMSIsInBvc3RfaWQiOiI1OTIwMDNkOS0yNGI5LTRjMTktYTQ3NC1mMDQ0ZGM5YTFlMTQiLCJwdWJsaWNhdGlvbl9pZCI6IjNjZmFiZmNjLTE0NTktNDQ1MC04MjcwLWI4YmYzZGQyYWI5NyIsInZpc2l0X3Rva2VuIjoiZDE0NDA1YmItYzE5YS00MmJiLTk0ZDEtNjgyZGI3NmQ5ZDdlIiwiaWF0IjoxNzA4MDk3MzQwLCJpc3MiOiJvcmNoaWQifQ.gAwmYWnQwFlQhmA3A__Mu0CGlhS7riNoZbzOefU-c2U)\nBitflow\nüòà DeFi Researcher Ignas: [‚ÄúDegen Playbook for Stacks‚Äù](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL2RlZmlpZ25hcy9zdGF0dXMvMTc0NDY5MDQyNzczNzgyMTQxMT9zPTQ2JnV0bV9zb3VyY2U9c3RhY2tzc25hY2tzLmNvbSZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9jYW1wYWlnbj1wb3RlbnRpYWwtc2NhbGluZy1zb2x1dGlvbi1mb3Itb3JkaW5hbHMtb24tbDItc3RhY2tzLWV0Zi1hcHByb3ZhbCIsInBvc3RfaWQiOiJkMmIzNjMxMi1jMTNhLTQyNDctODRiZS1mNzIzOTMxOTIyMzQiLCJwdWJsaWNhdGlvbl9pZCI6IjNjZmFiZmNjLTE0NTktNDQ1MC04MjcwLWI4YmYzZGQyYWI5NyIsInZpc2l0X3Rva2VuIjoiZDE0NDA1YmItYzE5YS00MmJiLTk0ZDEtNjgyZGI3NmQ5ZDdlIiwiaWF0IjoxNzA4MDk3NTM2LCJpc3MiOiJvcmNoaWQifQ.wYm07ZsU_dzCGsvPc2IuHoYLwRXFXQtRnQkJcIAr1KM)\n[Ignas](https://twitter.com/DefiIgnas) via [TLDR](https://tldr.tech/crypto/2024-01-10)\nüì∫ [Why DeFi on Stacks is the Next Bitcoin Bull](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL2hlcm9nYW1lcjIxYnRjL3N0YXR1cy8xNzQyOTY0MDgzNjQzNTY0MTczP3V0bV9zb3VyY2U9c3RhY2tzc25hY2tzLmNvbSZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9jYW1wYWlnbj1zdGFja3MtYXBwcy1jZWxlYnJhdGUtYWxsLXRpbWUtdHZsLWhpZ2gtYXMtbmV3LWRlZmktcHJvdG9jb2xzLWVtZXJnZSIsInBvc3RfaWQiOiJmYTkyOTQ4YS0xNDU2LTRlOTktYjBmOS1hNWYyMTczY2I4YjQiLCJwdWJsaWNhdGlvbl9pZCI6IjNjZmFiZmNjLTE0NTktNDQ1MC04MjcwLWI4YmYzZGQyYWI5NyIsInZpc2l0X3Rva2VuIjoiZDE0NDA1YmItYzE5YS00MmJiLTk0ZDEtNjgyZGI3NmQ5ZDdlIiwiaWF0IjoxNzA4MDk3NjA3LCJpc3MiOiJvcmNoaWQifQ.hHQdRz61DrxCRXTRuv7vGEyvuh2gTFl2Mc4u2EG6ks4)\nBlock Runner\nüìä [All time high Total Value Locked (TVL) for Bitcoin L2 Stacks](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL2RlZmlsbGFtYS5jb20vY2hhaW4vU3RhY2tzP3V0bV9zb3VyY2U9c3RhY2tzc25hY2tzLmNvbSZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9jYW1wYWlnbj1zdGFja3MtYXBwcy1jZWxlYnJhdGUtYWxsLXRpbWUtdHZsLWhpZ2gtYXMtbmV3LWRlZmktcHJvdG9jb2xzLWVtZXJnZSIsInBvc3RfaWQiOiJmYTkyOTQ4YS0xNDU2LTRlOTktYjBmOS1hNWYyMTczY2I4YjQiLCJwdWJsaWNhdGlvbl9pZCI6IjNjZmFiZmNjLTE0NTktNDQ1MC04MjcwLWI4YmYzZGQyYWI5NyIsInZpc2l0X3Rva2VuIjoiZDE0NDA1YmItYzE5YS00MmJiLTk0ZDEtNjgyZGI3NmQ5ZDdlIiwiaWF0IjoxNzA4MDk3NjA3LCJpc3MiOiJvcmNoaWQifQ.f6dic2OuZV_EPpARzcBBfeH11hoE8SL9xXyXAgXprac)\nDefiLlama\nüìä [sOrdinals: 100k Inscriptions in less than 24 hours](https://twitter.com/StxOrds/status/1745882592430215626)\nsOrdinals\nüìä [STX20 Protocol Surpasses 1M Transactions in 1 Month](https://twitter.com/stx20stacks/status/1747684225074053606)\nSTX20\nüìä [StackingDAO celebrates $20M in TVL one month in](https://twitter.com/StackingDao/status/1751684775797002269)\nStackingDAO\nüìô [Bitcoin Layers Report: Tapestry of a Trustless Financial Era](https://bitcoinlayersreport.com/)\nSpartan Group\n[Previous2024](https://docs.stacks.co/press-and-top-links/2024)[NextFebruary 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 934,
      "title": "January 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/february-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏February 2024\n_For weekly stories delivered to your inbox, subscribe to_[ _Stacks Snacks_](https://stackssnacks.com/) _. For quarterly ecosystem recaps, subscribe to the_[ _Stacks Foundation newsletter_](https://newsletters.stacks.org) _._\n[Messari's Q4 2023 'State of Stacks' Report](https://messari.io/report/state-of-stacks-q4-2023)[](https://docs.stacks.co/press-and-top-links/2024/february-2024#messaris-q4-2023-state-of-stacks-report)\n[https://messari.io/report/state-of-stacks-q4-2023](https://messari.io/report/state-of-stacks-q4-2023)\n#### \n[](https://docs.stacks.co/press-and-top-links/2024/february-2024#key-insights)\nKey Insights\n  * **Stacks revenue (USD) increased 3,386% QoQ and 3,028% YoY to $637,000.** Much of this revenue was driven by inscription protocol STX20.\n  * **STX‚Äôs market cap increased 203% QoQ and 598% YoY to $2.0 billion.** STX‚Äôs growth outpaced BTC and the overall crypto market.\n  * **DeFi TVL (USD) increased 363% QoQ and 763% YoY to $61 million.** ALEX firmly remained the leader in TVL, but Arkadiko and StackingDAO considerably increased their own TVL dominance in Q3 and Q4.\n  * **Average daily miner revenue increased 1,015% YoY to $78,000.** STX‚Äôs price increase and Stacks‚Äô increased revenue made it significantly more profitable for Bitcoin miners to participate in Stacks‚Äô consensus.\n  * **The Nakamoto upgrade is expected in April 2024.** This update will enable faster blocks, give transactions 100% Bitcoin finality, reduce MEV, and eliminate forking on the Stacks layer to set the stage for the upcoming sBTC release.\n\n\nTitle\nOutlet/Author\nüå± [The Year Ahead | Pantera Blockchain Letter](https://panteracapital.com/blockchain-letter/the-year-ahead-2024/)\nPantera\nüìä [Q1 2024 Bitcoin ecosystem map](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL3NvcmFfdmVudHVyZXMvc3RhdHVzLzE3NTQ2ODc4ODg3NTgwODM5MjI_dXRtX3NvdXJjZT1zdGFja3NzbmFja3MuY29tJnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX2NhbXBhaWduPWFsZXgtZ292ZXJuYW5jZS1wcm9wb3NhbC1mb3IteGxuay1zdGFja2luZy1kYW8taGl0cy0zNW0taW4tdHZsIiwicG9zdF9pZCI6IjQ1NTY3YzAzLWFkZDUtNGQzNi1iZGM2LTk4Y2YwYzkyMDA5YyIsInB1YmxpY2F0aW9uX2lkIjoiM2NmYWJmY2MtMTQ1OS00NDUwLTgyNzAtYjhiZjNkZDJhYjk3IiwidmlzaXRfdG9rZW4iOiJkMTQ0MDViYi1jMTlhLTQyYmItOTRkMS02ODJkYjc2ZDlkN2UiLCJpYXQiOjE3MDgwOTcxMjksImlzcyI6Im9yY2hpZCJ9.Ga_H469MIGKuovy5WVHfd3Fit9x6IiqAr0qhNCW575E)\nSora Ventures\nü™¥ [Peak Total Value Locked (TVL) and Rising Developer Engagement on Stacks](https://twitter.com/HouseofChimera/status/1757792122692911207?ref=stacksblog)\nHouse of Chimera\nüìä [40% of Bitcoin developers are working on Bitcoin L2s](https://twitter.com/MohamedFFouda/status/1752407779640295480?s=20&utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=nakamoto-release-launch-date-velar-raises-3-5m-in-funding-round)\nMohamed Fouda\nüìà [Bitcoin is 25% below its record high -- but Layer 2 Stacks is even closer](https://blockworks.co/news/layer-2-stacks-approaching-bitcoin?ref=stacksblog)\nBlockworks\nüëõ Stacks L2 DeFi protocol [Velar raises $3.5M](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3d3dy5jb2luZGVzay5jb20vYnVzaW5lc3MvMjAyNC8wMi8wMS9jcnlwdG8tc3RhcnR1cC12ZWxhci1wbGFucy1wZXJwZXR1YWwtc3dhcHMtZXhjaGFuZ2UtZm9yLWJpdGNvaW4tZGVmaS1hZnRlci1yYWlzaW5nLTM1bS8_dXRtX3NvdXJjZT1zdGFja3NzbmFja3MuY29tJnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX2NhbXBhaWduPW5ha2Ftb3RvLXJlbGVhc2UtbGF1bmNoLWRhdGUtdmVsYXItcmFpc2VzLTMtNW0taW4tZnVuZGluZy1yb3VuZCIsInBvc3RfaWQiOiJmMTg1ZjJjOC0zNGU0LTQzNDMtYTFhZC0zOGJkZTgwMmM2NDgiLCJwdWJsaWNhdGlvbl9pZCI6IjNjZmFiZmNjLTE0NTktNDQ1MC04MjcwLWI4YmYzZGQyYWI5NyIsInZpc2l0X3Rva2VuIjoiZDE0NDA1YmItYzE5YS00MmJiLTk0ZDEtNjgyZGI3NmQ5ZDdlIiwiaWF0IjoxNzA4MDk3MjQ1LCJpc3MiOiJvcmNoaWQifQ.FjGMmkbPat9qWNoUR5SJsfnwDWqfUQutXW-ScvveCjc)\nCoindesk\nüìä Report: [Stacks could present a $90 Billion opportunity](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL1RhbmdDaGFuMHgvc3RhdHVzLzE3NTM0MTcyNDMxMzUwMTMwMTA_dD05N19DMkItaTJqZi11OGgwZEpWV2NBJnM9MzMmdXRtX3NvdXJjZT1zdGFja3NzbmFja3MuY29tJnV0bV9tZWRpdW09cmVmZXJyYWwmdXRtX2NhbXBhaWduPW5ha2Ftb3RvLXJlbGVhc2UtbGF1bmNoLWRhdGUtdmVsYXItcmFpc2VzLTMtNW0taW4tZnVuZGluZy1yb3VuZCIsInBvc3RfaWQiOiJmMTg1ZjJjOC0zNGU0LTQzNDMtYTFhZC0zOGJkZTgwMmM2NDgiLCJwdWJsaWNhdGlvbl9pZCI6IjNjZmFiZmNjLTE0NTktNDQ1MC04MjcwLWI4YmYzZGQyYWI5NyIsInZpc2l0X3Rva2VuIjoiZDE0NDA1YmItYzE5YS00MmJiLTk0ZDEtNjgyZGI3NmQ5ZDdlIiwiaWF0IjoxNzA4MDk3MjQ1LCJpc3MiOiJvcmNoaWQifQ.dons_3VaS_GyWvr5OZs-StFlDP-PX2ToMqIVB9pGVCQ)\nTang Chan\nüìä [ABCDE 2024 BTC Recap](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL0FCQ0RFTGFicy9zdGF0dXMvMTc0MDYyNzc3NTg2MDcyNzkxOT90PUo1ODlrWGtMNGlOblFJRXZyRW55TXcmcz0zMyZ1dG1fc291cmNlPXN0YWNrc3NuYWNrcy5jb20mdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fY2FtcGFpZ249bmFrYW1vdG8tcmVsZWFzZS1sYXVuY2gtZGF0ZS12ZWxhci1yYWlzZXMtMy01bS1pbi1mdW5kaW5nLXJvdW5kIiwicG9zdF9pZCI6ImYxODVmMmM4LTM0ZTQtNDM0My1hMWFkLTM4YmRlODAyYzY0OCIsInB1YmxpY2F0aW9uX2lkIjoiM2NmYWJmY2MtMTQ1OS00NDUwLTgyNzAtYjhiZjNkZDJhYjk3IiwidmlzaXRfdG9rZW4iOiJkMTQ0MDViYi1jMTlhLTQyYmItOTRkMS02ODJkYjc2ZDlkN2UiLCJpYXQiOjE3MDgwOTcyNDUsImlzcyI6Im9yY2hpZCJ9.qhu0w9pHUMhY5ASnL74i7ixBbVw7LRrF3MJGJDbcoAs)\nABCDE Labs\nüëÄ [2024 Halving: This Time It‚Äôs Actually Different](https://www.grayscale.com/research/reports/2024-halving-this-time-its-actually-different?ref=stacksblog)\nGrayscale\nüìà [While everyone theorizes about when $BTC will make new highs, $STX...](https://x.com/cburniske/status/1757951005654978872?t=_cLI0sby6lmp9V1Yj6-6kQ&s=33&ref=stacksblog)\nChris Burniske\n[What Are Bitcoin Layer 2 Networks?](https://academy.binance.com/en/articles/what-are-bitcoin-layer-2-networks?viastacksblog&ref=stacksblog)\nBinance Academy\n[PreviousJanuary 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)[NextMarch 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 856,
      "title": "February 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/march-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏March 2024\nTitle\nOutlet/Author\nüîè [Bitcoin layer-2 Stacks partners with eight companies ahead of its Nakamoto upgrade](https://cryptobriefing.com/stacks-network-expansion-new-signers/)\nCrypto Briefing\n[ü§ù ](https://cointelegraph.com/news/stacks-welcomes-new-signers-blockdaemon-near-foundation-bitcoin-surge)[Stacks expands with Blockdaemon, Near Foundation amid Bitcoin surge](https://cointelegraph.com/news/stacks-welcomes-new-signers-blockdaemon-near-foundation-bitcoin-surge)\nCointelegraph\n[üìà ](https://www.benzinga.com/pressreleases/24/03/37487866/more-validation-for-bitcoin-builders-industry-leaders-to-integrate-stacks-the-leading-bitcoin-l2)[More Validation for Bitcoin Builders: Industry Leaders to Integrate Stacks, the Leading Bitcoin L2](https://www.benzinga.com/pressreleases/24/03/37487866/more-validation-for-bitcoin-builders-industry-leaders-to-integrate-stacks-the-leading-bitcoin-l2)\nBenzinga\n[üíº ](https://www.coindesk.com/tech/2024/04/16/og-bitcoin-l2-stacks-is-getting-a-major-overhaul/)[Bitcoin layer-2 Stacks partners with eight companies ahead of its Nakamoto upgrade](https://www.coindesk.com/tech/2024/04/16/og-bitcoin-l2-stacks-is-getting-a-major-overhaul/)\nCoindesk\n[üîè ](https://www.cryptotimes.io/2024/03/06/stacks-l2-bolsters-network-security-with-8-new-signers/)[Stacks L2 Bolsters Network Security with 8 New Signers](https://www.cryptotimes.io/2024/03/06/stacks-l2-bolsters-network-security-with-8-new-signers/)\nThe Crypto Times\n[üìà ](https://twitter.com/FTI_DA/status/1771166481880944693?utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=franklin-templeton-highlights-the-nakamoto-release-velar-amm-mainnet)[Stacks: The Nakamoto Upgrade](https://twitter.com/FTI_DA/status/1771166481880944693?utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=franklin-templeton-highlights-the-nakamoto-release-velar-amm-mainnet)\nFranklin Templeton\n[ü™¥ Stacks reaches ](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL1N0YWNrcy9zdGF0dXMvMTc2NTg2NTQzOTc2OTMwNTU3MT91dG1fc291cmNlPXN0YWNrc3NuYWNrcy5jb20mdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fY2FtcGFpZ249bmFrYW1vdG8tcmVsZWFzZS12b3RpbmctcGVyaW9kLWVuZHMtY2VsZWJyYXRpbmctb25lLW1pbGxpb24tdW5pcXVlLXdhbGxldHMiLCJwb3N0X2lkIjoiYTY0NTBlYTAtY2U4MC00ZjRlLTg0YjMtNjNmNWFhNzRiMTY1IiwicHVibGljYXRpb25faWQiOiIzY2ZhYmZjYy0xNDU5LTQ0NTAtODI3MC1iOGJmM2RkMmFiOTciLCJ2aXNpdF90b2tlbiI6ImRhZTNjOGUxLWVkZTUtNDQxMC1hNWFkLTU3MTc2NmYyMGQ3OSIsImlhdCI6MTcxMzcyNTM5MiwiaXNzIjoib3JjaGlkIn0.allLoCyKRwaGltRK4_zwV80JFbHr6s8SGxr7zPwSZ44)[1,000,000 unique](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL1N0YWNrcy9zdGF0dXMvMTc2NTg2NTQzOTc2OTMwNTU3MT91dG1fc291cmNlPXN0YWNrc3NuYWNrcy5jb20mdXRtX21lZGl1bT1yZWZlcnJhbCZ1dG1fY2FtcGFpZ249bmFrYW1vdG8tcmVsZWFzZS12b3RpbmctcGVyaW9kLWVuZHMtY2VsZWJyYXRpbmctb25lLW1pbGxpb24tdW5pcXVlLXdhbGxldHMiLCJwb3N0X2lkIjoiYTY0NTBlYTAtY2U4MC00ZjRlLTg0YjMtNjNmNWFhNzRiMTY1IiwicHVibGljYXRpb25faWQiOiIzY2ZhYmZjYy0xNDU5LTQ0NTAtODI3MC1iOGJmM2RkMmFiOTciLCJ2aXNpdF90b2tlbiI6ImRhZTNjOGUxLWVkZTUtNDQxMC1hNWFkLTU3MTc2NmYyMGQ3OSIsImlhdCI6MTcxMzcyNTM5MiwiaXNzIjoib3JjaGlkIn0.allLoCyKRwaGltRK4_zwV80JFbHr6s8SGxr7zPwSZ44) wallets\nSignal21\n[PreviousFebruary 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)[NextApril 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 639,
      "title": "March 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/april-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏April 2024\nIn April, the Nakamoto mainnet rollout began and news about Stacks and the upgrade was impossible to miss. Stacks was featured as a leading L2 across major crypto publications, newsletters, and more.\nTitle\nOutlet/Author\n[üëÄ ](https://www.forbes.com/sites/nimrodlehavi/2024/04/11/disruptor-to-disruptee-bitcoin-institutionalization-needs-l2-shakeup/?sh=1745f76c629b)[Disruptor To Disruptee: Bitcoin Institutionalization Needs L2 Shakeup](https://www.forbes.com/sites/nimrodlehavi/2024/04/11/disruptor-to-disruptee-bitcoin-institutionalization-needs-l2-shakeup/?sh=1745f76c629b)\nForbes\n[üü™ ](https://blockworks.co/news/bitcoin-halving-layer-2-impact-stacks)[Q&A: What will the Bitcoin halving mean for Bitcoin L2s?](https://blockworks.co/news/bitcoin-halving-layer-2-impact-stacks)\nBlockworks\n[Bitcoin Layer 2 Stacks Prepares for Nakamoto Upgrade, its Largest Hard-Fork Ever](https://thedefiant.io/news/blockchains/bitcoin-layer-2-stacks-prepares-for-nakamoto-upgrade-its-largest-hard-fork-ever)\nThe Defiant\n[üüß ](https://decrypt.co/225801/stacks-stx-nakamoto-upgrade-bitvm-rollups-defi)[Stacks, Bitcoin Layers, and the Nakamoto Upgrade: Here‚Äôs What‚Äôs Going On](https://decrypt.co/225801/stacks-stx-nakamoto-upgrade-bitvm-rollups-defi)\nDecrypt\n[üìà ](https://cointelegraph.com/news/btcfi-opportunity-make-bitcoin-productive-asset)[BTCFi is an ‚Äòenormous opportunity‚Äô to make Bitcoin a productive asset ‚Äî Stacks](https://cointelegraph.com/news/btcfi-opportunity-make-bitcoin-productive-asset)\nCointelegraph\n[‚Çø ](https://cointelegraph.com/news/real-opportunity-bitcoin-runes-after-first-wave-investor-hype)[‚ÄòReal opportunity‚Äô for Bitcoin Runes will come after first wave of investor hype](https://cointelegraph.com/news/real-opportunity-bitcoin-runes-after-first-wave-investor-hype)\nCointelegraph\n[üüß ](https://www.coindesk.com/tech/2024/04/16/og-bitcoin-l2-stacks-is-getting-a-major-overhaul/)[OG Bitcoin L2 Stacks Is Getting a Major Overhaul](https://www.coindesk.com/tech/2024/04/16/og-bitcoin-l2-stacks-is-getting-a-major-overhaul/)\nCoindesk\n[üìª ](https://www.charlieshrem.com/bitcoin-l2-with-muneeb-ali-of-stacks-and-andy-fajar-handika-of-loka-mining/)[Bitcoin L2 with Muneeb Ali of Stacks and Andy Fajar Handika of Loka Mining](https://www.charlieshrem.com/bitcoin-l2-with-muneeb-ali-of-stacks-and-andy-fajar-handika-of-loka-mining/)\nCharlie Shrem Show\n[üìß ](https://milkroad.com/daily/what-happened-to-prices-this-weekend/?ref=stacksblog)[April 15th Newsletter](https://milkroad.com/daily/what-happened-to-prices-this-weekend/?ref=stacksblog)\nMilroad\n[üóûÔ∏è ](https://prtimes.jp/main/html/rd/p/000000143.000031083.html?ref=stacksblog)[TEAMZ Web3/AI Summit2024 Day 1 has ended successfully!](https://prtimes.jp/main/html/rd/p/000000143.000031083.html?ref=stacksblog)\nPR Times (Japan)\n[üëÄ ](https://www.bankless.com/the-bitcoin-halvings-degen-bets)[The Bitcoin Halving's Degen Bets](https://www.bankless.com/the-bitcoin-halvings-degen-bets)\nBankless\n[üå± ](https://cryptodaily.co.uk/2024/04/top-5-pioneering-bitcoin-projects-poised-for-growth-post-2024-halving)[Top 5 Pioneering Bitcoin Projects Poised For Growth Post-2024 Halving](https://cryptodaily.co.uk/2024/04/top-5-pioneering-bitcoin-projects-poised-for-growth-post-2024-halving)\nCrypto Daily UK\n[üí∞ ](https://www.theblock.co/post/284556/spartan-capital-leads-10-million-funding-round-for-bitcoin-defi-developer-alex)[Spartan Capital leads $10 million strategic funding round for Bitcoin DeFi developer ALEX](https://www.theblock.co/post/284556/spartan-capital-leads-10-million-funding-round-for-bitcoin-defi-developer-alex)\nThe Block\n[‚Çø ](https://cryptobriefing.com/bitcoin-functionality-other-blockchains/?ref=stacksblog)[‚ÄòBitcoin has as many functionalities as other blockchains‚Äô: Trust Machines member weighs in Bitcoin DeFi](https://cryptobriefing.com/bitcoin-functionality-other-blockchains/?ref=stacksblog)\nCrypto Briefing\n[üóûÔ∏è ](https://figment.io/insights/a-look-into-the-upcoming-bitcoin-halving-bitcoin-layer-2s/?ref=stacksblog)[A Look into The Upcoming Bitcoin Halving & Bitcoin Layer 2s](https://figment.io/insights/a-look-into-the-upcoming-bitcoin-halving-bitcoin-layer-2s/?ref=stacksblog)\nFigment\n[üìï ](https://links.coinbase.com/e/evib?_t=3aca56371967418192255878e9689713&_m=fde47e8c40c24182b7cab3a6b10c9d3a&_e=DT1gXnNeiWLsEoKsYDSIAUCWVJr21XSvYbLTlg_uJ63W2CLdvG0Q8MPxsoVG5vCKM9SLV_5n-owzOqH_yPS9iQ%3D%3D&utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=stacks-apps-celebrate-all-time-tvl-high-as-new-defi-protocols-emerge)[Bitcoin could gain new smart-contract superpowers](https://links.coinbase.com/e/evib?_t=3aca56371967418192255878e9689713&_m=fde47e8c40c24182b7cab3a6b10c9d3a&_e=DT1gXnNeiWLsEoKsYDSIAUCWVJr21XSvYbLTlg_uJ63W2CLdvG0Q8MPxsoVG5vCKM9SLV_5n-owzOqH_yPS9iQ%3D%3D&utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=stacks-apps-celebrate-all-time-tvl-high-as-new-defi-protocols-emerge) with the Lightning Network and Stacks.\nCoinbase Bytes\n[PreviousMarch 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)[NextMay 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 796,
      "title": "April 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/may-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏May 2024\nTitle\nOutlet/Author\n[üëÄ Stacks active accounts reach record high amid growing interest in Bitcoin DeFi](https://cointelegraph.com/news/bitcoin-defi-surge-stacks-l2-record-users)\nCointelegraph\n[üóûÔ∏è Newsletter: BTC‚Äôs Streak Is Coming To An End](https://milkroad.com/daily/btcs-streak-is-coming-to-an-end-%EF%B8%8F/?ref=stacksblog)\nMilkroad\n[üìï The Imperative for Bitcoin Layers](https://chorus.one/articles/the-imperative-for-bitcoin-layers-2?ref=stacksblog)\nChorus One\n[First Bitcoin-backed synthetic dollar to launch with 25% yield](https://cointelegraph.com/news/hermetica-usdh-bitcoin-backed-synthetic-dollar)\nCointelegraph\n[üîó Stacks, Moonriver, Hedera Network and Iron Fish Join Axelar‚Äôs Interchain Amplifier](https://cryptonews.com/news/stacks-hedera-network-and-iron-fish-join-axelar-interchain.htm)\nCrypto News\n[üîó Axelar Integrates With Stacks To Bridge Bitcoin Across Over 65 Blockchains](https://cryptodaily.co.uk/news-in-crypto/coincodex:axelar-integrates-with-stacks-to-bridge-bitcoin-across-over-65-blockchains)\nCrypto Daily UK\nüå± [LunarCrush Unveils AI-Driven Web3 Platform for Creators](https://www.altcoinbuzz.io/cryptocurrency-news/lunarcrush-unveils-ai-driven-web3-platform-for-creators/)\nAltcoin Buzz\n[Despite Bitcoin price volatility, factors point to BTC‚Äôs long-term success](https://cointelegraph.com/news/bitcoin-price-volatility-btc-success)\nCoinTelegraph\n[Satoshi‚Äôs Vision Or Not, Bitcoin DeFi Is Here To Stay](https://www.thestreet.com/crypto/markets/satoshis-vision-or-not-bitcoin-defi-is-here-to-stay-)\nThe Street\n[üì£ Stacks Foundation joins Uphold to drive Bitcoin adoption](https://www.binance.com/en/square/post/8093584158561)\nBinance Square\n[Stacks & Uphold Team Up to Boost Bitcoin Beyond Just a Store of Value](https://coinpaper.com/4190/stacks-and-uphold-team-up-to-boost-bitcoin-beyond-just-a-store-of-value)\nCoinpaper\n[Stacks and Uphold Partner Up to Boost Bitcoin Adoption](https://coinmarketcap.com/community/articles/66437419d7905c7145a4c38e/)\nCoinMarketCap\n[Stacks & Uphold Team Up to Boost Bitcoin Beyond Just a Store of Value](https://coinstats.app/news/e879f032aa90aad3a51213254a35691ddc897bbfc7200d3d95b95ff87bb4ca0e_Stacks-%26-Uphold-Team-Up-to-Boost-Bitcoin-Beyond-Just-a-Store-of-Value/)\nCoinStats\n[Stacks Foundation joins Uphold to drive Bitcoin adoption](https://www.coinlive.com/id/news-flash/514530)\nCoinLive\n[Stacks Partners With Uphold To Further Increase Bitcoin Adoption](https://www.investingcube.com/stacks-partners-with-uphold-to-further-increase-bitcoin-adoption/)\nInvestingCube\n[Stacks and Uphold Partner Up to Boost Bitcoin Adoption](https://www.cryptotimes.io/2024/05/14/stacks-and-uphold-partner-up-to-boost-bitcoin-adoption/)\nCrypto Times\n[PreviousApril 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)[NextJune 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 741,
      "title": "May 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/may-2024-1",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏June 2024\nIn June, the Haruko partnership was announced and new voices were added to the growing Bitcoin layer-2 movement.\nTitle\nOutlet/Author\nüìä [Layer-2 Networks Mark The Dawn Of A New Golden Age For Bitcoin](https://www.analyticsinsight.net/cryptocurrency-analytics-insight/layer-2-networks-mark-the-dawn-of-a-new-golden-age-for-bitcoin?ref=stacksblog)\nAnalytics Insight\nüìà [Stacks Layer 2 for Bitcoin already hosts projects, STX token among top gainers](https://www.cryptopolitan.com/stacks-layer-2-bitcoin-stx-token-top-gainers/?ref=stacksblog)\nCryptopolitan\nüìñ [Top Bitcoin Layer 2 Projects & Coins in 2024](https://cryptonews.com/cryptocurrency/bitcoin-layer-2-projects/?ref=stacksblog/)\nCryptonews\nüìñ[Layer-2 Networks Mark The Dawn Of A New Golden Age For Bitcoin](https://www.analyticsinsight.net/cryptocurrency-analytics-insight/layer-2-networks-mark-the-dawn-of-a-new-golden-age-for-bitcoin)\nAnalytics Insight\nüß© [Haruko Integrates Stacks to Deliver Institutional Asset Management on Bitcoin L2](https://www.financemagnates.com/thought-leadership/haruko-integrates-stacks-to-deliver-institutional-asset-management-on-bitcoin-l2/)\nFinance Magnates\nüß© [Haruko to enhance digital asset management with Stacks integration](https://finbold.com/haruko-to-enhance-digital-asset-management-with-stacks-integration/)\nFinbold\nüß© [Haruko to Streamline Bitcoin Asset Management With Stacks Integration](https://u.today/haruko-to-streamline-bitcoin-asset-management-with-stacks-integration)\nU Today\nüí≤ [Stacking DAO Bi-Weekly Update: $560k in Stacking rewards over two cycles](https://medium.com/@stackingdao/stacking-dao-bi-weekly-update-560k-in-stacking-rewards-over-two-cycles-c012256c1622)\nMedium\nüß© [Kiln: We're thrilled to unveil our latest integration](https://x.com/Kiln_finance/status/1797612820537729354?ref=stacksblog)\nKiln\n[PreviousMay 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)[NextJuly 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 689,
      "title": "June 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/may-2024-2",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏July 2024\nBitcoin Summer continued in July: BitGo stepped up to join the Stacks signer network, Stacks teams Bitflow and Hermetica landed their own media and builders everywhere convened in Nashville.\nTitle\nOutlet/Author\nüìà [All Time High in Monthly Active Accounts for Stacks](https://app.signal21.io/stacks?utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=all-time-high-in-monthly-active-accounts-for-stacks)\nSignal21\nüíé [Bitflow Unveils Liquidity Hub Upgrade, Enabling Functionality Like Ethereum DeFi](https://blockchainreporter.net/bitflow-unveils-liquidity-hub-upgrade-enabling-functionality-like-ethereum-defi/)\nBlockchain Reporter\nüíé [Bitflow‚Äôs Liquidity Hub Elevates Bitcoin DeFi to Ethereum DeFi Ecosystem Standard](https://coinmarketcap.com/community/articles/667c6188dd97c85264ba1fc1/)\nCoinMarketCap\n[Hermetica's Synthetic Dollar Sparks DeFi Revolution](https://hackernoon.com/hermeticas-synthetic-dollar-sparks-defi-revolution?ref=stacksblog)\nHackernoon\nüõ°Ô∏è [Hypernative Bolsters Bitcoin L2 Security as Stacks Ecosystem Gets Real-Time Protection](https://hackernoon.com/hypernative-bolsters-bitcoin-l2-security-as-stacks-ecosystem-gets-real-time-protection)\nHackernoon\nüé´ [Bitcoin Builders Conference Set to Spotlight Innovation and the Future of the Bitcoin Economy](https://decrypt.co/239086/bitcoin-builders-conference-set-to-spotlight-innovation-and-the-future-of-the-bitcoin-economy)\nDecrypt\nü™ô [Bitcoin Developers Launch BTC-Backed Stablecoin As Rune Token](https://decrypt.co/239925/bitcoin-developers-launch-btc-backed-stablecoin-as-rune-token)\nDecrypt\nüì∞ [BitGo integrates Stacks for Bitcoin rewards, following institutional Bitcoin demand](https://cointelegraph.com/news/bitgo-stacks-bitcoin-rewards-institutional-bitcoin-demand)\nCoinTelegraph\nüì∞ [BitGo Launches Support for Bitcoin L2 Stacks and sBTC](https://cryptopotato.com/bitgo-launches-support-for-bitcoin-l2-stacks-and-sbtc/?amp)\nCrypto Potato\nüüß [Protocol Village: Bitrue Ventures Launches $40M Fund for 'Nascent Web3 Companies'](https://www.coindesk.com/tech/2024/07/17/protocol-village/)\nCoindesk\n[PreviousJune 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)[NextAugust 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 705,
      "title": "July 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/may-2024-3",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏August 2024\nTitle\nOutlet/Author\nüß© [Deploy Stacks nodes on AWS with the AWS Blockchain Node Runners](https://aws.amazon.com/blogs/database/how-to-deploy-stacks-blockchain-nodes-on-aws-with-the-aws-blockchain-node-runners-stacks-blueprint/?ref=stacksblog)\nAmazon Web Services\n[üóûÔ∏è Bitflow and Leather Wallet Join Forces to Simplify Bitcoin L2 Asset Swaps](https://hackernoon.com/bitflow-and-leather-wallet-join-forces-to-simplify-bitcoin-l2-asset-swaps)\nHackernoon\nü§ù [Aptos and Stacks Forge New Partnership for Bitcoin Innovation](https://www.altcoinbuzz.io/cryptocurrency-news/aptos-and-stacks-forge-new-partnership-for-bitcoin-innovation/)\nAltcoin Buzz\nüñä [Millions of Dollars Worth of BTC Earned by New Institutional Signers Since Nakamoto Instantiation](https://stacks.org/institutional-signers-earn-millions)\nStacks Foundation\nüí≤[Liquidium Raises $2.5M, Accelerating L1 Borrowing and Lending](https://subscribe.bitcoinbuildersassociation.com/p/liquidium-raises-25m-accelerating?ref=stacksblog)\nBitcoin Builders Association\nüß°[Bitcoin Network Stacks Begins Rollout of Speed-Boosting Nakamoto Upgrade](https://decrypt.co/246543/bitcoin-stacks-rollout-speed-boosting-nakamoto-upgrade)\nDecrypt\nüìô[Bitcoin Network Stacks Devs 'Can See the Finish Line' With Nakamoto Upgrade](https://decrypt.co/247247/bitcoin-network-stacks-devs-see-finish-line-nakamoto-upgrade)\nDecrypt\nüìô[Stacks co-creator on how the Nakamoto upgrade will drive a $70bn market for Bitcoin DeFi](https://www.dlnews.com/articles/defi/stacks-nakamoto-upgrade-brings-bitcoin-defi-with-sbtc-token/?utm_source=telegram&utm_medium=organic_social&utm_campaign=)\nDL News\nüóûÔ∏è[Bitcoin Layer-2 Network Stacks Begins Nakamoto Upgrade](https://www.coindesk.com/tech/2024/08/28/bitcoin-layer-2-network-stacks-begins-nakamoto-upgrade/amp/)\nCoindesk\nüóûÔ∏è[Bitcoin Layer 2 Stacks readies for Nakamoto upgrade activation](https://crypto.news/bitcoin-layer-2-stacks-readies-for-nakamoto-upgrade-activation/)\nCrypto News\n[Stacks (STX) prepares for Nakamoto upgrade: here‚Äôs what to expect](https://coinjournal.net/news/stacks-stx-prepares-for-nakamoto-upgrade-heres-what-to-expect/)üóûÔ∏è\nCoin Journal\nüóûÔ∏è[Stacks (STX) poised for recovery as game-changer Nakamoto upgrade approaches](https://invezz.com/news/2024/08/26/stacks-stx-poised-for-recovery-as-game-changer-nakamoto-upgrade-approaches/)\nInvezz\nüóûÔ∏è[Bitcoin Layer-2 Stacks Set to Receive Its Nakamoto Upgrade, Will Enhance DeFi on Bitcoin](https://www.livebitcoinnews.com/bitcoin-layer-2-stacks-set-to-receive-its-nakamoto-upgrade-will-enhance-defi-on-bitcoin/)\nLive Bitcoin News\nüóûÔ∏è[Nakamoto Activation Begins: Leading L2 Stacks Sets the Stage for a Bitcoin-Led Future](https://markets.businessinsider.com/news/currencies/nakamoto-activation-begins-leading-l2-stacks-sets-the-stage-for-a-bitcoin-led-future-1033729689)\nMarkets Insider\nüß° [Bitcoin L2s Are Eating the World](https://hackernoon.com/bitcoin-l2s-are-eating-the-world)\nHackernoon\nüí∞ [The Bitcoin Renaissance: Unlocking Trillions in Value](https://www.forbes.com/sites/leeorshimron/2024/08/13/the-bitcoin-renaissance-unlocking-trillions-in-value/?ref=stacksblog)\nForbes\n[PreviousJuly 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)[NextSeptember 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 756,
      "title": "August 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/september-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏September 2024\nArticle\nOutlet/Author\nüìà[New Milestone for Bitcoin DeFi: Over 1,400 Smart Contracts Deployed on Stacks](https://coinchapter.com/new-milestone-for-bitcoin-defi-over-1400-smart-contracts-deployed-on-stacks-even-before-major-upgrade/)\nCoin Chapter\nüìà[Bitcoin layer-2 Stacks witnessed 1,400 smart contract deployments month over month](https://www.livebitcoinnews.com/stacks-registers-unseen-smart-contract-deployment-days-away-from-its-nakamoto-upgrade/)\nLive Bitcoin News\nüóûÔ∏è[Stacks' smart contracts reach record high ahead of Nakamoto upgrade](https://cointelegraph.com/news/stacks-record-smart-contracts-nakamoto-upgrade?ref=stacksblog)\nCointelegraph\nü§ùüèª[Anchorage Digital Announces Custody Support for Stacks](https://x.com/Stacks/status/1831335327300309174?utm_source=stackssnacks.com&utm_medium=referral&utm_campaign=anchorage-digital-supporting-stacks-btc-bash-and-other-highlights)\nX / Anchorage Digital\nüöÄ[Hermetica Labs Launches USDh, the first Bitcoin-native synthetic USD](https://cryptobriefing.com/bitcoin-synthetic-dollar-25-percent-yield/?ref=stacksblog)\nCrypto Briefing\nüí°[What is sBTC? A Guide to the Non-Custodial Native Bitcoin DeFi](https://www.xverse.app/blog/what-is-sbtc?ref=stacksblog)\nXverse\n‚Çø [Over $1.5B worth of BTC is now locked in Bitcoin Layers](https://subscribe.bitcoinbuildersassociation.com/p/over-15b-worth-of-btc-is-now-locked?ref=stacksblog)\nBitcoin Builders Association\nü§ù[Stacks x Aptos Foundations Join Forces to Bring Bitcoin to Aptos Network via sBTC](https://decrypt.co/249825/bitcoin-stacks-l2-brings-its-sbtc-to-the-aptos-network)\nDecrypt\nüñºÔ∏è[Gamma's United Bitcoin Ordinals and Stacks Platform Enters Beta](https://nftinsider.io/gamma-bitcoin-beta/?ref=stacksblog)\nNFT Insider\nü§ù[Tokensoft partners with Stacks Foundation and Bitcoin Frontier Fund to Accelerate Bitcoin Builders ](https://cryptobriefing.com/bitcoin-builders-acceleration-partnership/?ref=stacksblog)\nCrypto Briefing\nüóûÔ∏è[Stacks Asia Foundation Launches with $15M in Funding to Boost Bitcoin Layer-2 Adoption](https://coinmarketcap.com/community/articles/66e2998ae0c16b2dea22b4f1/?ref=stacksblog)\nCoinMarketCap\nüöÄ[Zest Introduces BTCz, leveraging Babylon and Stacks](https://subscribe.bitcoinbuildersassociation.com/p/zest-introduces-btcz-leveraging-babylon?ref=stacksblog)\nZest\n[PreviousAugust 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)[NextOctober 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 708,
      "title": "September 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/october-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏October 2024\nArticle\nOutlet/Author\nüöÄ[Stacks fortifies Bitcoin ties with Nakamoto upgrade](https://blockworks.co/news/stacks-sbtc-bitcoin-alignment-nakamoto?ref=stacksblog)\nBlockworks\nüöÄ[Stacks, Prominent Bitcoin Layer-2 Project, Activates Long-Awaited 'Nakamoto' Upgrade](https://www.coindesk.com/tech/2024/10/29/stacks-prominent-bitcoin-layer-2-project-activates-long-awaited-nakamoto-upgrade/?ref=stacksblog)\nCoindesk\nü§ù[Asymmetric Research Joins Stacks Ecosystem as Security Contributor to Bitcoin L2](https://hackernoon.com/asymmetric-research-joins-stacks-ecosystem-as-security-contributor-to-bitcoin-l2)\nHackernoon\nüüß[A Beginner's Guide to Bitcoin Layers](https://www.hiro.so/blog/read-a-beginners-guide-to-bitcoin-layers?ref=stacksblog)\nHiro\nüå±[Bitcoin-backed stablecoin developer Hermetica raises $1.7M in seed funding](https://www.theblock.co/post/321141/bitcoin-backed-stablecoin-developer-hermetica-raises-1-7-million-in-seed-funding?ref=stacksblog)\nThe Block\nüå±[Blockstream raises $210M to accelerate Bitcoin adoption](https://subscribe.bitcoinbuildersassociation.com/p/blockstream-raises-210m-to-accelerate?ref=stacksblog)\nBitcoin Builders Association\nüüß[BoostVC, Draper Associates, and Thesis Announce BitcoinFi Accelerator](https://subscribe.bitcoinbuildersassociation.com/p/boostvc-draper-associates-and-thesis?ref=stacksblog)\nBitcoin Builders Association\n[PreviousSeptember 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)[NextNovember 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 625,
      "title": "October 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/october-2024-1",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏November 2024\nArticle\nOutlet/Author\nüß°[CoinFlip, the #1 Global Bitcoin ATM Network Is Making Programmable Bitcoin More Accessible with Stacks, the Leading Bitcoin L2](https://www.theblock.co/post/327328/coinflip-the-1-global-bitcoin-atm-network-is-making-programmable-bitcoin-more-accessible-with-stacks-the-leading-bitcoin-l2)\nTheBlock\nüß°[Leading Crowdsourced Security Platform Immunefi Teams Up with Asymmetric Research & Bitcoin L2 Labs to Bolster sBTC Security](https://www.theblock.co/post/326835/leading-crowdsourced-security-platform-immunefi-teams-up-with-asymmetric-research-bitcoin-l2-labs-to-bolster-sbtc-security)\nTheBlock\nüß°[CoinFlip, the #1 Global Bitcoin ATM Network Is Making Programmable Bitcoin More Accessible with Stacks, the Leading Bitcoin L2](https://coinmarketcap.com/community/articles/673e0069c291c94bd18e68fb/)\nCoinMarketCap\nüß°[Bitcoin Frontier Fund, Home of the Top Bitcoin Accelerator, To Invest in Teams Built on sBTC](https://www.theblock.co/post/328240/bitcoin-frontier-fund-home-of-the-top-bitcoin-accelerator-to-invest-in-teams-built-on-sbtc)\nTheBlock\n[PreviousOctober 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)[NextDecember 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\nLast updated 9 months ago\nWas this helpful?\n",
      "wordCount": 632,
      "title": "November 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n\n\n#  üî∏December 2024\nArticle\nOutlet/Author\nüß° [Portal Ventures, the Leading Pre-seed VC Firm and the First to Call the Bitcoin Thesis, to Back sBTC](https://www.theblock.co/post/329292/portal-ventures-the-leading-pre-seed-vc-firm-and-the-first-to-call-the-bitcoin-thesis-to-back-sbtc?ref=stacksblog)\nThe Block\nüß° [LearnWeb3, the Largest Educational Platform for Web3, Set to Onboard New Wave of sBTC Developers](https://www.theblock.co/post/330037/learnweb3-the-largest-educational-platform-for-web3-set-to-onboard-new-wave-of-sbtc-developers)\nThe Block\nüß° [Xverse, Leading Bitcoin Ecosystem Wallet, Adopts sBTC as Preferred Scaling Solution for the Bitcoin Economy](https://www.theblock.co/post/330649/xverse-leading-bitcoin-ecosystem-wallet-adopts-sbtc-as-preferred-scaling-solution-for-the-bitcoin-economy)\nThe Block\nüß° [Hex Trust Expands Collaboration with Stacks Asia Foundation to Bolster sBTC Adoption](https://blockchainreporter.net/hex-trust-expands-collaboration-with-stacks-asia-foundation-to-bolster-sbtc-adoption/)\nBlockchain Reporter\nüß° [Fordefi, the First MPC Wallet to Fully Support Bitcoin DeFi, Joins Cohort of sBTC Backers](https://www.theblock.co/post/331016/fordefi-the-first-mpc-wallet-to-fully-support-bitcoin-defi-joins-cohort-of-sbtc-backers)\nThe Block\nüß° [Travala, The #1 Bitcoin and Crypto Travel Booking Portal, Announces Support for sBTC and STX](https://www.theblock.co/post/331020/travala-the-1-bitcoin-and-crypto-travel-booking-portal-announces-support-for-sbtc-and-stx)\nThe Block\nüöÄ [Double-dipping with sBTC on Stacks](https://blockworks.co/news/stacks-sbtc-double-dipping)\nBlockworks\nüöÄ [Bitcoin Gets DeFi Upgrade: Stacks Launches Bitcoin-Backed sBTC for Smart Contracts](https://hackernoon.com/bitcoin-gets-defi-upgrade-stacks-launches-bitcoin-backed-sbtc-for-smart-contracts)\nHackernoon\nüöÄ [sBTC Launches on Stacks Mainnet, Bringing Bitcoin DeFi to Life](https://beincrypto.com/sbtc-launches-on-stacks-mainnet/)\nBeInCrypto\nüöÄ [sBTC Launches on Stacks Mainnet With Deposit-Only Functionality](https://cryptopotato.com/sbtc-launches-on-stacks-mainnet-with-deposit-only-functionality/?amp)\nCrypto Potato\nüöÄ [Stacks Launches sBTC on Mainnet with 1,000 BTC Cap, Offering 5% Yield and Up to 60% APY Staking](https://thedefiant.io/news/blockchains/stacks-launches-sbtc-on-mainnet-1000-btc-cap-offering-5-yield-up-to-60-apy-b70deae1)\nThe Defiant\nüöÄ [sBTC Kicks Off on Stacks Mainnet: Details](https://u.today/sbtc-kicks-off-on-stacks-mainnet-details)\nCrypto Economy\nüüß [Bitcoin's Memecoin-Like 'Runes' Get a Boost With AMM Launch on Stacks](https://www.coindesk.com/tech/2024/12/18/bitcoins-memecoin-like-runes-get-a-boost-with-amm-launch-on-stacks)\nCoindesk\nüß° [Ankr, the #1 Provider of Bitcoin-Secured, Physical Infrastructure, Becomes Signer for Stacks as sBTC Launches](https://www.theblock.co/post/331411/ankr-the-1-provider-of-bitcoin-secured-physical-infrastructure-becomes-signer-for-stacks-as-sbtc-launches)\nThe Block\nüìô [New Report Finds Tokenized BTC Landscape Worth $1T (18 Dec)](https://coinmarketcap.com/community/articles/6762f62b09984e48933a1ec1/)\nCoinMarketCap\nüìô [New Report Finds Tokenized BTC Landscape Worth $1T (18 Dec)](https://www.binance.com/en/square/post/17739664161346)\nBinance\n[PreviousNovember 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)[Next2025](https://docs.stacks.co/press-and-top-links/2025)\nLast updated 9 months ago\nWas this helpful?\n",
      "wordCount": 792,
      "title": "December 2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n![Page cover](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FtOCiJfV1A2a8roFJSYLf%252F%252B%2520%286%29.svg%3Falt%3Dmedia%26token%3D093063f4-f5f2-4645-96fb-233fdc64ff4d&width=1248&dpr=4&quality=100&sign=3d6fa701&sv=2)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n\n\n#  üî∂2025\nThis page indexes top stories, press, and reports related to Stacks on a monthly basis.\nFor weekly stories delivered to your inbox, subscribe to [Stacks Snacks](https://stackssnacks.com/). For quarterly ecosystem recaps, subscribe to the [Stacks Foundation newsletter](https://newsletters.stacks.org).\n[üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)[üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)[üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)[üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)[üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)[üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)[üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)[üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)[üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n[PreviousDecember 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)[NextJanuary 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\nLast updated 22 days ago\nWas this helpful?\n",
      "wordCount": 599,
      "title": "2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/january-2024",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏January 2025\nFor weekly stories delivered to your inbox, subscribe to [Stacks Snacks](https://stackssnacks.com/). For quarterly ecosystem recaps, subscribe to the [Stacks Foundation newsletter](https://newsletters.stacks.org).\nArticle\nOutlet/Publication\n[üß° Stacks‚Äô Muneeb Ali: Let the Bitcoin L2s Bloom](https://www.coindesk.com/consensus-hong-kong-2025-coverage/2025/01/13/stacks-muneeb-ali-let-the-bitcoin-l2s-bloom)\nCoindesk\n[üöÄ Why Stacks Is Leading the Bitcoin Layer 2 Revolution](https://www.crypto-news-flash.com/why-stacks-is-leading-the-bitcoin-layer-2-revolution/)\nCrypto News Flash\n[üóûÔ∏è Bitcoin-Based Stablecoin USDh Secures $3M in Liquidity](https://www.coindesk.com/tech/2025/01/22/bitcoin-based-stablecoin-usdh-secures-usd3m-in-liquidity)\nCoindesk\n[üóûÔ∏è Hermetica's Bold Move to Dominate Stacks DeFi With its USDh Stablecoin and sBTC Yield Trade Program](https://hackernoon.com/hermeticas-bold-move-to-dominate-stacks-defi-with-its-usdh-stablecoin-and-sbtc-yield-trade-program)\nHackernoon\n[ü™ô Hermetica Launches New sBTC Yield Product, USDh Liquidity Faces Boost](https://u.today/hermetica-launches-new-sbtc-yield-product-usdh-liquidity-faces-boost)\nU Today\n[ü™ô Hermetica Unveils $sBTC for Yield-Bearing $USDh in Partnership with Zest Protocol](https://blockchainreporter.net/hermetica-unveils-sbtc-for-yield-bearing-usdh-in-partnership-with-zest-protocol/)\nBlockchain Reporter\n[ü™ô USDh set to become the leading stablecoin on Stacks as Hermetica introduces sBTC yield product](https://invezz.com/news/2025/01/23/usdh-set-to-become-the-leading-stablecoin-on-stacks-as-hermetica-introduces-sbtc-yield-product/)\nInvezz\n[üß° Making Bitcoin Go Further: How sBTC Is Expanding the Possibilities of DeFi](https://bitcoinist.com/making-bitcoin-go-further-how-sbtc-is-expanding-the-possibilities-of-defi/)\nBitcoinist\n[üöÄ Bitcoin DeFi: The Most Pivotal Innovation On Bitcoin‚Äôs Evolutionary Path](https://www.cryptopolitan.com/bitcoin-defi-the-most-pivotal-innovation-on-bitcoins-evolutionary-path/)\nCryptopolitan\n[üüß Stacks Bridges the Gap to Bitcoin as Strategic US Reserve Materializes](https://www.financemagnates.com/thought-leadership/stacks-bridges-the-gap-to-bitcoin-as-strategic-us-reserve-materializes/)\nFinance Magnates\n[üóûÔ∏è Bitcoin DeFi Protocol Velar Unveils .BTC Name Grant Program for Unified Identities on Stacks](https://cryptopotato.com/bitcoin-defi-protocol-velar-unveils-btc-name-grant-program-for-unified-identities-on-stacks/)\nCryptoPotato\n[üöÄ](https://www.crypto-news-flash.com/why-stacks-is-leading-the-bitcoin-layer-2-revolution/) [Bitcoin DeFi: The Most Pivotal Innovation On Bitcoin‚Äôs Evolutionary Path](https://www.cryptopolitan.com/bitcoin-defi-the-most-pivotal-innovation-on-bitcoins-evolutionary-path/?ref=stacksblog)\nCryptopolitan\n[Previous2025](https://docs.stacks.co/press-and-top-links/2025)[NextFebruary 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 738,
      "title": "January 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/february-2025",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏February 2025\nArticle\nPublication/Link\nüß° Bitcoin's Correlation With Markets Grows, Challenging 'Safe Haven' Narrative\n[Bitcoin.com](http://bitcoin.com/)\nü™ô How sBTC Unlocks Bitcoin DeFi ‚Äì And Why It Matters\n[Coincu.com](http://coincu.com/)\nüüß sBTC Is Fast Emerging As The Missing Link In Bitcoin‚Äôs Cross-Chain Evolution\n[Bitcoinist](https://bitcoinist.com/sbtc-is-fast-emerging-as-the-missing-link-in-bitcoins-cross-chain-evolution/)\nüß° The Overlooked Bitcoin Layer-2 Sector: Why and What to Expect Moving Forward\n[Binance](https://www.binance.com/en-IN/square/post/20381520919281)\nüüß Bitcoin L2 ‚Äòhoneymoon phase‚Äô is over, most projects will fail ‚Äî Muneeb Ali\n[CoinTelegraph](https://cointelegraph.com/news/bitcoin-layer2-projects-fade-stacks-muneeb-ali)\nüóûÔ∏è Blockchair Launches Stacks Explorer, Enhancing Bitcoin Layer 2 Visibility and sBTC Support\n[DL News](https://www.dlnews.com/research/external/blockchair-launches-stacks-explorer-enhancing-bitcoin-layer-2-visibility-and-sbtc-support/)\nüóûÔ∏è Blockchair Launches Stacks Explorer, Enhancing Bitcoin Layer 2 Visibility and sBTC Support\n[CoinMarketCap](https://coinmarketcap.com/community/articles/67bf2560ae03156d954313b6/)\nüüß SNZ, UTXO Capital, Jump Crypto Among Leaders to Deposit Early in sBTC, Unlocking Bitcoin DeFi Utility\n[Decrypt](https://decrypt.co/307910/snz-utxo-capital-jump-crypto-among-leaders-to-deposit-early-in-sbtc-unlocking-bitcoin-defi-utility)\nüöÄ Stacks‚Äô sBTC Sees Rapid Adoption as Second Cap Hits 3,000 BTC Limit\n[Bitcoinist](https://bitcoinist.com/stacks-sbtc-sees-rapid-adoption-as-second-cap-hits-3000-btc-limit/)\nüöÄ SNZ, UTXO Capital, Jump Crypto Among Leaders to Deposit Early in sBTC, Unlocking Bitcoin DeFi Utility\n[DL News](https://www.dlnews.com/research/external/snz-utxo-capital-jump-crypto-among-leaders-to-deposit-early-in-sbtc-unlocking-bitcoin-defi-utility/)\n[PreviousJanuary 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)[NextMarch 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 702,
      "title": "February 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/march-2025",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏March 2025\nArticle Title & Link\nMedia Outlet\n[üüß America‚Äôs Crypto Renaissance: Why Stacks and Bitcoin Layers Are Poised for Growth](https://www.cryptopolitan.com/americas-crypto-renaissance-why-stacks-and-bitcoin-layers-are-poised-for-growth/)\nCryptopolitan\nüß° [Bitcoin Layers and the Path to Universal Utility](https://www.google.com/url?q=https://cfc-stmoritz.com/industry-insights/bitcoin-layers-and-the-path-to-universal-utility?utm_source%3DCfC%2BSt.%2BMoritz%2B-%2BGlobal%2BMailing%2BList%26utm_campaign%3D61bc405f9f-EMAIL_CAMPAIGN_2024_04_03_02_27_COPY_01%26utm_medium%3Demail%26utm_term%3D0_-4a9e5b2e5d-296312470&sa=D&source=editors&ust=1743526707117175&usg=AOvVaw2GQInrk1FYUbGiwB0hw6Jt)\nCfc Moritz (Kyle Ellicott)\nüöÄ [Velar PerpDex Launches on Stacks as First Bitcoin-Native Perpetual DEX](https://www.dlnews.com/research/external/velar-perpdex-launches-on-stacks-as-first-bitcoin-native-perpetual-dex/)\nDL News\nüß° [Stacks Reaches New All-Time High TVL](https://x.com/signal21btc/status/1902742256068514010)\nSignal21\n[PreviousFebruary 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)[NextApril 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\nLast updated 4 months ago\nWas this helpful?\n",
      "wordCount": 608,
      "title": "March 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/march-2025-1",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏April 2025\nArticle Title & Link\nMedia Outlet\n[üß° Experts: Gold‚Äôs Rise Doesn‚Äôt Undermine Bitcoin‚Äôs Digital Gold Status](https://news.bitcoin.com/experts-golds-rise-doesnt-undermine-bitcoins-digital-gold-status/)\nBitcoin.com\n[üóûÔ∏è Veteran crypto exchange Bitfinex bets big on Bitcoin-based DeFi, deepens integration with Stacks](https://u.today/bitfinex-lists-stx-token-by-stacks-becomes-network-signer)\nU Today\n[üüß Bitfinex Throws Its Full Weight Behind Bitcoin‚Äôs Leading Layer-2 Stacks](https://www.coincarp.com/learn/bitfinex-throws-its-full-weight-behind-bitcoins-leading-layer-2-stacks/)\nCoincarp\n[üöÄ Hex Trust Expands Institutional Support for Stacks (STX) and sBTC Amid Growing Adoption](https://www.dlnews.com/research/external/hex-trust-expands-institutional-support-for-stacks-stx-and-sbtc-amid-growing-adoption/)\nDL News\n[üüß Hermetica brings 5% yield to Bitcoin traders on Velar PerpDEX](https://crypto.news/hermetica-brings-5-yield-to-bitcoin-traders-on-velar-perpdex/)\nCrypto.News\n[üóûÔ∏è BitGo Launches Institutional Support for SBTC, Expanding Bitcoin DeFi Accessibility (22 Apr)](https://www.binance.com/en/square/post/23264351434353)\nBinance\n[ü™ô Stacks' STX Is Week's Best Performer as Bitgo Link Seen Boosting Institutional Use](https://www.coindesk.com/markets/2025/04/25/stacks-stx-is-week-s-best-performer-as-bitgo-link-seen-boosting-institutional-use)\nCoindesk\n[üöÄ Stacks Asia bets big on Middle East Bitcoin boom with Abu Dhabi partnership](https://cointelegraph.com/news/stacks-asia-adgm-partnership-boosts-bitcoin-adoption-middle-east)\nCointelegraph\n[PreviousMarch 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)[NextMay 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\nLast updated 4 months ago\nWas this helpful?\n",
      "wordCount": 671,
      "title": "April 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/march-2025-2",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏May 2025\nArticle Title & Link\nMedia Outlet\nüöÄ [Stacks roadmap update and STX surge](https://blockchain.news/flashnews/stacks-announces-new-roadmap-after-nakamoto-and-sbtc-launch-key-updates-for-crypto-traders-in-2025)\nBlockchain News\nü§ù [Stacks Asia partners with HEX Trust](https://cointelegraph.com/news/stacks-asia-hex-trust-bitcoin-defi-opportunity)\nCointelegraph\n[üìà STX rallies 30% ahead of mainnet upgrade ](https://cointelegraph.com/news/stacks-stx-makes-30-gain-as-mainnet-upgrade-and-stablecoin-launch-approach)\nCointelegraph\n[üí° Tech Expert Predicts $1 Million Bitcoin ‚Äî 'Only One More 10x Left'](https://www.binance.com/en-IN/square/post/24043258936257)\nBinance\n[PreviousApril 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)[NextJune 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\nLast updated 3 months ago\nWas this helpful?\n",
      "wordCount": 601,
      "title": "May 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/june-2025",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏June 2025\nArticle Title & Link\nOutlet\nüì∞ [Stacks to be Showcased](https://www.globenewswire.com/news-release/2025/06/04/3093569/0/en/Stacks-to-be-Showcased-at-Blockchain-and-Digital-Assets-Virtual-Investor-Conference-on-June-5th.html)[ at Blockchain and Digital Assets Virtual Investor Conference on June 5](https://www.globenewswire.com/news-release/2025/06/04/3093569/0/en/Stacks-to-be-Showcased-at-Blockchain-and-Digital-Assets-Virtual-Investor-Conference-on-June-5th.html)\nGlobe Newswire\nü§ù [Copper Launches Support for sBTC](https://www.crowdfundinsider.com/2025/06/241658-digital-assets-copper-introduces-sbtc-stacking-functionality/)\nCrowdfund Insider\nüß© [Hex Trust Adds sBTC Support and SIP-010 Integratio](https://bitcolumnist.com/release/hex-trust-integrates-sbtc-via-sip-010-to-enable-institutional-bitcoin-defi-access/)[n](https://bitcolumnist.com/release/hex-trust-integrates-sbtc-via-sip-010-to-enable-institutional-bitcoin-defi-access/)\nBitColumnist\n[PreviousMay 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)[NextJuly 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\nLast updated 3 months ago\nWas this helpful?\n",
      "wordCount": 595,
      "title": "June 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/june-2025-1",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏July 2025\nArticle Title & Link\nOutlet\nüì∞ [$1.5B Stacks sBTC and STX Adopt Wormhole NTT Standard to Expand Multichain](https://wormhole.com/blog/usd1-5b-stacks-sbtc-and-stx-adopt-wormhole-ntt-standard-to-expand-multichain?ref=stacksblog)\nWormhole Blog\n[Top Interop Protocol Wormhole Adds Stacks to Bridge Bitcoin to Multi-Chain DeFi](https://thedefiant.io/news/defi/wormhole-integrates-stacks-tokens-for-multi-chain-bitcoin-defi)\nThe Defiant\n[PreviousJune 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)[NextAugust 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\nLast updated 23 days ago\nWas this helpful?\n",
      "wordCount": 588,
      "title": "July 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/june-2025-2",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏August 2025\nArticle Title & Link\nOutlet\n[BTCFi #2: Inside the Infrastructure Layer of BTCFi](https://x.com/Tiger_Research_/status/1957703731308556340?ref=stacksblog)\nTiger Research\n[PreviousJuly 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)[NextSeptember 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\nLast updated 23 days ago\nWas this helpful?\n",
      "wordCount": 569,
      "title": "August 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n  2. [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n\n\n#  üî∏September 2025\nArticle Title & Link\nOutlet\n[LAB: Africa‚Äôs First Bitcoin Layer 2 Development Hub & Incubator](https://stacks.org/let-africa-build?ref=stacksblog)\nStacks Foundation Blog\n[Unlocking Bitcoin's value - Will the BTCFi narrative push Stacks to $20?](https://eng.ambcrypto.com/unlocking-bitcoins-value-will-the-btcfi-narrative-push-stacks-stx-to-20/)\nAMB Crypto\n[PreviousAugust 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)[NextBitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\nLast updated 23 days ago\nWas this helpful?\n",
      "wordCount": 586,
      "title": "September 2025 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n![Page cover](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FtOCiJfV1A2a8roFJSYLf%252F%252B%2520%286%29.svg%3Falt%3Dmedia%26token%3D093063f4-f5f2-4645-96fb-233fdc64ff4d&width=1248&dpr=4&quality=100&sign=3d6fa701&sv=2)\nWas this helpful?\nCopy\n  1. [üß°Bitcoin Theses and Reports](https://docs.stacks.co/bitcoin-theses-and-reports)\n\n\n#  üü†Bitcoin Theses\nThis list will be updated monthly and capture notable investor theses or industry commentary on Stacks and the Bitcoin ecosystem.\nTitle\nOutlet/Author\nDate\n[TradFi Tomorrow: DeFi and the Rise of Extensible Finance](https://www.paradigm.xyz/2025/03/tradfi-tomorrow-defi-and-the-rise-of-extensible-finance)\nParadigm\nMarch 2025\nüí≠ [It's time to make your It‚Äôs time to make your BTC productive again](https://medium.com/@aspendigitalAMP/its-time-to-make-your-btc-productive-again-7532ea788a32)\nAspen Digital\nMarch 2025\nüí≠ [The Bitcoin Renaissance: Unlocking Trillions in Value](https://www.forbes.com/sites/leeorshimron/2024/08/13/the-bitcoin-renaissance-unlocking-trillions-in-value/)\nLeeor Shimron, Forbes\nAugust 2024\nüí≠[My journey with the Blockchain Ecosystem and why do I like Stacks?](https://www.linkedin.com/pulse/my-journey-blockchain-ecosystem-why-do-i-like-stacks-ali-farid-khwaja-wkybf?ref=stacksblog)\nAli Farid Khwaja\nJuly 2024\nüñãÔ∏è [Bitcoin and Future Infracon Highlights](https://arkstreamcapital.medium.com/arkstream-capital-bitcoin-and-future-infracon-highlights-b9b3ac4777cd)\nArkstream Capital\nJune 2024\nüìä [The Build on Bitcoin Era is Here](https://mythofmoney.substack.com/p/build-on-bitcoin-era-is-here)\nMyth of Money\nFebruary 2024\nüìä [2024 Bitcoin Halving: This Time It's Different](https://www.grayscale.com/research/reports/2024-halving-this-time-its-actually-different)\nGrayscale\nFebruary 2024\nüå± [The Year Ahead | Pantera Blockchain Letter](https://panteracapital.com/blockchain-letter/the-year-ahead-2024/)\nPantera\nJanuary 2024\nüå± [State of Bitcoin Q4 2023](https://messari.io/report/state-of-bitcoin-q4-2023)\nMessari\nJanuary 2024\nüñãÔ∏è [Notable Moments for Bitcoin in 2024](https://trustmachines.co/blog/notable-moments-for-bitcoin-in-2024/?ref=stacksblog)\nTrust Machines\nJanuary 2024\nüìô [Bitcoin Layers: Tapestry of a Trustless Financial Era](https://bitcoinlayersreport.com/)\nSpartan Group\nDecember 2023\nüß™ [A Technical History of Blockchain Design, Innovation, and Narratives](https://foundationcapital.com/a-technical-history-of-blockchain-design-innovation-and-narratives-part-i/)\nFoundation Capital\nDecember 2023\nüìä [2024 Crypto Market Outlook](https://www.coinbase.com/nl/institutional/research-insights/research/market-intelligence/2024-crypto-market-outlook)\nCoinbase\nDecember 2023\nüëÄ [STX Thesis Update](https://medium.com/@halp1120/stx-thesis-update-cd09b7f2cce8)\nHal Press\nDecember 2023\n[PreviousSeptember 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)[NextBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\nLast updated 6 months ago\nWas this helpful?\n",
      "wordCount": 745,
      "title": "Bitcoin Theses | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß°Bitcoin Theses and Reports](https://docs.stacks.co/bitcoin-theses-and-reports)\n\n\n#  üìôBitcoin Reports\nThis list will be updated monthly and capture notable investor theses or industry commentary on Stacks and the Bitcoin ecosystem.\nTitle\nOutlet/Author\nDate\nüß™ [Unlocking Bitcoin [Presentation]: The Bitcoin Tipping Point](https://syphercapital.substack.com/p/unlocking-bitcoin-presentation-the)\nSypher Capital\nMarch 2025\nüìä [State of Crypto: 2025 Market Outlet](https://www.globalxetfs.com.au/state-of-crypto-2025-market-outlook/)\nGlobal X\nFebruary 2025\nüüß [Stacks Q4 2024 Brief](https://messari.io/report/stacks-q4-2024-brief)\nMessari\nFebruary 2025\nüìà [Top 'Made in USA' Coins by MarketCap](https://x.com/Stacks/status/1881640502149390473?utm_source=stackssnacks.com&utm_medium=newsletter&utm_campaign=stacks-thrives-amid-regulatory-changes-stacking-dao-unveils-sbtc-product&_bhlid=42f17e5c11b1222a7ddd2cf3de42eb1c121496bc)\nCoinGecko\nJanuary 2025\nüìô [GTM in Asia Report: The Driving Force Behind Crypto Market Growth](https://www.theblock.co/post/333733/foresight-ventures-and-primitive-ventures-unveil-game-changing-apac-crypto-go-to-market-insights)\nPrimitive Ventures\nJanuary 2025\nüìà [Top 10 Digital Assets Market Predictions](https://x.com/AspenDigitalAMP/status/1877289981166731741)\nAspen Digital\nJanuary 2025\nüìô [State of Tokenized BTC: A $1 Trillion Opportunity](https://docs.stacks.co/concepts/sbtc/operations/deposit)\nBitcoin Builders Association\nDecember 2024\nüüß [Our Thesis on Stacks](https://candidcontemplation.substack.com/p/our-thesis-on-stx)\nPortal Ventures\nDecember 2024\nüìä [Scaling Bitcoin](https://www.gsr.io/reports/scaling-bitcoin/)\nGSR\nNovember 2024\nüìä [Bitcoin L2s: A Modular Future](https://www.galaxy.com/insights/research/bitcoin-layer-2-modular-future/)\nGalaxy Digital\nNovember 2024\nüìä [Crypto Sectors in Q4 2024](https://www.grayscale.com/research/market-commentary/grayscale-research-insights-crypto-sectors-in-q4-2024)\nGrayscale\nSeptember 2024\nüìà [Stacks August 2024 Snapshot ](https://x.com/signal21btc/status/1833117479024963728)\nSignal21\nAugust 2024\nüüß [Building Block: Stacks](https://www.grayscale.com/research/reports/building-block-stacks?ref=stacksblog)\nGrayscale\nAugust 2024\nüìô [Bitcoin Layer 2 Ecosystems](https://unhashed.aarna.ai/p/bitcoin-layer2-ecosystems?ref=stacksblog)\nAlpha Unhashed \nJune 2024\nüìô [Stacks Snapshot June 2024](https://app.signal21.io/reports/stacks-snapshot-june-2024)\nSignal21\nJune 2024\nüß™ [The Future of Bitcoin #3: Scaling Bitcoin](https://www.binance.com/en/research/analysis/the-future-of-bitcoin-3-scaling-bitcoin?ref=stacksblog)\nBinance Research\nMay 2024\nüüß [Q4 2023: No Denying Demand For Bitcoin L2s](https://newsletters.stacks.org/p/q4-2023)\nStacks Foundation\nJanuary 2024\nüìä Electric Capital Report[Stacks established developers up 51%](https://flight.beehiiv.net/v2/clicks/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1cmwiOiJodHRwczovL3R3aXR0ZXIuY29tL0tlblRoZVJvZ2Vycy9zdGF0dXMvMTc0ODA2MDU5OTcwMjE5MjYyNj9zPTIwJnJlZj1zdGFja3NibG9nJnV0bV9zb3VyY2U9c3RhY2tzc25hY2tzLmNvbSZ1dG1fbWVkaXVtPXJlZmVycmFsJnV0bV9jYW1wYWlnbj1kaXNjb3Zlci1zdGFja3MtaW4tc3BhcnRhbi1ncm91cC1iaXRjb2luLWwyLXJlcG9ydC1lbGVjdHJpYy1jYXBpdGFsLWRldmVsb3Blci1yZXBvcnQiLCJwb3N0X2lkIjoiZTdmYWFkODEtZmI3Ni00MjBmLTk3YWItNGJjMjdmM2RiYjdiIiwicHVibGljYXRpb25faWQiOiIzY2ZhYmZjYy0xNDU5LTQ0NTAtODI3MC1iOGJmM2RkMmFiOTciLCJ2aXNpdF90b2tlbiI6ImQxNDQwNWJiLWMxOWEtNDJiYi05NGQxLTY4MmRiNzZkOWQ3ZSIsImlhdCI6MTcwODA5NzQyMSwiaXNzIjoib3JjaGlkIn0.t0UBYmIXoMyGWCemN_n36kslOn35rIcv2v7LQR3nMLs)\nElectric Capital\nJanuary 2024\nüìô [Binance Research: Top 10 Narratives to Follow in 2024](https://public.bnbstatic.com/static/files/research/top-10-narratives.pdf)\nBinance Research\nDecember 2023\nüìô [Bitcoin Layers Report: Tapestry of a Trustless Financial Era](https://bitcoinlayersreport.com/)\nSpartan Group\nDecember 2023\n[PreviousBitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)[NextContribute](https://docs.stacks.co/contribute)\nLast updated 6 months ago\nWas this helpful?\n",
      "wordCount": 789,
      "title": "Bitcoin Reports | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/contribute",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Contribute to Stacks Core](https://docs.stacks.co/contribute#contribute-to-stacks-core)\n  * [Contribute to these Docs](https://docs.stacks.co/contribute#contribute-to-these-docs)\n\n\nWas this helpful?\nCopy\n# Contribute\n### \n[](https://docs.stacks.co/contribute#contribute-to-stacks-core)\nContribute to Stacks Core\nThere is a [detailed contribution guide](https://github.com/stacks-network/stacks-core/blob/master/CONTRIBUTING.md) that lives in the Stacks core GitHub repository that is the best place to get started contributing to Stacks.\n### \n[](https://docs.stacks.co/contribute#contribute-to-these-docs)\nContribute to these Docs\nThe Stacks docs are built using GitBook with a two-way sync with the [docs repository on GitHub](https://github.com/stacks-network/docs).\nBecause of this two-way sync, you can contribute to the documentation in one of two ways:\n  1. You can fork the docs repo, add your change, and then create a PR to be merged into the main docs\n  2. You can create an issue, and someone that works on the docs will take a look and implement it if it is a necessary change\n\n\nWhat kinds of changes are we looking for?\nIf you see a typo, a missing tutorial, an unclear explanation, or really anything else you think could improve the quality of the documentation, please feel free to open an issue or create a pull request.\n[PreviousBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 717,
      "title": "Contribute | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/concepts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n\n\n# Stacks 101\nStacks has a very unique technical model in the blockchain world. This section will help you get a high-level overview of the essential components to understand how Stacks works.\nWe'll cover the basics of what Stacks is and how it works from both a philosophical and technical level, and you can dive into the further sections for more details.\nFirst up, let's get an overview of exactly what Stacks is.\n[PreviousStart Here](https://docs.stacks.co/)[NextWhat Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 620,
      "title": "Stacks 101 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/docs/write-smart-contracts/clarity-language/language-keywords",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n## Page not found\nThe page you are looking for doesn't exist.\n",
      "wordCount": 541,
      "title": "Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/docs/write-smart-contracts/clarity-language/language-functions",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n## Page not found\nThe page you are looking for doesn't exist.\n",
      "wordCount": 541,
      "title": "Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/references/stacking-contract",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n## Page not found\nThe page you are looking for doesn't exist.\n",
      "wordCount": 541,
      "title": "Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/references/bns-contract",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Public functions](https://docs.stacks.co/example-contracts/bns#public-functions)\n  * [Read-only functions](https://docs.stacks.co/example-contracts/bns#read-only-functions)\n  * [Error codes](https://docs.stacks.co/example-contracts/bns#error-codes)\n\n\nWas this helpful?\nCopy\n  1. [üèóÔ∏èExample Contracts](https://docs.stacks.co/example-contracts)\n\n\n# BNS\nThe Bitcoin Name System (BNS) is implemented as a smart contract using Clarity.\nBelow is a list of public and read-only functions as well as error codes that can be returned by those methods:\n  * Public functions\n  * Read-only functions\n  * Error codes\n\n\n### \n[](https://docs.stacks.co/example-contracts/bns#public-functions)\nPublic functions\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-import)\nname-import\n**Input:**`**(buff 20), (buff 48), principal, (buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-import namespace name beneficiary zonefile-hash)**`\n**Description:**\nImports name to a revealed namespace. Each imported name is given both an owner and some off-chain state.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-preorder)\nname-preorder\n**Input:**`**(buff 20), uint**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(name-preorder hashed-salted-fqn stx-to-burn)**`\n**Description:**\nPreorders a name by telling all BNS nodes the salted hash of the BNS name. It pays the registration fee to the namespace owner's designated address.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-register)\nname-register\n**Input:**`**(buff 20), (buff 48), (buff 20), (buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-register namespace name salt zonefile-hash)**`\n**Description:**\nReveals the salt and the name to all BNS nodes, and assigns the name an initial public key hash and zone file hash.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-renewal)\nname-renewal\n**Input:**`**(buff 20), (buff 48), uint, (optional principal), (optional (buff 20))**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-renewal namespace name stx-to-burn new-owner zonefile-hash)**`\n**Description:**\nDepending in the namespace rules, a name can expire. For example, names in the .id namespace expire after 2 years. You need to send a name renewal every so often to keep your name.\nYou will pay the registration cost of your name to the namespace's designated burn address when you renew it. When a name expires, it enters a \"grace period\". The period is set to 5000 blocks (a month) but can be configured for each namespace.\nIt will stop resolving in the grace period, and all of the above operations will cease to be honored by the BNS consensus rules. You may, however, send a NAME_RENEWAL during this grace period to preserve your name. After the grace period, everybody can register that name again. If your name is in a namespace where names do not expire, then you never need to use this transaction.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-revoke)\nname-revoke\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-revoke namespace name)**`\n**Description:**\nMakes a name unresolvable. The BNS consensus rules stipulate that once a name is revoked, no one can change its public key hash or its zone file hash. The name's zone file hash is set to null to prevent it from resolving. You should only do this if your private key is compromised, or if you want to render your name unusable for whatever reason.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-transfer)\nname-transfer\n**Input:**`**(buff 20), (buff 48), principal, (optional (buff 20))**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-transfer namespace name new-owner zonefile-hash)**`\n**Description:**\nChanges the name's public key hash. You would send a name transfer transaction if you wanted to:\n  * Change your private key\n  * Send the name to someone else or\n  * Update your zone file\n\n\nWhen transferring a name, you have the option to also clear the name's zone file hash (i.e. set it to null). This is useful for when you send the name to someone else, so the recipient's name does not resolve to your zone file.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-update)\nname-update\n**Input:**`**(buff 20), (buff 48), (buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(name-update namespace name zonefile-hash)**`\n**Description:**\nChanges the name's zone file hash. You would send a name update transaction if you wanted to change the name's zone file contents. For example, you would do this if you want to deploy your own Gaia hub and want other people to read from it.\n#### \n[](https://docs.stacks.co/example-contracts/bns#namespace-preorder)\nnamespace-preorder\n**Input:**`**(buff 20), uint**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(namespace-preorder hashed-salted-namespace stx-to-burn)**`\n**Description:**\nRegisters the salted hash of the namespace with BNS nodes, and burns the requisite amount of cryptocurrency. Additionally, this step proves to the BNS nodes that user has honored the BNS consensus rules by including a recent consensus hash in the transaction. Returns pre-order's expiration date (in blocks).\n#### \n[](https://docs.stacks.co/example-contracts/bns#namespace-ready)\nnamespace-ready\n**Input:**`**(buff 20)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(namespace-ready namespace)**`\n**Description:**\nLaunches the namespace and makes it available to the public. Once a namespace is launched, anyone can register a name in it if they pay the appropriate amount of cryptocurrency.\n#### \n[](https://docs.stacks.co/example-contracts/bns#namespace-reveal)\nnamespace-reveal\n**Input:**`**(buff 20), (buff 20), uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, uint, principal**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(namespace-reveal namespace namespace-salt p-func-base p-func-coeff p-func-b1 p-func-b2 p-func-b3 p-func-b4 p-func-b5 p-func-b6 p-func-b7 p-func-b8 p-func-b9 p-func-b10 p-func-b11 p-func-b12 p-func-b13 p-func-b14 p-func-b15 p-func-b16 p-func-non-alpha-discount p-func-no-vowel-discount lifetime namespace-import)**`\n**Description:**\nReveals the salt and the namespace ID (after a namespace preorder). It reveals how long names last in this namespace before they expire or must be renewed, and it sets a price function for the namespace that determines how cheap or expensive names its will be.All of the parameters prefixed by `p` make up the `price function`. These parameters govern the pricing and lifetime of names in the namespace.\nThe rules for a namespace are as follows:\n  * a name can fall into one of 16 buckets, measured by length. Bucket 16 incorporates all names at least 16 characters long.\n  * the pricing structure applies a multiplicative penalty for having numeric characters, or punctuation characters.\n  * the price of a name in a bucket is `((coeff) * (base) ^ (bucket exponent)) / ((numeric discount multiplier) * (punctuation discount multiplier))`\n\n\nExample:\n  * base = 10\n  * coeff = 2\n  * nonalpha discount: 10\n  * no-vowel discount: 10\n  * buckets 1, 2: 9\n  * buckets 3, 4, 5, 6: 8\n  * buckets 7, 8, 9, 10, 11, 12, 13, 14: 7\n  * buckets 15, 16+:\n\n\n### \n[](https://docs.stacks.co/example-contracts/bns#read-only-functions)\nRead-only functions\n#### \n[](https://docs.stacks.co/example-contracts/bns#can-name-be-registered)\ncan-name-be-registered\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(can-name-be-registered namespace name)**`\n**Description:**\nReturns true if the provided name can be registered.\n#### \n[](https://docs.stacks.co/example-contracts/bns#can-namespace-be-registered)\ncan-namespace-be-registered\n**Input:**`**(buff 20)**`\n**Output:**`**(response bool UnknownType)**`\n**Signature:**`**(can-namespace-be-registered namespace)**`\n**Description:**\nReturns true if the provided namespace is available.\n#### \n[](https://docs.stacks.co/example-contracts/bns#can-receive-name)\ncan-receive-name\n**Input:**`**principal**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(can-receive-name owner)**`\n**Description:**\nReturns true if the provided name can be received. That is, if it is not currently owned, a previous lease is expired, and the name wasn't revoked.\n#### \n[](https://docs.stacks.co/example-contracts/bns#get-name-price)\nget-name-price\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(get-name-price namespace name)**`\n**Description:**\nGets the price for a name.\n#### \n[](https://docs.stacks.co/example-contracts/bns#get-namespace-price)\nget-namespace-price\n**Input:**`**(buff 20)**`\n**Output:**`**(response uint int)**`\n**Signature:**`**(get-namespace-price namespace)**`\n**Description:**\nGets the price for a namespace.\n#### \n[](https://docs.stacks.co/example-contracts/bns#get-namespace-properties)\nget-namespace-properties\n**Input:**`**(buff 20)**`\n**Output:**`**(response (tuple (namespace (buff 20)) (properties (tuple (can-update-price-function bool) (launched-at (optional uint)) (lifetime uint) (namespace-import principal) (price-function (tuple (base uint) (buckets (list 16 uint)) (coeff uint) (no-vowel-discount uint) (nonalpha-discount uint))) (revealed-at uint)))) int)**`\n**Signature:**`**(get-namespace-properties namespace)**`\n**Description:**\nGet namespace properties.\n#### \n[](https://docs.stacks.co/example-contracts/bns#is-name-lease-expired)\nis-name-lease-expired\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response bool int)**`\n**Signature:**`**(is-name-lease-expired namespace name)**`\n**Description:**\nReturn true if the provided name lease is expired.\n#### \n[](https://docs.stacks.co/example-contracts/bns#name-resolve)\nname-resolve\n**Input:**`**(buff 20), (buff 48)**`\n**Output:**`**(response (tuple (lease-ending-at (optional uint)) (lease-started-at uint) (owner principal) (zonefile-hash (buff 20))) int)**`\n**Signature:**`**(name-resolve namespace name)**`\n**Description:**\nGet name registration details.\n#### \n[](https://docs.stacks.co/example-contracts/bns#resolve-principal)\nresolve-principal\n**Input:**`**principal**`\n**Output:**`**(response (tuple (name (buff 48)) (namespace (buff 20))) (tuple (code int) (name (optional (tuple (name (buff 48)) (namespace (buff 20)))))))**`\n**Signature:**`**(resolve-principal owner)**`\n**Description:**\nReturns the registered name that a principal owns if there is one. A principal can only own one name at a time.\n### \n[](https://docs.stacks.co/example-contracts/bns#error-codes)\nError codes\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_insufficient_funds)\nERR_INSUFFICIENT_FUNDS\n**type:**`**int**`\n**value:**`**4001**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_already_exists)\nERR_NAMESPACE_ALREADY_EXISTS\n**type:**`**int**`\n**value:**`**1006**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_already_launched)\nERR_NAMESPACE_ALREADY_LAUNCHED\n**type:**`**int**`\n**value:**`**1014**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_blank)\nERR_NAMESPACE_BLANK\n**type:**`**int**`\n**value:**`**1013**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_charset_invalid)\nERR_NAMESPACE_CHARSET_INVALID\n**type:**`**int**`\n**value:**`**1016**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_hash_malformed)\nERR_NAMESPACE_HASH_MALFORMED\n**type:**`**int**`\n**value:**`**1015**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_not_found)\nERR_NAMESPACE_NOT_FOUND\n**type:**`**int**`\n**value:**`**1005**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_not_launched)\nERR_NAMESPACE_NOT_LAUNCHED\n**type:**`**int**`\n**value:**`**1007**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_operation_unauthorized)\nERR_NAMESPACE_OPERATION_UNAUTHORIZED\n**type:**`**int**`\n**value:**`**1011**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_already_exists)\nERR_NAMESPACE_PREORDER_ALREADY_EXISTS\n**type:**`**int**`\n**value:**`**1003**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_claimability_expired)\nERR_NAMESPACE_PREORDER_CLAIMABILITY_EXPIRED\n**type:**`**int**`\n**value:**`**1009**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_expired)\nERR_NAMESPACE_PREORDER_EXPIRED\n**type:**`**int**`\n**value:**`**1002**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_launchability_expired)\nERR_NAMESPACE_PREORDER_LAUNCHABILITY_EXPIRED\n**type:**`**int**`\n**value:**`**1010**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_preorder_not_found)\nERR_NAMESPACE_PREORDER_NOT_FOUND\n**type:**`**int**`\n**value:**`**1001**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_price_function_invalid)\nERR_NAMESPACE_PRICE_FUNCTION_INVALID\n**type:**`**int**`\n**value:**`**1008**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_stx_burnt_insufficient)\nERR_NAMESPACE_STX_BURNT_INSUFFICIENT\n**type:**`**int**`\n**value:**`**1012**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_namespace_unavailable)\nERR_NAMESPACE_UNAVAILABLE\n**type:**`**int**`\n**value:**`**1004**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_already_claimed)\nERR_NAME_ALREADY_CLAIMED\n**type:**`**int**`\n**value:**`**2011**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_blank)\nERR_NAME_BLANK\n**type:**`**int**`\n**value:**`**2010**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_charset_invalid)\nERR_NAME_CHARSET_INVALID\n**type:**`**int**`\n**value:**`**2022**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_claimability_expired)\nERR_NAME_CLAIMABILITY_EXPIRED\n**type:**`**int**`\n**value:**`**2012**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_could_not_be_minted)\nERR_NAME_COULD_NOT_BE_MINTED\n**type:**`**int**`\n**value:**`**2020**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_could_not_be_transferred)\nERR_NAME_COULD_NOT_BE_TRANSFERRED\n**type:**`**int**`\n**value:**`**2021**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_expired)\nERR_NAME_EXPIRED\n**type:**`**int**`\n**value:**`**2008**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_grace_period)\nERR_NAME_GRACE_PERIOD\n**type:**`**int**`\n**value:**`**2009**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_hash_malformed)\nERR_NAME_HASH_MALFORMED\n**type:**`**int**`\n**value:**`**2017**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_not_found)\nERR_NAME_NOT_FOUND\n**type:**`**int**`\n**value:**`**2013**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_not_resolvable)\nERR_NAME_NOT_RESOLVABLE\n**type:**`**int**`\n**value:**`**2019**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_operation_unauthorized)\nERR_NAME_OPERATION_UNAUTHORIZED\n**type:**`**int**`\n**value:**`**2006**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preordered_before_namespace_launch)\nERR_NAME_PREORDERED_BEFORE_NAMESPACE_LAUNCH\n**type:**`**int**`\n**value:**`**2018**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_already_exists)\nERR_NAME_PREORDER_ALREADY_EXISTS\n**type:**`**int**`\n**value:**`**2016**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_expired)\nERR_NAME_PREORDER_EXPIRED\n**type:**`**int**`\n**value:**`**2002**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_funds_insufficient)\nERR_NAME_PREORDER_FUNDS_INSUFFICIENT\n**type:**`**int**`\n**value:**`**2003**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_preorder_not_found)\nERR_NAME_PREORDER_NOT_FOUND\n**type:**`**int**`\n**value:**`**2001**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_revoked)\nERR_NAME_REVOKED\n**type:**`**int**`\n**value:**`**2014**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_stx_burnt_insufficient)\nERR_NAME_STX_BURNT_INSUFFICIENT\n**type:**`**int**`\n**value:**`**2007**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_transfer_failed)\nERR_NAME_TRANSFER_FAILED\n**type:**`**int**`\n**value:**`**2015**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_name_unavailable)\nERR_NAME_UNAVAILABLE\n**type:**`**int**`\n**value:**`**2004**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_panic)\nERR_PANIC\n**type:**`**int**`\n**value:**`**0**`\n#### \n[](https://docs.stacks.co/example-contracts/bns#err_principal_already_associated)\nERR_PRINCIPAL_ALREADY_ASSOCIATED\n**type:**`**int**`\n**value:**`**3001**`\n[PreviousStacking](https://docs.stacks.co/example-contracts/stacking)[NextMulti Send](https://docs.stacks.co/example-contracts/multi-send)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1944,
      "title": "BNS | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/guides-and-tutorials",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Build Your First Stacks App in 30 Minutes](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#build-your-first-stacks-app-in-30-minutes)\n  * [Step 1: Set Up Your Wallet (5 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-1-set-up-your-wallet-5-minutes)\n  * [Install Leather Wallet](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#install-leather-wallet)\n  * [Step 2: Write Your First Clarity Contract (10 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-2-write-your-first-clarity-contract-10-minutes)\n  * [Write the Contract](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#write-the-contract)\n  * [Test the Contract](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-the-contract)\n  * [Key Clarity Concepts Explained](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#key-clarity-concepts-explained)\n  * [Step 3: Deploy Your Contract (5 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-3-deploy-your-contract-5-minutes)\n  * [Deploy via Stacks Explorer](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#deploy-via-stacks-explorer)\n  * [Test Your Deployed Contract](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-your-deployed-contract)\n  * [Step 4: Build the Frontend (10 minutes)](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-4-build-the-frontend-10-minutes)\n  * [Set Up the Project](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#set-up-the-project)\n  * [Create the App Component](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#create-the-app-component)\n  * [Add Basic Styling](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#add-basic-styling)\n  * [Update the Contract Address](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#update-the-contract-address)\n  * [Run Your App](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#run-your-app)\n  * [Congratulations! üéâ](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#congratulations)\n  * [Next Steps](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#next-steps)\n  * [Learn More About Clarity](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#learn-more-about-clarity)\n  * [Explore Advanced Features](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#explore-advanced-features)\n  * [Development Tools](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#development-tools)\n  * [Community Resources](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#community-resources)\n\n\nWas this helpful?\nCopy\n  1. [üõ†Ô∏èGuides & Tutorials](https://docs.stacks.co/guides-and-tutorials)\n\n\n# Developer Quickstart\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#build-your-first-stacks-app-in-30-minutes)\nBuild Your First Stacks App in 30 Minutes\nLooking to see what building on Stacks is all about? You're in the right place.\nThis tutorial will help you build a working Stacks application in just 30 minutes. You'll learn the essential tools and concepts needed to build decentralized applications on Stacks, the leading Bitcoin L2.\n**What you'll build:** A simple message board where users can post messages to the blockchain and read messages from others.\n**What you'll learn:**\n  * How to write a Clarity smart contract\n  * How to deploy contracts to Stacks testnet\n  * How to connect a wallet to your app\n  * How to interact with contracts from a frontend\n\n\n**Prerequisites:**\n  * Basic familiarity with web development (HTML, CSS, JavaScript)\n  * A modern web browser\n  * 30 minutes of your time\n\n\nLet's get started!\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-1-set-up-your-wallet-5-minutes)\nStep 1: Set Up Your Wallet (5 minutes)\nFirst, you'll need a Stacks wallet to interact with the blockchain.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#install-leather-wallet)\nInstall Leather Wallet\n  1. Visit [leather.io](https://leather.io) and install the browser extension\n  2. Create a new wallet or import an existing one\n  3. **Important** : Switch to the **Testnet** network in your wallet settings\n  4. Get testnet STX tokens from the [Stacks Testnet Faucet](https://explorer.hiro.so/sandbox/faucet?chain=testnet)\n\n\nTestnet STX tokens are free and used for testing. They have no real value but let you experiment with Stacks development without cost.\nYour wallet is now ready for testnet development!\nYou don't have to use Leather, two other wallets popular with Stacks users are [Xverse](https://xverse.app) and [Asigna](https://asigna.io) if you need a multisig.\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-2-write-your-first-clarity-contract-10-minutes)\nStep 2: Write Your First Clarity Contract (10 minutes)\nClarity is Stacks' smart contract language, designed for safety and predictability. Let's write a simple message board contract.\nClarity is inspired by LISP and uses a functional programming approach. Everything in Clarity is an expression wrapped in parentheses. This can be a bit overwhelming at first if you are used to languages like JavaScript or Solidity, but the learning curve is short and Clarity is a simple language to understand once you dive in and start using it.\nFor a more detailed introduction, check out the [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course) in the docs.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#write-the-contract)\nWrite the Contract\nOpen [Clarity Playground](https://play.hiro.so/) in your browser. This is an online IDE where you can write and test Clarity code without installing anything.\nDelete the existing code and replace it with this message board contract:\nCopy```\n;; Simple Message Board Contract\n;; This contract allows users to post and read messages\n;; Define a map to store messages\n;; Key: message ID (uint), Value: message content (string-utf8 280)\n(define-map messages uint (string-utf8 280))\n;; Define a map to store message authors\n(define-map message-authors uint principal)\n;; Counter for message IDs\n(define-data-var message-count uint u0)\n;; Public function to add a new message\n(define-public (add-message (content (string-utf8 280)))\n  (let ((id (+ (var-get message-count) u1)))\n    (map-set messages id content)\n    (map-set message-authors id tx-sender)\n    (var-set message-count id)\n    (ok id)))\n;; Read-only function to get a message by ID\n(define-read-only (get-message (id uint))\n  (map-get? messages id))\n;; Read-only function to get message author\n(define-read-only (get-message-author (id uint))\n  (map-get? message-authors id))\n;; Read-only function to get total message count\n(define-read-only (get-message-count)\n  (var-get message-count))\n;; Read-only function to get the last few messages\n(define-read-only (get-recent-messages (count uint))\n  (let ((total-count (var-get message-count)))\n    (if (> count total-count)\n      (map get-message (list u1 u2 u3 u4 u5))\n      (map get-message (list\n        (- total-count (- count u1))\n        (- total-count (- count u2))\n        (- total-count (- count u3))\n        (- total-count (- count u4))\n        (- total-count (- count u5)))))))\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-the-contract)\nTest the Contract\nClick \"Deploy\", and go to the command line in the bottom right corner and try calling the functions.\nWe are using the [contract-call?](https://docs.stacks.co/reference/functions#contract-call) method to call the functions in the contract that we just deployed within the playground.\nCopy```\n;; Test adding a message\n(contract-call? .contract-1 add-message u\"Hello, Stacks!\")\n;; Test reading the message\n(contract-call? .contract-1 get-message u1)\n;; Test getting the count\n(contract-call? .contract-1 get-message-count)\n```\n\nYou should see the contract working in the evaluation panel on the right!\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#key-clarity-concepts-explained)\nKey Clarity Concepts Explained\nNow that you've seen the contract in action, let's talk about the core Clarity concepts you just used. When you write `define-map`, you're creating a data structure for storing key-value pairs on the blockchain. Think of it like creating a table in a database. The `define-data-var` function creates a variable that persists on the blockchain, perfect for keeping track of counters or settings that need to survive between function calls.\nWhen you declare a function with `define-public`, you're creating a function that can modify blockchain state and be called by anyone externally. This is different from `define-read-only`, which creates functions that can only read existing data without changing anything. This separation helps prevent accidental state changes and makes your contract's behavior more predictable.\nThe `tx-sender` variable is particularly useful because it's automatically set by the blockchain to contain the address of whoever called your function. You can't fake this value, which makes it perfect for authentication. When you need to create temporary variables within a function, you'll use `let` to set up local variables that only exist during that function call.\nFinally, every public function in Clarity must return a response type, which is why you see `ok` wrapping our return values. This ensures that every function call has a clear success or failure outcome, making your contracts much more predictable and easier to debug.\n**üîç Deep Dive: Understanding the Contract Code (Optional)**[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#deep-dive-understanding-the-contract-code-optional)\nWant to understand exactly what each part of the contract is doing? Let's walk through every function and concept used in our message board contract. Links to the official documentation are included for each function, so you may dive deeper if you want.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#how-we-store-data-on-the-blockchain)\nHow We Store Data on the Blockchain\nLet's start with how we're storing our messages. We use [`define-map`](https://docs.stacks.co/reference/functions#define-map) to create what's essentially a database table on the blockchain:\nCopy```\n(define-map messages uint (string-utf8 280))\n```\n\nThink of this as creating a table where each message gets a unique number (the `uint` key) and the message content can be up to 280 characters (the `string-utf8 280` value). It's like having a simple database where message #1 might be \"Hello World!\", message #2 might be \"Learning Clarity!\", and so on.\nWe also create another map to track who wrote each message:\nCopy```\n(define-map message-authors uint principal)\n```\n\nThis links each message ID to a `principal` (that's Clarity's term for a blockchain address). So if you post message #1, we'll store your address alongside that message ID.\nFinally, we need a way to keep track of how many messages we've posted so far:\nCopy```\n(define-data-var message-count uint u0)\n```\n\nThe [`define-data-var`](https://docs.stacks.co/reference/functions#define-data-var) creates a single variable that persists on the blockchain. We start it at `u0` (that's how you write the number 0 for unsigned integers in Clarity). The `u` prefix might look weird if you're coming from other languages, but it's just Clarity's way of saying \"this is a positive integer.\"\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#the-heart-of-our-contract-adding-messages)\nThe Heart of Our Contract: Adding Messages\nNow let's break down the most important function, the one that actually adds messages to our board:\nCopy```\n(define-public (add-message (content (string-utf8 280)))\n  (let ((id (+ (var-get message-count) u1)))\n    (map-set messages id content)\n    (map-set message-authors id tx-sender)\n    (var-set message-count id)\n    (ok id)))\n```\n\nStep by step, this function performs:\nWhen you call [`define-public`](https://docs.stacks.co/reference/functions#define-public), you're creating a function that anyone can call from outside the contract. The function takes one parameter called `content` that must be a UTF-8 string of maximum 280 characters.\nInside the function, we use [`let`](https://docs.stacks.co/reference/functions#let) to create a local variable. This is like declaring a variable inside a function in other languages, but with Clarity's unique syntax. We're creating a variable called `id` and setting it to the current message count plus 1.\n_Here's where Clarity might trip you up if you're coming from other languages._ Notice how we write `(+ (var-get message-count) u1)` instead of something like `message-count + 1`. In Clarity, operators like `+`, `-`, `>`, and `<` are actually functions that use prefix notation. So `(+ 2 3)` means \"add 2 and 3\" (instead of `2 + 3` like you'd write in JavaScript or Python). This is part of Clarity's LISP-inspired syntax where everything is a function call.\nThe [`var-get`](https://docs.stacks.co/reference/functions#var-get) function reads the current value of our message counter, and [`+`](https://docs.stacks.co/reference/functions#add) adds 1 to create the next message ID.\nNext, we store the message content using [`map-set`](https://docs.stacks.co/reference/functions#map-set), which is like inserting a row into a database table. We store the message content with the new ID we just created.\nWe also store who posted the message using another [`map-set`](https://docs.stacks.co/reference/functions#map-set) call (_Notice how we use_` _tx-sender_`_here_). This is a special variable that Clarity automatically sets to the address of whoever called the function. You can't fake this or manipulate it, which makes it perfect for tracking message authors.\nWe update our message counter using [`var-set`](https://docs.stacks.co/reference/functions#var-set), and finally return [`ok`](https://docs.stacks.co/reference/functions#ok) with the new message ID. In Clarity, all public functions must return either `(ok value)` for success or `(err error)` for failure. This ensures that every function call has a predictable outcome.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#reading-messages-back)\nReading Messages Back\nNow let's look at how we read messages back from the blockchain. Our simplest function is:\nCopy```\n(define-read-only (get-message (id uint))\n  (map-get? messages id))\n```\n\nWhen you use [`define-read-only`](https://docs.stacks.co/reference/functions#define-read-only), you're creating a function that can only read data, never modify it. This is perfect for getter functions like this one.\nThe [`map-get?`](https://docs.stacks.co/reference/functions#map-get) function looks up a message by its ID. Notice the `?` at the end of the function name. This is Clarity's convention for functions that might not find what they're looking for. If the message exists, you'll get back `(some \"message content\")`. If it doesn't exist, you'll get `none`. This is much safer than null pointers in other languages because you have to explicitly handle both cases.\nWe have similar functions for getting the message author and the total message count:\nCopy```\n(define-read-only (get-message-author (id uint))\n  (map-get? message-authors id))\n(define-read-only (get-message-count)\n  (var-get message-count))\n```\n\nThe message count function is particularly simple because it just reads our counter variable and returns it. No parameters needed since there's only one counter.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#a-more-complex-function-getting-recent-messages)\nA More Complex Function: Getting Recent Messages\nLet's look at our most complex function:\nCopy```\n(define-read-only (get-recent-messages (count uint))\n  (let ((total-count (var-get message-count)))\n    (if (> count total-count)\n      (map get-message (list u1 u2 u3 u4 u5))\n      (map get-message (list\n        (- total-count (- count u1))\n        (- total-count (- count u2))\n        (- total-count (- count u3))\n        (- total-count (- count u4))\n        (- total-count (- count u5)))))))\n```\n\nThis function demonstrates several advanced Clarity concepts. We use [`if`](https://docs.stacks.co/reference/functions#if) for conditional logic. The [`>`](https://docs.stacks.co/reference/functions#greater-than) operator (remember, it's a function in prefix notation) compares whether the requested count is greater than our total messages.\nThe [`map`](https://docs.stacks.co/reference/functions#map) function applies another function to each item in a list. So `(map get-message (list u1 u2 u3))` would call `get-message` on each of the numbers 1, 2, and 3.\nWe use [`list`](https://docs.stacks.co/reference/functions#list) to create a list of message IDs, and [`-`](https://docs.stacks.co/reference/functions#subtract) for subtraction to calculate which recent messages to fetch.\n#### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#what-makes-clarity-special)\nWhat Makes Clarity Special\nNow that you've seen the code, let me explain some of the key concepts that make Clarity different from other smart contract languages.\nOne of the most important things to understand about Clarity is its response types. Every public function must return either `(ok value)` or `(err error)`. This might seem annoying at first, but it ensures that every function call has a predictable outcome. If a function returns `err`, any changes it made to the blockchain are automatically rolled back. If it returns `ok`, the changes are committed. This prevents a lot of the bugs that plague other blockchain platforms.\nClarity also uses optional types extensively. Functions like `map-get?` return `(some value)` or `none` instead of potentially null values. This forces you to handle the case where data might not exist, which eliminates an entire class of bugs that you see in other languages where developers may neglect to check for null values.\nUnderstanding data persistence on the blockchain is another key concept. While Clarity does provide functions like `map-delete` and `map-set` that can modify or remove data, the decision of whether to make data mutable is entirely up to the contract developer. Notice how our contract doesn't have any functions to edit or delete messages. This is a deliberate design choice for our message board - we want messages to be permanent and trustworthy once posted. You could easily add update or delete functionality if your use case requires it, but for a message board, immutability makes sense.\nEvery operation on the blockchain has execution costs, and Clarity is designed to make these costs predictable. Simple operations like reading a variable cost very little, while complex operations cost more. This is why we [avoid unbounded loops and recursion in Clarity](https://docs.stacks.co/concepts/clarity/decidability) at the language level - they can lead to unpredictable costs and potentially infinite execution.\nThe automatic sender tracking through the `tx-sender` variable gives you built-in authentication without having to implement it yourself. This variable is automatically set by the blockchain and can't be spoofed, making it perfect for knowing who called your function.\n**Important** : Be careful when using `tx-sender` vs `contract-caller` in your contracts. While `tx-sender` refers to the original transaction sender and remains constant throughout the entire transaction chain, `contract-caller` refers to the most recent principal in the transaction chain and can change with each internal function or contract call. This difference is crucial for security - malicious contracts can potentially exploit `tx-sender`'s persistent context to bypass admin checks if you're not careful. For simple contracts like our message board, `tx-sender` is appropriate, but for more complex authorization logic, consider whether you need the original sender or the immediate caller.\nFor more details on this, check out [this excellent blog post](https://www.setzeus.com/public-blog-post/clarity-carefully-tx-sender) from Clarity developer [setzeus](https://x.com/setzeus).\nClarity's type safety means every variable and parameter has an explicit type. While Clarity is an interpreted language (not compiled), it performs comprehensive static analysis at deployment time through a multi-pass analysis system. This analysis catches type mismatches, undefined variables, and other errors before your contract is deployed, preventing runtime errors that could cause your contract to fail unexpectedly. Tools like `clarinet check` use this same analysis system to catch errors during development.\nFinally, Clarity's predictable execution model and [decidability](https://docs.stacks.co/concepts/clarity/decidability) mean that every function will terminate, and execution costs are predictable. Clarity doesn't allow recursion or unbounded loops, which makes Clarity contracts more reliable and easier to reason about than contracts written in other languages.\nThis contract demonstrates the core patterns you'll use in most Clarity smart contracts: storing data in maps and variables, creating public functions for state changes, read-only functions for data access, and proper error handling with response types.\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-3-deploy-your-contract-5-minutes)\nStep 3: Deploy Your Contract (5 minutes)\nNow let's deploy your contract to the Stacks testnet so you can interact with it from a web application.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#deploy-via-stacks-explorer)\nDeploy via Stacks Explorer\n  1. Visit the [Stacks Explorer Sandbox](https://explorer.hiro.so/sandbox/deploy?chain=testnet)\n  2. Connect your Leather wallet (make sure you're on testnet)\n  3. Paste your contract code into the editor\n  4. Give your contract a name (e.g., \"message-board\") or just use the default generated name\n  5. Click \"Deploy Contract\"\n  6. Confirm the transaction in your wallet\n\n\nThe deployment should only take a few seconds. Once complete, you'll see your contract address in the explorer. Here's [an example transaction](https://explorer.hiro.so/txid/0x3df7b597d1bbb3ce1598b1b0e28b7cbed38345fcf3fb33ae387165e13085e5d8?chain=testnet) deploying this contract.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#test-your-deployed-contract)\nTest Your Deployed Contract\n  1. In the explorer, find your deployed contract\n  2. Scroll down a bit and click on \"Available Functions\" to view its functions\n  3. Try calling `add-message` with a test message (you'll need to change the post conditions toggle to allow mode, there is a dedicated docs page talking about [Post Conditions on Stacks](https://docs.stacks.co/concepts/transactions/post-conditions))\n  4. Call `get-message` with ID `u1` to read it back\n  5. Call `get-message-count` to see the total\n\n\nYour contract is now live and functional on the blockchain!\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#step-4-build-the-frontend-10-minutes)\nStep 4: Build the Frontend (10 minutes)\nLet's create a simple web interface to interact with your contract.\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#set-up-the-project)\nSet Up the Project\nCreate a new React project:\nCopy```\nnpm create vite@latest my-message-board -- --template react\ncd my-message-board\nnpm install\n```\n\nInstall the Stacks.js libraries:\nCopy```\nnpm install @stacks/connect @stacks/transactions @stacks/network\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#create-the-app-component)\nCreate the App Component\nReplace the contents of `src/App.jsx` with the following:\nSince this is a quickstart, we won't dive into a long explanation of exacly what this code is doing. We suggest going and checking out [Hiro's Docs](https://docs.hiro.so/stacks/stacks.js) in order to get a handle on how stacks.js works.\nCopy```\nimport { useState, useEffect } from \"react\";\nimport { connect, disconnect, isConnected, request } from \"@stacks/connect\";\nimport {\n  fetchCallReadOnlyFunction,\n  stringUtf8CV,\n  uintCV,\n} from \"@stacks/transactions\";\nimport \"./App.css\";\nconst network = \"testnet\";\n// Replace with your contract address\nconst CONTRACT_ADDRESS = \"YOUR_CONTRACT_ADDRESS_HERE\";\nconst CONTRACT_NAME = \"message-board\";\nfunction App() {\n  const [connected, setConnected] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    setConnected(isConnected());\n    if (isConnected()) {\n      loadMessages();\n    }\n  }, []);\n  // Check for connection changes\n  useEffect(() => {\n    const checkConnection = () => {\n      const connectionStatus = isConnected();\n      if (connectionStatus !== connected) {\n        setConnected(connectionStatus);\n        if (connectionStatus) {\n          loadMessages();\n        }\n      }\n    };\n    const intervalId = setInterval(checkConnection, 500);\n    return () => clearInterval(intervalId);\n  }, [connected]);\n  const connectWallet = async () => {\n    try {\n      await connect({\n        appDetails: {\n          name: \"Message Board\",\n          icon: window.location.origin + \"/logo.svg\",\n        },\n        onFinish: () => {\n          setConnected(true);\n          // Small delay to ensure connection is fully established\n          setTimeout(() => {\n            loadMessages();\n          }, 100);\n        },\n      });\n    } catch (error) {\n      console.error(\"Connection failed:\", error);\n    }\n  };\n  const disconnectWallet = () => {\n    disconnect();\n    setConnected(false);\n    setMessages([]);\n  };\n  const loadMessages = async () => {\n    try {\n      // Get message count\n      const countResult = await fetchCallReadOnlyFunction({\n        contractAddress: CONTRACT_ADDRESS,\n        contractName: CONTRACT_NAME,\n        functionName: \"get-message-count\",\n        functionArgs: [],\n        network,\n        senderAddress: CONTRACT_ADDRESS,\n      });\n      const count = parseInt(countResult.value);\n      // Load recent messages\n      const messagePromises = [];\n      for (let i = Math.max(1, count - 4); i <= count; i++) {\n        messagePromises.push(\n          fetchCallReadOnlyFunction({\n            contractAddress: CONTRACT_ADDRESS,\n            contractName: CONTRACT_NAME,\n            functionName: \"get-message\",\n            functionArgs: [uintCV(i)],\n            network,\n            senderAddress: CONTRACT_ADDRESS,\n          })\n        );\n      }\n      const messageResults = await Promise.all(messagePromises);\n      const loadedMessages = messageResults\n        .map((result, index) => ({\n          id: count - messageResults.length + index + 1,\n          content: result.value.value,\n        }))\n        .filter((msg) => msg.content !== undefined);\n      setMessages(loadedMessages);\n    } catch (error) {\n      console.error(\"Error loading messages:\", error);\n    }\n  };\n  const postMessage = async () => {\n    if (!newMessage.trim()) return;\n    setLoading(true);\n    try {\n      const result = await request(\"stx_callContract\", {\n        contract: `${CONTRACT_ADDRESS}.${CONTRACT_NAME}`,\n        functionName: \"add-message\",\n        functionArgs: [stringUtf8CV(newMessage)],\n        network,\n      });\n      console.log(\"Transaction submitted:\", result.txid);\n      setNewMessage(\"\");\n      // Reload messages after a delay to allow the transaction to process\n      setTimeout(() => {\n        loadMessages();\n        setLoading(false);\n      }, 2000);\n    } catch (error) {\n      console.error(\"Error posting message:\", error);\n      setLoading(false);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>üìù Stacks Message Board</h1>\n        {!connected ? (\n          <button onClick={connectWallet} className=\"connect-button\">\n            Connect Wallet\n          </button>\n        ) : (\n          <button onClick={disconnectWallet} className=\"disconnect-button\">\n            Disconnect\n          </button>\n        )}\n      </header>\n      {connected && (\n        <main className=\"App-main\">\n          <div className=\"post-message\">\n            <h2>Post a Message</h2>\n            <div className=\"message-input\">\n              <input\n                type=\"text\"\n                value={newMessage}\n                onChange={(e) => setNewMessage(e.target.value)}\n                placeholder=\"What's on your mind?\"\n                maxLength={280}\n                disabled={loading}\n              />\n              <button\n                onClick={postMessage}\n                disabled={loading || !newMessage.trim()}\n              >\n                {loading ? \"Posting...\" : \"Post\"}\n              </button>\n            </div>\n          </div>\n          <div className=\"messages\">\n            <h2>Recent Messages</h2>\n            <button onClick={loadMessages} className=\"refresh-button\">\n              Refresh\n            </button>\n            {messages.length === 0 ? (\n              <p>No messages yet. Be the first to post!</p>\n            ) : (\n              <ul>\n                {messages.map((message) => (\n                  <li key={message.id}>\n                    <strong>Message #{message.id}:</strong> {message.content}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n        </main>\n      )}\n    </div>\n  );\n}\nexport default App;\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#add-basic-styling)\nAdd Basic Styling\nUpdate `src/App.css`:\nCopy```\n.App {\n  max-width: 800px;\n  width: 100%;\n  padding: 20px;\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", \"Roboto\",\n    \"Oxygen\", \"Ubuntu\", \"Cantarell\", \"Fira Sans\", \"Droid Sans\",\n    \"Helvetica Neue\", sans-serif;\n}\n.App-header {\n  text-align: center;\n  margin-bottom: 40px;\n  padding: 20px;\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n  border-radius: 12px;\n  color: white;\n  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);\n}\n.App-header h1 {\n  color: white;\n  margin-bottom: 20px;\n  font-size: 2.5rem;\n  font-weight: 700;\n  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.connect-button,\n.disconnect-button {\n  background-color: rgba(255, 255, 255, 0.2);\n  color: white;\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  padding: 12px 28px;\n  border-radius: 8px;\n  cursor: pointer;\n  font-size: 16px;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  backdrop-filter: blur(10px);\n}\n.connect-button:hover,\n.disconnect-button:hover {\n  background-color: rgba(255, 255, 255, 0.3);\n  border-color: rgba(255, 255, 255, 0.5);\n  transform: translateY(-2px);\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);\n}\n.post-message {\n  margin-bottom: 40px;\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n}\n.message-input {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n.message-input input {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #d1d5db;\n  border-radius: 4px;\n  font-size: 16px;\n}\n.message-input button {\n  background-color: #10b981;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n.message-input button:disabled {\n  background-color: #9ca3af;\n  cursor: not-allowed;\n}\n.messages {\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n}\n.refresh-button {\n  background-color: #6b7280;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-bottom: 20px;\n}\n.messages ul {\n  list-style: none;\n  padding: 0;\n}\n.messages li {\n  padding: 10px;\n  border-bottom: 1px solid #e5e7eb;\n  margin-bottom: 10px;\n}\n.messages li:last-child {\n  border-bottom: none;\n}\n```\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#update-the-contract-address)\nUpdate the Contract Address\n  1. Go back to the Stacks Explorer and find your deployed contract\n  2. Copy the contract address (it looks like `ST1ABC...123.message-board`)\n  3. Replace `YOUR_CONTRACT_ADDRESS_HERE` in the App.jsx file with your actual contract address and the contract name with the actual name\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#run-your-app)\nRun Your App\nCopy```\nnpm run dev\n```\n\nVisit `http://localhost:5173` and you should see your message board app! Connect your wallet and try posting a message.\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#congratulations)\nCongratulations! üéâ\nYou've just built your first Stacks application! Here's what you accomplished:\n  1. ‚úÖ Wrote a Clarity smart contract with data storage and public functions\n  2. ‚úÖ Deployed the contract to Stacks testnet\n  3. ‚úÖ Built a React frontend that connects to a Stacks wallet\n  4. ‚úÖ Integrated your frontend with your smart contract\n  5. ‚úÖ Posted and read data from the blockchain\n\n\n## \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#next-steps)\nNext Steps\nNow that you have the basics down, here are some ways to continue your Stacks development journey:\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#learn-more-about-clarity)\nLearn More About Clarity\n  * [**Clarity Book**](https://book.clarity-lang.org/): Comprehensive guide to Clarity development\n  * [**Clarity Reference**](https://docs.stacks.co/docs/clarity): Complete documentation of Clarity functions\n  * [**Clarity Crash Course**](https://docs.stacks.co/docs/clarity-crash-course): Quick introduction to Clarity concepts\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#explore-advanced-features)\nExplore Advanced Features\n  * **Error Handling** : Learn about Clarity's `try!` and `unwrap!` functions\n  * **Access Control** : Implement admin functions and permissions\n  * **Token Standards** : Build fungible (SIP-010) and non-fungible (SIP-009) tokens\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#development-tools)\nDevelopment Tools\n  * [**Clarinet**](https://github.com/hirosystems/clarinet): Local development environment for Clarity\n  * [**Hiro Platform**](https://platform.hiro.so): Hosted development environment\n  * [**Stacks Explorer**](https://explorer.stacks.co): View transactions and contracts on mainnet\n\n\n### \n[](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial#community-resources)\nCommunity Resources\n  * [**Stacks Discord**](https://discord.gg/stacks): Connect with other developers\n  * [**Stacks Forum**](https://forum.stacks.org): Ask questions and share projects\n  * [**Stacks GitHub**](https://github.com/stacks-network): Contribute to the ecosystem\n\n\nHappy building! üöÄ\n[PreviousMac OS](https://docs.stacks.co/concepts/gaia/mac-os)[NextClarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 4458,
      "title": "Developer Quickstart | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/docs/clarity",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Clarity](https://docs.stacks.co/concepts/clarity)\n\n\n# Overview\nClarity is a **decidable** smart contract language that optimizes for predictability and security, designed for the Stacks blockchain. Smart contracts allow developers to encode essential business logic on a blockchain.\nThe design decisions behind Clarity were based heavily on taking lessons learned in common Solidity exploits and creating a language that has been purpose-built for safety and security in mind.\nThese docs serve primarily as a reference for the functions and keywords that you can use in Clarity.\nIn order to learn Clarity, we recommend diving into the [Clarity of Mind](https://book.clarity-lang.org/), an online book to teach you everything you need to know to build robust smart contracts, or joining a [Clarity Camp](https://clarity-lang.org/universe#camp), the cohort-based immersive Clarity experience.\n### \n[](https://docs.stacks.co/concepts/clarity/overview#what-makes-clarity-different)\nWhat makes Clarity different\nThe following section is an excerpt from the excellent book, [Clarity of Mind](https://book.clarity-lang.org/ch00-00-introduction.html):\nThe number of smart contract languages grows by the year. Choosing a first language can be challenging, especially for a beginner. The choice is largely dictated by the ecosystem you are interested in, although some languages are applicable to more than just one platform. Each language has its own upsides and downsides and it is out of the scope of this book to look at all of them. Instead, we will focus on what sets Clarity apart and why it is a prime choice if you require the utmost security and transparency.\nOne of the core precepts of Clarity is that it is secure by design. The design process was guided by examining common pitfalls, mistakes, and vulnerabilities in the field of smart contract engineering as a whole. There are countless real world examples of where developer failure led to the loss or theft of vast amounts of tokens. To name two big ones: an issue that has become known as the Parity bug led to the irreparable loss of millions of dollars worth of Ethereum. Second, the hacking of The DAO (a \"Decentralized Autonomous Organization\") caused financial damage so great that the Ethereum Foundation decided to issue a contentious hard fork that undid the theft. These and many other mistakes could have been prevented in the design of the language itself.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-is-interpreted-not-compiled)\nClarity is interpreted, not compiled\nClarity code is interpreted and committed to the chain exactly as written. Solidity and other languages are compiled to byte-code before it is submitted to the chain. The danger of compiled smart contract languages is two-fold: first, a compiler adds a layer of complexity. A bug in the compiler may lead to different byte-code than was intended and thus carries the risk of introducing a vulnerability. Second, byte-code is not human-readable, which makes it very hard to verify what the smart contract is actually doing. Ask yourself, would you sign a contract you cannot read? If your answer is no, then why should it be any different for smart contracts? With Clarity, what you see is what you get.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-is-decidable)\nClarity is decidable\nA decidable language has the property that from the code itself, you can know with certainty what the program will do. This avoids issues like the halting problem. With Clarity you know for sure that given any input, the program will halt in a finite number of steps. In simple terms: it is guaranteed that program execution will end. Decidability also allows for complete static analysis of the call graph so you get an accurate picture of the exact cost before execution. There is no way for a Clarity call to \"run out of gas\" in the middle of the call. We explore this idea more, along with a discussion on Turing completeness, in the security deep dive on decidability.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-does-not-permit-reentrancy)\nClarity does not permit reentrancy\nReentrancy is a situation where one smart contract calls into another, which then calls back into the first contract‚Äîthe call \"re-enters\" the same logic. It may allow an attacker to trigger multiple token withdrawals before the contract has had a chance to update its internal balance sheet. Clarity's design considers reentrancy an anti-feature and disallows it on the language level.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#clarity-guards-against-overflow-and-underflows)\nClarity guards against overflow and underflows\nOverflows and underflows happen when a calculation results in a number that is either too large or too small to be stored, respectively. These events throw smart contracts into disarray and may intentionally be triggered in poorly written contracts by attackers. Usually this leads to a situation where the contract is either frozen or drained of tokens. Overflows and underflows of any kind automatically cause a transaction to be aborted in Clarity.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#support-for-custom-tokens-is-built-in)\nSupport for custom tokens is built-in\nIssuance of custom fungible and non-fungible tokens is a popular use-case for smart contracts. Custom token features are built into the Clarity language. Developers do not need to worry about creating an internal balance sheet, managing supply, and emitting token events. Creating custom tokens is covered in depth in later chapters.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#on-stacks-transactions-are-secured-by-post-conditions)\nOn Stacks, transactions are secured by post conditions\nIn order to further safeguard user tokens, post conditions can be attached to transactions to assert the chain state has changed in a certain way once the transaction has completed. For example, a user calling into a smart contract may attach a post condition that states that after the call completes, exactly 500 STX should have been transferred from one address to another. If the post condition check fails, then the entire transaction is reverted. Since custom token support is built right into Clarity, post conditions can also be used to guard any other token in the same way.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#returned-responses-cannot-be-left-unchecked)\nReturned responses cannot be left unchecked\nPublic contract calls must return a so-called response that indicates success or failure. Any contract that calls another contract is required to properly handle the response. Clarity contracts that fail to do so are invalid and cannot be deployed on the network. Other languages like Solidity permit the use of low level calls without requiring the return value to be checked. For example, a token transfer can fail silently if the developer forgets to check the result. In Clarity it is not possible to ignore errors, although that obviously does prevent buggy error handling on behalf of the developer. Responses and error handling are covered extensively in the chapters on functions and control flow.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#composition-over-inheritance)\nComposition over inheritance\nClarity adopts a composition over inheritance. It means that Clarity smart contracts do not inherit from one another like you see in languages like Solidity. Developers instead define traits which are then implemented by different smart contracts. It allows contracts to conform to different interfaces with greater flexibility. There is no need to worry about complex class trees and contracts with implicit inherited behavior.\n#### \n[](https://docs.stacks.co/concepts/clarity/overview#access-to-the-base-chain-bitcoin)\nAccess to the base chain: Bitcoin\nClarity smart contracts can read the state of the Bitcoin base chain. It means you can use Bitcoin transactions as a trigger in your smart contracts! Clarity also features a number of built-in functions to verify secp256k1 signatures and recover keys.\n[PreviousClarity](https://docs.stacks.co/concepts/clarity)[NextDecidability](https://docs.stacks.co/concepts/clarity/decidability)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1712,
      "title": "Overview | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/docs/clarity-crash-course",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n## Page not found\nThe page you are looking for doesn't exist.\n",
      "wordCount": 541,
      "title": "Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/docs/clarity/language-functions",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [* (multiply)‚Äã](https://docs.stacks.co/reference/functions#multiply)\n  * [+ (add)‚Äã](https://docs.stacks.co/reference/functions#add)\n  * [- (subtract)‚Äã](https://docs.stacks.co/reference/functions#subtract)\n  * [/ (divide)‚Äã](https://docs.stacks.co/reference/functions#divide)\n  * [< (less than)‚Äã](https://docs.stacks.co/reference/functions#less-than-less-than)\n  * [<= (less than or equal)‚Äã](https://docs.stacks.co/reference/functions#less-than-less-than-or-equal)\n  * [> (greater than)‚Äã](https://docs.stacks.co/reference/functions#greater-than-greater-than)\n  * [>= (greater than or equal)‚Äã](https://docs.stacks.co/reference/functions#greater-than-greater-than-or-equal)\n  * [and‚Äã](https://docs.stacks.co/reference/functions#and)\n  * [append‚Äã](https://docs.stacks.co/reference/functions#append)\n  * [as-contract‚Äã](https://docs.stacks.co/reference/functions#as-contract)\n  * [as-max-len?‚Äã](https://docs.stacks.co/reference/functions#as-max-len)\n  * [asserts!](https://docs.stacks.co/reference/functions#asserts)\n  * [at-block‚Äã](https://docs.stacks.co/reference/functions#at-block)\n  * [begin‚Äã](https://docs.stacks.co/reference/functions#begin)\n  * [bit-and‚Äã](https://docs.stacks.co/reference/functions#bit-and)\n  * [bit-not‚Äã](https://docs.stacks.co/reference/functions#bit-not)\n  * [bit-or‚Äã](https://docs.stacks.co/reference/functions#bit-or)\n  * [bit-shift-left‚Äã](https://docs.stacks.co/reference/functions#bit-shift-left)\n  * [bit-shift-right‚Äã](https://docs.stacks.co/reference/functions#bit-shift-right)\n  * [bit-xor‚Äã](https://docs.stacks.co/reference/functions#bit-xor)\n  * [buff-to-int-be‚Äã](https://docs.stacks.co/reference/functions#buff-to-int-be)\n  * [buff-to-int-le‚Äã](https://docs.stacks.co/reference/functions#buff-to-int-le)\n  * [buff-to-uint-be‚Äã](https://docs.stacks.co/reference/functions#buff-to-uint-be)\n  * [buff-to-uint-le‚Äã](https://docs.stacks.co/reference/functions#buff-to-uint-le)\n  * [concat‚Äã](https://docs.stacks.co/reference/functions#concat)\n  * [contract-call?‚Äã](https://docs.stacks.co/reference/functions#contract-call)\n  * [contract-of‚Äã](https://docs.stacks.co/reference/functions#contract-of)\n  * [default-to‚Äã](https://docs.stacks.co/reference/functions#default-to)\n  * [define-constant‚Äã](https://docs.stacks.co/reference/functions#define-constant)\n  * [define-data-var‚Äã](https://docs.stacks.co/reference/functions#define-data-var)\n  * [define-fungible-token‚Äã](https://docs.stacks.co/reference/functions#define-fungible-token)\n  * [define-map‚Äã](https://docs.stacks.co/reference/functions#define-map)\n  * [define-non-fungible-token‚Äã](https://docs.stacks.co/reference/functions#define-non-fungible-token)\n  * [define-private‚Äã](https://docs.stacks.co/reference/functions#define-private)\n  * [define-public‚Äã](https://docs.stacks.co/reference/functions#define-public)\n  * [define-read-only‚Äã](https://docs.stacks.co/reference/functions#define-read-only)\n  * [define-trait‚Äã](https://docs.stacks.co/reference/functions#define-trait)\n  * [element-at‚Äã](https://docs.stacks.co/reference/functions#element-at)\n  * [element-at?‚Äã](https://docs.stacks.co/reference/functions#element-at-1)\n  * [err‚Äã](https://docs.stacks.co/reference/functions#err)\n  * [filter‚Äã](https://docs.stacks.co/reference/functions#filter)\n  * [fold‚Äã](https://docs.stacks.co/reference/functions#fold)\n  * [from-consensus-buff?‚Äã](https://docs.stacks.co/reference/functions#from-consensus-buff)\n  * [ft-burn?‚Äã](https://docs.stacks.co/reference/functions#ft-burn)\n  * [ft-get-balance‚Äã](https://docs.stacks.co/reference/functions#ft-get-balance)\n  * [ft-get-supply‚Äã](https://docs.stacks.co/reference/functions#ft-get-supply)\n  * [ft-mint?‚Äã](https://docs.stacks.co/reference/functions#ft-mint)\n  * [ft-transfer?‚Äã](https://docs.stacks.co/reference/functions#ft-transfer)\n  * [get‚Äã](https://docs.stacks.co/reference/functions#get)\n  * [get-block-info?‚Äã](https://docs.stacks.co/reference/functions#get-block-info)\n  * [get-burn-block-info?‚Äã](https://docs.stacks.co/reference/functions#get-burn-block-info)\n  * [get-stacks-block-info?](https://docs.stacks.co/reference/functions#get-stacks-block-info)\n  * [get-tenure-info?](https://docs.stacks.co/reference/functions#get-tenure-info)\n  * [hash160‚Äã](https://docs.stacks.co/reference/functions#hash160)\n  * [if‚Äã](https://docs.stacks.co/reference/functions#if)\n  * [impl-trait‚Äã](https://docs.stacks.co/reference/functions#impl-trait)\n  * [index-of‚Äã](https://docs.stacks.co/reference/functions#index-of)\n  * [index-of?‚Äã](https://docs.stacks.co/reference/functions#index-of-1)\n  * [int-to-ascii‚Äã](https://docs.stacks.co/reference/functions#int-to-ascii)\n  * [int-to-utf8‚Äã](https://docs.stacks.co/reference/functions#int-to-utf8)\n  * [is-eq‚Äã](https://docs.stacks.co/reference/functions#is-eq)\n  * [is-err‚Äã](https://docs.stacks.co/reference/functions#is-err)\n  * [is-none‚Äã](https://docs.stacks.co/reference/functions#is-none)\n  * [is-ok‚Äã](https://docs.stacks.co/reference/functions#is-ok)\n  * [is-some‚Äã](https://docs.stacks.co/reference/functions#is-some)\n  * [is-standard‚Äã](https://docs.stacks.co/reference/functions#is-standard)\n  * [keccak256‚Äã](https://docs.stacks.co/reference/functions#keccak256)\n  * [len‚Äã](https://docs.stacks.co/reference/functions#len)\n  * [let‚Äã](https://docs.stacks.co/reference/functions#let)\n  * [list‚Äã](https://docs.stacks.co/reference/functions#list)\n  * [log2‚Äã](https://docs.stacks.co/reference/functions#log2)\n  * [map‚Äã](https://docs.stacks.co/reference/functions#map)\n  * [map-delete‚Äã](https://docs.stacks.co/reference/functions#map-delete)\n  * [map-get?‚Äã](https://docs.stacks.co/reference/functions#map-get)\n  * [map-insert‚Äã](https://docs.stacks.co/reference/functions#map-insert)\n  * [map-set‚Äã](https://docs.stacks.co/reference/functions#map-set)\n  * [match‚Äã](https://docs.stacks.co/reference/functions#match)\n  * [merge‚Äã](https://docs.stacks.co/reference/functions#merge)\n  * [mod‚Äã](https://docs.stacks.co/reference/functions#mod)\n  * [nft-burn?‚Äã](https://docs.stacks.co/reference/functions#nft-burn)\n  * [nft-get-owner?‚Äã](https://docs.stacks.co/reference/functions#nft-get-owner)\n  * [nft-mint?‚Äã](https://docs.stacks.co/reference/functions#nft-mint)\n  * [nft-transfer?‚Äã](https://docs.stacks.co/reference/functions#nft-transfer)\n  * [not‚Äã](https://docs.stacks.co/reference/functions#not)\n  * [ok‚Äã](https://docs.stacks.co/reference/functions#ok)\n  * [or‚Äã](https://docs.stacks.co/reference/functions#or)\n  * [pow‚Äã](https://docs.stacks.co/reference/functions#pow)\n  * [principal-construct?‚Äã](https://docs.stacks.co/reference/functions#principal-construct)\n  * [principal-destruct?‚Äã](https://docs.stacks.co/reference/functions#principal-destruct)\n  * [principal-of?‚Äã](https://docs.stacks.co/reference/functions#principal-of)\n  * [print‚Äã](https://docs.stacks.co/reference/functions#print)\n  * [replace-at?‚Äã](https://docs.stacks.co/reference/functions#replace-at)\n  * [secp256k1-recover?‚Äã](https://docs.stacks.co/reference/functions#secp256k1-recover)\n  * [secp256k1-verify‚Äã](https://docs.stacks.co/reference/functions#secp256k1-verify)\n  * [sha256‚Äã](https://docs.stacks.co/reference/functions#sha256)\n  * [sha512‚Äã](https://docs.stacks.co/reference/functions#sha512)\n  * [sha512/256‚Äã](https://docs.stacks.co/reference/functions#sha512-256)\n  * [slice?‚Äã](https://docs.stacks.co/reference/functions#slice)\n  * [some‚Äã](https://docs.stacks.co/reference/functions#some)\n  * [sqrti‚Äã](https://docs.stacks.co/reference/functions#sqrti)\n  * [string-to-int?‚Äã](https://docs.stacks.co/reference/functions#string-to-int)\n  * [string-to-uint?‚Äã](https://docs.stacks.co/reference/functions#string-to-uint)\n  * [stx-account‚Äã](https://docs.stacks.co/reference/functions#stx-account)\n  * [stx-burn?‚Äã](https://docs.stacks.co/reference/functions#stx-burn)\n  * [stx-get-balance‚Äã](https://docs.stacks.co/reference/functions#stx-get-balance)\n  * [stx-transfer-memo?‚Äã](https://docs.stacks.co/reference/functions#stx-transfer-memo)\n  * [stx-transfer?‚Äã](https://docs.stacks.co/reference/functions#stx-transfer)\n  * [to-consensus-buff?‚Äã](https://docs.stacks.co/reference/functions#to-consensus-buff)\n  * [to-int‚Äã](https://docs.stacks.co/reference/functions#to-int)\n  * [to-uint‚Äã](https://docs.stacks.co/reference/functions#to-uint)\n  * [try!](https://docs.stacks.co/reference/functions#try)\n  * [tuple‚Äã](https://docs.stacks.co/reference/functions#tuple)\n  * [unwrap!](https://docs.stacks.co/reference/functions#unwrap)\n  * [unwrap-err!](https://docs.stacks.co/reference/functions#unwrap-err)\n  * [unwrap-err-panic‚Äã](https://docs.stacks.co/reference/functions#unwrap-err-panic)\n  * [unwrap-panic‚Äã](https://docs.stacks.co/reference/functions#unwrap-panic)\n  * [use-trait‚Äã](https://docs.stacks.co/reference/functions#use-trait)\n  * [var-get‚Äã](https://docs.stacks.co/reference/functions#var-get)\n  * [var-set‚Äã](https://docs.stacks.co/reference/functions#var-set)\n  * [xor‚Äã](https://docs.stacks.co/reference/functions#xor)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# Clarity Functions\n## \n[](https://docs.stacks.co/reference/functions#multiply)\n* (multiply)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(* i1 i2...)`\n**description:**\nMultiplies a variable number of integer inputs and returns the result. In the event of an _overflow_ , throws a runtime error.\n**example:**\nCopy```\n(* 2 3) ;; Returns 6\n(* 5 2) ;; Returns 10\n(* 2 2 2) ;; Returns 8\n```\n\n## \n[](https://docs.stacks.co/reference/functions#add)\n+ (add)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(+ i1 i2...)`\n**description:**\nAdds a variable number of integer inputs and returns the result. In the event of an _overflow_ , throws a runtime error.\n**example:**\nCopy```\n(+ 1 2 3) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#subtract)\n- (subtract)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(- i1 i2...)`\n**description:**\nSubtracts a variable number of integer inputs and returns the result. In the event of an _underflow_ , throws a runtime error.\n**example:**\nCopy```\n(- 2 1 1) ;; Returns 0\n(- 0 3) ;; Returns -3\n```\n\n## \n[](https://docs.stacks.co/reference/functions#divide)\n/ (divide)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(/ i1 i2...)`\n**description:**\nInteger divides a variable number of integer inputs and returns the result. In the event of division by zero, throws a runtime error.\n**example:**\nCopy```\n(/ 2 3) ;; Returns 0\n(/ 5 2) ;; Returns 2\n(/ 4 2 2) ;; Returns 1\n```\n\n## \n[](https://docs.stacks.co/reference/functions#less-than-less-than)\n< (less than)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(< i1 i2)`\n**description:**\nCompares two integers, returning `true` if `i1` is less than `i2` and `false` otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `<`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `<`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(< 1 2) ;; Returns true\n(< 5 2) ;; Returns false\n(< \"aaa\" \"baa\") ;; Returns true\n(< \"aa\" \"aaa\") ;; Returns true\n(< 0x01 0x02) ;; Returns true\n(< 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#less-than-less-than-or-equal)\n<= (less than or equal)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(<= i1 i2)`\n**description:**\nCompares two integers, returning true if `i1` is less than or equal to `i2` and `false` otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `<=`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `<=`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(<= 1 1) ;; Returns true\n(<= 5 2) ;; Returns false\n(<= \"aaa\" \"baa\") ;; Returns true\n(<= \"aa\" \"aaa\") ;; Returns true\n(<= 0x01 0x02) ;; Returns true\n(<= 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#greater-than-greater-than)\n> (greater than)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(> i1 i2)`\n**description:**\nCompares two integers, returning `true` if `i1` is greater than `i2` and false otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `>`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `>`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(> 1 2) ;; Returns false\n(> 5 2) ;; Returns true\n(> \"baa\" \"aaa\") ;; Returns true\n(> \"aaa\" \"aa\") ;; Returns true\n(> 0x02 0x01) ;; Returns true\n(> 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#greater-than-greater-than-or-equal)\n>= (greater than or equal)‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `bool`\n**signature:** `(>= i1 i2)`\n**description:**\nCompares two integers, returning `true` if `i1` is greater than or equal to `i2` and `false` otherwise. i1 and i2 must be of the same type. Starting with Stacks 1.0, the `>=`-comparable types are `int` and `uint`. Starting with Stacks 2.1, the `>=`-comparable types are expanded to include `string-ascii`, `string-utf8` and `buff`.\n**example:**\nCopy```\n(>= 1 1) ;; Returns true\n(>= 5 2) ;; Returns true\n(>= \"baa\" \"aaa\") ;; Returns true\n(>= \"aaa\" \"aa\") ;; Returns true\n(>= 0x02 0x01) ;; Returns true\n(>= 5 u2) ;; Throws type error\n```\n\n## \n[](https://docs.stacks.co/reference/functions#and)\nand‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool, ...`\n**output:** `bool`\n**signature:** `(and b1 b2 ...)`\n**description:**\nReturns `true` if all boolean inputs are `true`. Importantly, the supplied arguments are evaluated in-order and lazily. Lazy evaluation means that if one of the arguments returns `false`, the function short-circuits, and no subsequent arguments are evaluated.\n**example:**\nCopy```\n(and true false) ;; Returns false\n(and (is-eq (+ 1 2) 1) (is-eq 4 4)) ;; Returns false\n(and (is-eq (+ 1 2) 3) (is-eq 4 4)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#append)\nappend‚Äã\nIntroduced in: **Clarity 1**\n**input:** `list A, A`\n**output:** `list`\n**signature:** `(append (list 1 2 3 4) 5)`\n**description:**\nThe `append` function takes a list and another value with the same entry type, and outputs a list of the same type with max_len += 1.\n**example:**\nCopy```\n(append (list 1 2 3 4) 5) ;; Returns (1 2 3 4 5)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#as-contract)\nas-contract‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `A`\n**signature:** `(as-contract expr)`\n**description:**\nThe `as-contract` function switches the current context's `tx-sender` value to the _contract's_ principal and executes `expr` with that context. It returns the resulting value of `expr`.\n**example:**\nCopy```\n(as-contract tx-sender) ;; Returns S1G2081040G2081040G2081040G208105NK8PE5.docs-test\n```\n\n## \n[](https://docs.stacks.co/reference/functions#as-max-len)\nas-max-len?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, uint`\n**output:** `(optional sequence_A)`\n**signature:** `(as-max-len? sequence max_length)`\n**description:**\nThe `as-max-len?` function takes a sequence argument and a uint-valued, literal length argument. The function returns an optional type. If the input sequence length is less than or equal to the supplied max_length, this returns `(some sequence)`, otherwise it returns `none`. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`.\n**example:**\nCopy```\n(as-max-len? (list 2 2 2) u3) ;; Returns (some (2 2 2))\n(as-max-len? (list 1 2 3) u2) ;; Returns none\n(as-max-len? \"hello\" u10) ;; Returns (some \"hello\")\n(as-max-len? 0x010203 u10) ;; Returns (some 0x010203)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#asserts)\nasserts!\nIntroduced in: **Clarity 1**\n**input:** `bool, C`\n**output:** `bool`\n**signature:** `(asserts! bool-expr thrown-value)`\n**description:**\nThe `asserts!` function admits a boolean argument and asserts its evaluation: if bool-expr is `true`, `asserts!` returns `true` and proceeds in the program execution. If the supplied argument is returning a false value, `asserts!` _returns_ `thrown-value` and exits the current control-flow.\n**example:**\nCopy```\n(asserts! (is-eq 1 1) (err 1)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#at-block)\nat-block‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 32), A`\n**output:** `A`\n**signature:** `(at-block id-block-hash expr)`\n**description:**\nThe `at-block` function evaluates the expression `expr` _as if_ it were evaluated at the end of the block indicated by the _block-hash_ argument. The `expr` closure must be read-only.\nNote: The block identifying hash must be a hash returned by the `id-header-hash` block information property. This hash uniquely identifies Stacks blocks and is unique across Stacks forks. While the hash returned by `header-hash` is unique within the context of a single fork, it is not unique across Stacks forks.\nThe function returns the result of evaluating `expr`.\n**example:**\nCopy```\n(define-data-var data int 1)\n(at-block 0x0000000000000000000000000000000000000000000000000000000000000000 block-height) ;; Returns u0\n(at-block (get-block-info? id-header-hash 0) (var-get data)) ;; Throws NoSuchDataVariable because `data` wasn't initialized at block height 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#begin)\nbegin‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AnyType, ... A`\n**output:** `A`\n**signature:** `(begin expr1 expr2 expr3 ... expr-last)`\n**description:**\nThe `begin` function evaluates each of its input expressions, returning the return value of the last such expression. Note: intermediary statements returning a response type must be checked.\n**example:**\nCopy```\n(begin (+ 1 2) 4 5) ;; Returns 5\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-and)\nbit-and‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(bit-and i1 i2...)`\n**description:**\nReturns the result of bitwise and'ing a variable number of integer inputs.\n**example:**\nCopy```\n(bit-and 24 16) ;; Returns 16\n(bit-and 28 24 -1) ;; Returns 24\n(bit-and u24 u16) ;; Returns u16\n(bit-and -128 -64) ;; Returns -128\n(bit-and 28 24 -1) ;; Returns 24\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-not)\nbit-not‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int | uint`\n**output:** `int | uint`\n**signature:** `(bit-not i1)`\n**description:**\nReturns the one's complement (sometimes also called the bitwise compliment or not operator) of `i1`, effectively reversing the bits in `i1`. In other words, every bit that is `1` in √¨1`will be`0`in the result. Conversely, every bit that is`0`in`i1`will be`1` in the result.\n**example:**\nCopy```\n(bit-not 3) ;; Returns -4\n(bit-not u128) ;; Returns u340282366920938463463374607431768211327\n(bit-not 128) ;; Returns -129\n(bit-not -128) ;; Returns 127\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-or)\nbit-or‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(bit-or i1 i2...)`\n**description:**\nReturns the result of bitwise inclusive or'ing a variable number of integer inputs.\n**example:**\nCopy```\n(bit-or 4 8) ;; Returns 12\n(bit-or 1 2 4) ;; Returns 7\n(bit-or 64 -32 -16) ;; Returns -16\n(bit-or u2 u4 u32) ;; Returns u38\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-shift-left)\nbit-shift-left‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, uint | uint, uint`\n**output:** `int | uint`\n**signature:** `(bit-shift-left i1 shamt)`\n**description:**\nShifts all the bits in `i1` to the left by the number of places specified in `shamt` modulo 128 (the bit width of Clarity integers).\nNote that there is a deliberate choice made to ignore arithmetic overflow for this operation. In use cases where overflow should be detected, developers should use `*`, `/`, and `pow` instead of the shift operators.\n**example:**\nCopy```\n(bit-shift-left 2 u1) ;; Returns 4\n(bit-shift-left 16 u2) ;; Returns 64\n(bit-shift-left -64 u1) ;; Returns -128\n(bit-shift-left u4 u2) ;; Returns u16\n(bit-shift-left 123 u9999999999) ;; Returns -170141183460469231731687303715884105728\n(bit-shift-left u123 u9999999999) ;; Returns u170141183460469231731687303715884105728\n(bit-shift-left -1 u7) ;; Returns -128\n(bit-shift-left -1 u128) ;; Returns -1\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-shift-right)\nbit-shift-right‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, uint | uint, uint`\n**output:** `int | uint`\n**signature:** `(bit-shift-right i1 shamt)`\n**description:**\nShifts all the bits in `i1` to the right by the number of places specified in `shamt` modulo 128 (the bit width of Clarity integers). When `i1` is a `uint` (unsigned), new bits are filled with zeros. When `i1` is an `int` (signed), the sign is preserved, meaning that new bits are filled with the value of the previous sign-bit.\nNote that there is a deliberate choice made to ignore arithmetic overflow for this operation. In use cases where overflow should be detected, developers should use `*`, `/`, and `pow` instead of the shift operators.\n**example:**\nCopy```\n(bit-shift-right 2 u1) ;; Returns 1\n(bit-shift-right 128 u2) ;; Returns 32\n(bit-shift-right -64 u1) ;; Returns -32\n(bit-shift-right u128 u2) ;; Returns u32\n(bit-shift-right 123 u9999999999) ;; Returns 0\n(bit-shift-right u123 u9999999999) ;; Returns u0\n(bit-shift-right -128 u7) ;; Returns -1\n(bit-shift-right -256 u1) ;; Returns -128\n(bit-shift-right 5 u2) ;; Returns 1\n(bit-shift-right -5 u2) ;; Returns -2\n```\n\n## \n[](https://docs.stacks.co/reference/functions#bit-xor)\nbit-xor‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int, ... | uint, ...`\n**output:** `int | uint`\n**signature:** `(bit-xor i1 i2...)`\n**description:**\nReturns the result of bitwise exclusive or'ing a variable number of integer inputs.\n**example:**\nCopy```\n(bit-xor 1 2) ;; Returns 3\n(bit-xor 120 280) ;; Returns 352\n(bit-xor -128 64) ;; Returns -64\n(bit-xor u24 u4) ;; Returns u28\n(bit-xor 1 2 4 -1) ;; Returns -8\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-int-be)\nbuff-to-int-be‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `int`\n**signature:** `(buff-to-int-be (buff 16))`\n**description:**\nConverts a byte buffer to a signed integer use a big-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a big-endian encoding, the input behaves as if it is zero-padded on the _left_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-int-be 0x01) ;; Returns 1\n(buff-to-int-be 0x00000000000000000000000000000001) ;; Returns 1\n(buff-to-int-be 0xffffffffffffffffffffffffffffffff) ;; Returns -1\n(buff-to-int-be 0x) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-int-le)\nbuff-to-int-le‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `int`\n**signature:** `(buff-to-int-le (buff 16))`\n**description:**\nConverts a byte buffer to a signed integer use a little-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a little-endian encoding, the input behaves as if it is zero-padded on the _right_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-int-le 0x01) ;; Returns 1\n(buff-to-int-le 0x01000000000000000000000000000000) ;; Returns 1\n(buff-to-int-le 0xffffffffffffffffffffffffffffffff) ;; Returns -1\n(buff-to-int-le 0x) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-uint-be)\nbuff-to-uint-be‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `uint`\n**signature:** `(buff-to-uint-be (buff 16))`\n**description:**\nConverts a byte buffer to an unsigned integer use a big-endian encoding. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a big-endian encoding, the input behaves as if it is zero-padded on the _left_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-uint-be 0x01) ;; Returns u1\n(buff-to-uint-be 0x00000000000000000000000000000001) ;; Returns u1\n(buff-to-uint-be 0xffffffffffffffffffffffffffffffff) ;; Returns u340282366920938463463374607431768211455\n(buff-to-uint-be 0x) ;; Returns u0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#buff-to-uint-le)\nbuff-to-uint-le‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 16)`\n**output:** `uint`\n**signature:** `(buff-to-uint-le (buff 16))`\n**description:**\nConverts a byte buffer to an unsigned integer use a little-endian encoding.. The byte buffer can be up to 16 bytes in length. If there are fewer than 16 bytes, as this function uses a little-endian encoding, the input behaves as if it is zero-padded on the _right_.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(buff-to-uint-le 0x01) ;; Returns u1\n(buff-to-uint-le 0x01000000000000000000000000000000) ;; Returns u1\n(buff-to-uint-le 0xffffffffffffffffffffffffffffffff) ;; Returns u340282366920938463463374607431768211455\n(buff-to-uint-le 0x) ;; Returns u0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#concat)\nconcat‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, sequence_A`\n**output:** `sequence_A`\n**signature:** `(concat sequence1 sequence2)`\n**description:**\nThe `concat` function takes two sequences of the same type, and returns a concatenated sequence of the same type, with the resulting sequence_len = sequence1_len + sequence2_len. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`.\n**example:**\nCopy```\n(concat (list 1 2) (list 3 4)) ;; Returns (1 2 3 4)\n(concat \"hello \" \"world\") ;; Returns \"hello world\"\n(concat 0x0102 0x0304) ;; Returns 0x01020304\n```\n\n## \n[](https://docs.stacks.co/reference/functions#contract-call)\ncontract-call?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `ContractName, PublicFunctionName, Arg0, ...`\n**output:** `(response A B)`\n**signature:** `(contract-call? .contract-name function-name arg0 arg1 ...)`\n**description:**\nThe `contract-call?` function executes the given public function of the given contract. You _may not_ use this function to call a public function defined in the current contract. If the public function returns _err_ , any database changes resulting from calling `contract-call?` are aborted. If the function returns _ok_ , database changes occurred.\n**example:**\nCopy```\n;; instantiate the sample-contracts/tokens.clar contract first\n(as-contract (contract-call? .tokens mint! u19)) ;; Returns (ok u19)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#contract-of)\ncontract-of‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Trait`\n**output:** `principal`\n**signature:** `(contract-of .contract-name)`\n**description:**\nThe `contract-of` function returns the principal of the contract implementing the trait.\n**example:**\nCopy```\n(use-trait token-a-trait 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait)\n(define-public (forward-get-balance (user principal) (contract <token-a-trait>))\n  (begin    \n    (ok (contract-of contract)))) ;; returns the principal of the contract implementing <token-a-trait>\n```\n\n## \n[](https://docs.stacks.co/reference/functions#default-to)\ndefault-to‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A, (optional A)`\n**output:** `A`\n**signature:** `(default-to default-value option-value)`\n**description:**\nThe `default-to` function attempts to 'unpack' the second argument: if the argument is a `(some ...)` option, it returns the inner value of the option. If the second argument is a `(none)` value, `default-to` it returns the value of `default-value`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(default-to 0 (get id (map-get? names-map (tuple (name \"blockstack\"))))) ;; Returns 1337\n(default-to 0 (get id (map-get? names-map (tuple (name \"non-existant\"))))) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-constant)\ndefine-constant‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-constant name expression)`\n**description:**\n`define-constant` is used to define a private constant value in a smart contract. The expression passed into the definition is evaluated at contract launch, in the order that it is supplied in the contract. This can lead to undefined function or undefined variable errors in the event that a function or variable used in the expression has not been defined before the constant.\nLike other kinds of definition statements, `define-constant` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-constant four (+ 2 2))\n(+ 4 four) ;; Returns 8\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-data-var)\ndefine-data-var‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, TypeDefinition, Value`\n**output:** `Not Applicable`\n**signature:** `(define-data-var var-name type value)`\n**description:**\n`define-data-var` is used to define a new persisted variable for use in a smart contract. Such variable are only modifiable by the current smart contract.\nPersisted variable are defined with a type and a value.\nLike other kinds of definition statements, `define-data-var` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-data-var size int 0)\n(define-private (set-size (value int))  \n  (var-set size value))\n(set-size 1)\n(set-size 2)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-fungible-token)\ndefine-fungible-token‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, <uint>`\n**output:** `Not Applicable`\n**signature:** `(define-fungible-token token-name <total-supply>)`\n**description:**\n`define-fungible-token` is used to define a new fungible token class for use in the current contract.\nThe second argument, if supplied, defines the total supply of the fungible token. This ensures that all calls to the `ft-mint?` function will never be able to create more than `total-supply` tokens. If any such call were to increase the total supply of tokens passed that amount, that invocation of `ft-mint?` will result in a runtime error and abort.\nLike other kinds of definition statements, `define-fungible-token` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nTokens defined using `define-fungible-token` may be used in `ft-transfer?`, `ft-mint?`, and `ft-get-balance` functions\n**example:**\nCopy```\n(define-fungible-token stacks)\n(define-fungible-token limited-supply-stacks u100)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-map)\ndefine-map‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, TypeDefinition, TypeDefinition`\n**output:** `Not Applicable`\n**signature:** `(define-map map-name key-type value-type)`\n**description:**\n`define-map` is used to define a new datamap for use in a smart contract. Such maps are only modifiable by the current smart contract.\nMaps are defined with a key type and value type, often these types are tuple types.\nLike other kinds of definition statements, `define-map` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-map squares { x: int } { square: int })\n(define-private (add-entry (x int)) \n  (map-insert squares { x: 2 } { square: (* x x) }))\n(add-entry 1)\n(add-entry 2)\n(add-entry 3)\n(add-entry 4)\n(add-entry 5)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-non-fungible-token)\ndefine-non-fungible-token‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, TypeSignature`\n**output:** `Not Applicable`\n**signature:** `(define-non-fungible-token asset-name asset-identifier-type)`\n**description:**\n`define-non-fungible-token` is used to define a new non-fungible token class for use in the current contract. Individual assets are identified by their asset identifier, which must be of the type `asset-identifier-type`. Asset identifiers are _unique_ identifiers.\nLike other kinds of definition statements, `define-non-fungible-token` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nAssets defined using `define-non-fungible-token` may be used in `nft-transfer?`, `nft-mint?`, and `nft-get-owner?` functions\n**example:**\nCopy```\n(define-non-fungible-token names (buff 50))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-private)\ndefine-private‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-private (function-name (arg-name-0 arg-type-0) (arg-name-1 arg-type-1) ...) function-body)`\n**description:**\n`define-private` is used to define _private_ functions for a smart contract. Private functions may not be called from other smart contracts, nor may they be invoked directly by users. Instead, these functions may only be invoked by other functions defined in the same smart contract.\nLike other kinds of definition statements, `define-private` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nPrivate functions may return any type.\n**example:**\nCopy```\n(define-private (max-of (i1 int) (i2 int))  \n  (if (> i1 i2)\n    i1      \n    i2))\n(max-of 4 6) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-public)\ndefine-public‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-public (function-name (arg-name-0 arg-type-0) (arg-name-1 arg-type-1) ...) function-body)`\n**description:**\n`define-public` is used to define a _public_ function and transaction for a smart contract. Public functions are callable from other smart contracts and may be invoked directly by users by submitting a transaction to the Stacks blockchain.\nLike other kinds of definition statements, `define-public` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nPublic functions _must_ return a ResponseType (using either `ok` or `err`). Any datamap modifications performed by a public function is aborted if the function returns an `err` type. Public functions may be invoked by other contracts via `contract-call?`.\n**example:**\nCopy```\n(define-public (hello-world (input int))  \n  (begin \n    (print (+ 2 input))\n    (ok input)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-read-only)\ndefine-read-only‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MethodSignature, MethodBody`\n**output:** `Not Applicable`\n**signature:** `(define-read-only (function-name (arg-name-0 arg-type-0) (arg-name-1 arg-type-1) ...) function-body)`\n**description:**\n`define-read-only` is used to define a _public read-only_ function for a smart contract. Such functions are callable from other smart contracts.\nLike other kinds of definition statements, `define-read-only` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\nRead-only functions may return any type. However, read-only functions may not perform any datamap modifications, or call any functions which perform such modifications. This is enforced both during type checks and during the execution of the function. Public read-only functions may be invoked by other contracts via `contract-call?`.\n**example:**\nCopy```\n(define-read-only (just-return-one-hundred)  \n  (* 10 10))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#define-trait)\ndefine-trait‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, [MethodSignature]`\n**output:** `Not Applicable`\n**signature:** `(define-trait trait-name ((func1-name (arg1-type arg2-type ...) (return-type))))`\n**description:**\n`define-trait` is used to define a new trait definition for use in a smart contract. Other contracts can implement a given trait and then have their contract identifier being passed as a function argument in order to be called dynamically with `contract-call?`.\nTraits are defined with a name, and a list functions, defined with a name, a list of argument types, and return type.\nIn Clarity 1, a trait type can be used to specify the type of a function parameter. A parameter with a trait type can be used as the target of a dynamic `contract-call?`. A principal literal (e.g. `ST1PQHQKV0RJXZFY1DGX8MNSNYVE3VGZJSRTPGZGM.foo`) may be passed as a trait parameter if the specified contract implements all of the functions specified by the trait. A trait value (originating from a parameter with trait type) may also be passed as a trait parameter if the types are the same.\nBeginning in Clarity 2, a trait can be used in all of the same ways that a built-in type can be used, except that it cannot be stored in a data var or map, since this would inhibit static analysis. This means that a trait type can be embedded in a compound type (e.g. `(optional <my-trait>)` or `(list 4 <my-trait>)`) and a trait value can be bound to a variable in a `let` or `match` expression. In addition to the principal literal and trait value with matching type allowed in Clarity 1, Clarity 2 also supports implicit casting from a compatible trait, meaning that a value of type `trait-a` may be passed to a parameter with type `trait-b` if `trait-a` includes all of the requirements of `trait-b` (and optionally additional functions).\nLike other kinds of definition statements, `define-trait` may only be used at the top level of a smart contract definition (i.e., you cannot put a define statement in the middle of a function body).\n**example:**\nCopy```\n(define-trait token-trait    \n  ((transfer? (principal principal uint) (response uint uint)) \n  (get-balance (principal) (response uint uint))))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#element-at)\nelement-at‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, uint`\n**output:** `(optional A)`\n**signature:** `(element-at? sequence index)`\n**description:**\nThe `element-at?` function returns the element at `index` in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. In Clarity1, `element-at` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(element-at? \"blockstack\" u5) ;; Returns (some \"s\")\n(element-at? (list 1 2 3 4 5) u5) ;; Returns none\n(element-at? (list 1 2 3 4 5) (+ u1 u2)) ;; Returns (some 4)\n(element-at? \"abcd\" u1) ;; Returns (some \"b\")\n(element-at? 0xfb01 u1) ;; Returns (some 0x01)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#element-at-1)\nelement-at?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, uint`\n**output:** `(optional A)`\n**signature:** `(element-at? sequence index)`\n**description:**\nThe `element-at?` function returns the element at `index` in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. In Clarity1, `element-at` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(element-at? \"blockstack\" u5) ;; Returns (some \"s\")\n(element-at? (list 1 2 3 4 5) u5) ;; Returns none\n(element-at? (list 1 2 3 4 5) (+ u1 u2)) ;; Returns (some 4)\n(element-at? \"abcd\" u1) ;; Returns (some \"b\")\n(element-at? 0xfb01 u1) ;; Returns (some 0x01)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#err)\nerr‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `(response A B)`\n**signature:** `(err value)`\n**description:**\nThe `err` function constructs a response type from the input value. Use `err` for creating return values in public functions. An _err_ value indicates that any database changes during the processing of the function should be rolled back.\n**example:**\nCopy```\n(err true) ;; Returns (err true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#filter)\nfilter‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Function(A) -> bool, sequence_A`\n**output:** `sequence_A`\n**signature:** `(filter func sequence)`\n**description:**\nThe `filter` function applies the input function `func` to each element of the input sequence, and returns the same sequence with any elements removed for which `func` returned `false`. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. The `func` argument must be a literal function name.\n**example:**\nCopy```\n(filter not (list true false true false)) ;; Returns (false false)\n(define-private (is-a (char (string-utf8 1))) \n  (is-eq char u\"a\"))\n(filter is-a u\"acabd\") ;; Returns u\"aa\"\n(define-private (is-zero (char (buff 1)))\n  (is-eq char 0x00))\n(filter is-zero 0x00010002) ;; Returns 0x0000\n```\n\n## \n[](https://docs.stacks.co/reference/functions#fold)\nfold‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Function(A, B) -> B, sequence_A, B`\n**output:** `B`\n**signature:** `(fold func sequence_A initial_B)`\n**description:**\nThe `fold` function condenses `sequence_A` into a value of type `B` by recursively applies the function `func` to each element of the input sequence _and_ the output of a previous application of `func`.\n`fold` uses `initial_B` in the initial application of `func`, along with the first element of `sequence_A`. The resulting value of type `B` is used for the next application of `func`, along with the next element of `sequence_A` and so on. `fold` returns the last value of type `B` returned by these successive applications `func`.\nApplicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. The `func` argument must be a literal function name.\n**example:**\nCopy```\n(fold * (list 2 2 2) 1) ;; Returns 8\n(fold * (list 2 2 2) 0) ;; Returns 0\n;; calculates (- 11 (- 7 (- 3 2)))\n(fold - (list 3 7 11) 2) ;; Returns 5 \n(define-private (concat-string (a (string-ascii 20)) (b (string-ascii 20))) \n  (unwrap-panic (as-max-len? (concat a b) u20)))\n(fold concat-string \"cdef\" \"ab\")   ;; Returns \"fedcab\"\n(fold concat-string (list \"cd\" \"ef\") \"ab\")   ;; Returns \"efcdab\"\n(define-private (concat-buff (a (buff 20)) (b (buff 20)))\n  (unwrap-panic (as-max-len? (concat a b) u20)))\n(fold concat-buff 0x03040506 0x0102)   ;; Returns 0x060504030102\n```\n\n## \n[](https://docs.stacks.co/reference/functions#from-consensus-buff)\nfrom-consensus-buff?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `type-signature(t), buff`\n**output:** `(optional t)`\n**signature:** `(from-consensus-buff? type-signature buffer)`\n**description:**\n`from-consensus-buff?` is a special function that will deserialize a buffer into a Clarity value, using the SIP-005 serialization of the Clarity value. The type that `from-consensus-buff?` tries to deserialize into is provided by the first parameter to the function. If it fails to deserialize the type, the method returns `none`.\n**example:**\nCopy```\n(from-consensus-buff? int 0x0000000000000000000000000000000001) ;; Returns (some 1)\n(from-consensus-buff? uint 0x0000000000000000000000000000000001) ;; Returns none \n(from-consensus-buff? uint 0x0100000000000000000000000000000001) ;; Returns (some u1)\n(from-consensus-buff? bool 0x0000000000000000000000000000000001) ;; Returns none\n(from-consensus-buff? bool 0x03) ;; Returns (some true)\n(from-consensus-buff? bool 0x04) ;; Returns (some false)\n(from-consensus-buff? principal 0x051fa46ff88886c2ef9762d970b4d2c63678835bd39d) ;; Returns (some SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(from-consensus-buff? { abc: int, def: int } 0x0c00000002036162630000000000000000000000000000000003036465660000000000000000000000000000000004) ;; Returns (some (tuple (abc 3) (def 4)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-burn)\nft-burn?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, uint, principal`\n**output:** `(response bool uint)`\n**signature:** `(ft-burn? token-name amount sender)`\n**description:**\n`ft-burn?` is used to decrease the token balance for the `sender` principal for a token type defined using `define-fungible-token`. The decreased token balance is _not_ transferred to another principal, but rather destroyed, reducing the circulating supply.\nOn a successful burn, it returns `(ok true)`. In the event of an unsuccessful burn it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to burn this amount or the amount specified is not positive\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(ft-burn? stackaroo u50 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-get-balance)\nft-get-balance‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, principal`\n**output:** `uint`\n**signature:** `(ft-get-balance token-name principal)`\n**description:**\n`ft-get-balance` returns `token-name` balance of the principal `principal`. The token type must have been defined using `define-fungible-token`.\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(ft-get-balance stackaroo 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns u100\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-get-supply)\nft-get-supply‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName`\n**output:** `uint`\n**signature:** `(ft-get-supply token-name)`\n**description:**\n`ft-get-balance` returns `token-name` circulating supply. The token type must have been defined using `define-fungible-token`.\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(ft-get-supply stackaroo) ;; Returns u100\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-mint)\nft-mint?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, uint, principal`\n**output:** `(response bool uint)`\n**signature:** `(ft-mint? token-name amount recipient)`\n**description:**\n`ft-mint?` is used to increase the token balance for the `recipient` principal for a token type defined using `define-fungible-token`. The increased token balance is _not_ transfered from another principal, but rather minted.\nIf a non-positive amount is provided to mint, this function returns `(err 1)`. Otherwise, on successfully mint, it returns `(ok true)`.\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ft-transfer)\nft-transfer?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TokenName, uint, principal, principal`\n**output:** `(response bool uint)`\n**signature:** `(ft-transfer? token-name amount sender recipient)`\n**description:**\n`ft-transfer?` is used to increase the token balance for the `recipient` principal for a token type defined using `define-fungible-token` by debiting the `sender` principal. In contrast to `stx-transfer?`, any user can transfer the assets. When used, relevant guards need to be added.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to transfer `(err u2)` -- `sender` and `recipient` are the same principal `(err u3)` -- amount to send is non-positive\n**example:**\nCopy```\n(define-fungible-token stackaroo)\n(ft-mint? stackaroo u100 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(ft-transfer? stackaroo u50 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(ft-transfer? stackaroo u60 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (err u1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get)\nget‚Äã\nIntroduced in: **Clarity 1**\n**input:** `KeyName, (tuple) | (optional (tuple))`\n**output:** `A`\n**signature:** `(get key-name tuple)`\n**description:**\nThe `get` function fetches the value associated with a given key from the supplied typed tuple. If an `Optional` value is supplied as the inputted tuple, `get` returns an `Optional` type of the specified key in the tuple. If the supplied option is a `(none)` option, get returns `(none)`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(get id (tuple (name \"blockstack\") (id 1337))) ;; Returns 1337\n(get id (map-get? names-map (tuple (name \"blockstack\")))) ;; Returns (some 1337)\n(get id (map-get? names-map (tuple (name \"non-existent\")))) ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-block-info)\nget-block-info?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `BlockInfoPropertyName, uint`\n**output:** `(optional buff) | (optional uint)`\n**signature:** `(get-block-info? prop-name block-height)`\n**description:** In Clarity 3, `get-block-info?` is removed. In its place, `get-stacks-block-info?` can be used to retrieve information about a Stacks block and `get-tenure-info?` can be used to get information pertaining to the tenure. The `get-block-info?` function fetches data for a block of the given _Stacks_ block height. The value and type returned are determined by the specified `BlockInfoPropertyName`. If the provided `block-height` does not correspond to an existing block prior to the current block, the function returns `none`. The currently available property names are as follows:\n  * `burnchain-header-hash`: This property returns a `(buff 32)` value containing the header hash of the burnchain (Bitcoin) block that selected the Stacks block at the given Stacks chain height.\n  * `id-header-hash`: This property returns a `(buff 32)` value containing the _index block hash_ of a Stacks block. This hash is globally unique, and is derived from the block hash and the history of accepted PoX operations. This is also the block hash value you would pass into `(at-block)`.\n  * `header-hash`: This property returns a `(buff 32)` value containing the header hash of a Stacks block, given a Stacks chain height. *_WARNING_ this hash is not guaranteed to be globally unique, since the same Stacks block can be mined in different PoX forks. If you need global uniqueness, you should use `id-header-hash`.\n  * `miner-address`: This property returns a `principal` value corresponding to the miner of the given block. **WARNING** In Stacks 2.1, this is not guaranteed to be the same `principal` that received the block reward, since Stacks 2.1 supports coinbase transactions that pay the reward to a contract address. This is merely the address of the `principal` that produced the block.\n  * `time`: This property returns a `uint` value of the block header time field. This is a Unix epoch timestamp in seconds which roughly corresponds to when the block was mined. This timestamp comes from the burnchain block. **Note** : this does not increase monotonically with each block and block times are accurate only to within two hours. See [BIP113](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki) for more information. For blocks mined after epoch 3.0, all Stacks blocks in one tenure will share the same timestamp. To get the Stacks block time for a block in epoch 3.0+, use `get-stacks-block-info?`.\n  * `vrf-seed`: This property returns a `(buff 32)` value of the VRF seed for the corresponding block.\n  * `block-reward`: This property returns a `uint` value for the total block reward of the indicated Stacks block. This value is only available once the reward for the block matures. That is, the latest `block-reward` value available is at least 101 Stacks blocks in the past (on mainnet). The reward includes the coinbase, the anchored block's transaction fees, and the shares of the confirmed and produced microblock transaction fees earned by this block's miner. Note that this value may be smaller than the Stacks coinbase at this height, because the miner may have been punished with a valid `PoisonMicroblock` transaction in the event that the miner published two or more microblock stream forks. Added in Clarity 2.\n  * `miner-spend-total`: This property returns a `uint` value for the total number of burnchain tokens (i.e. satoshis) spent by all miners trying to win this block. Added in Clarity 2.\n  * `miner-spend-winner`: This property returns a `uint` value for the number of burnchain tokens (i.e. satoshis) spent by the winning miner for this Stacks block. Note that this value is less than or equal to the value for `miner-spend-total` at the same block height. Added in Clarity 2.\n\n\n**example:**\nCopy```\n(get-block-info? time u0) ;; Returns (some u1557860301) \n(get-block-info? header-hash u0) ;; Returns (some 0x374708fff7719dd5979ec875d56cd2286f6d3cf7ec317a3b25632aab28ec37bb)\n(get-block-info? vrf-seed u0) ;; Returns (some 0xf490de2920c8a35fabeb13208852aa28c76f9be9b03a4dd2b3c075f7a26923b4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-burn-block-info)\nget-burn-block-info?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `BurnBlockInfoPropertyName, uint`\n**output:** `(optional buff) | (optional (tuple (addrs (list 2 (tuple (hashbytes (buff 32)) (version (buff 1))))) (payout uint)))`\n**signature:** `(get-burn-block-info? prop-name block-height)`\n**description:**\nThe `get-burn-block-info?` function fetches data for a block of the given _burnchain_ block height. The value and type returned are determined by the specified `BlockInfoPropertyName`. Valid values for `block-height` only include heights between the burnchain height at the time the Stacks chain was launched, and the last-processed burnchain block. If the `block-height` argument falls outside of this range, then `none` shall be returned.\nThe following `BlockInfoPropertyName` values are defined:\n  * The `header-hash` property returns a 32-byte buffer representing the header hash of the burnchain block at burnchain height `block-height`.\n  * The `pox-addrs` property returns a tuple with two items: a list of up to two PoX addresses that received a PoX payout at that block height, and the amount of burnchain tokens paid to each address (note that per the blockchain consensus rules, each PoX payout will be the same for each address in the block-commit transaction). The list will include burn addresses -- that is, the unspendable addresses that miners pay to when there are no PoX addresses left to be paid. During the prepare phase, there will be exactly one burn address reported. During the reward phase, up to two burn addresses may be reported in the event that some PoX reward slots are not claimed.\n\n\nThe `addrs` list contains the same PoX address values passed into the PoX smart contract:\n  * They each have type signature `(tuple (hashbytes (buff 32)) (version (buff 1)))`\n  * The `version` field can be any of the following:\n    * `0x00` means this is a p2pkh address, and `hashbytes` is the 20-byte hash160 of a single public key\n    * `0x01` means this is a p2sh address, and `hashbytes` is the 20-byte hash160 of a redeemScript script\n    * `0x02` means this is a p2wpkh-p2sh address, and `hashbytes` is the 20-byte hash160 of a p2wpkh witness script\n    * `0x03` means this is a p2wsh-p2sh address, and `hashbytes` is the 20-byte hash160 of a p2wsh witness script\n    * `0x04` means this is a p2wpkh address, and `hashbytes` is the 20-byte hash160 of the witness script\n    * `0x05` means this is a p2wsh address, and `hashbytes` is the 32-byte sha256 of the witness script\n    * `0x06` means this is a p2tr address, and `hashbytes` is the 32-byte sha256 of the witness script\n\n\n**example:**\nCopy```\n(get-burn-block-info? header-hash u677050) ;; Returns (some 0xe67141016c88a7f1203eca0b4312f2ed141531f59303a1c267d7d83ab6b977d8)\n(get-burn-block-info? pox-addrs u677050) ;; Returns (some (tuple (addrs ( (tuple (hashbytes 0x395f3643cea07ec4eec73b4d9a973dcce56b9bf1) (version 0x00)) (tuple (hashbytes 0x7c6775e20e3e938d2d7e9d79ac310108ba501ddb) (version 0x01)))) (payout u123)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-stacks-block-info)\nget-stacks-block-info?\nIntroduced in: **Clarity 3**\n**input:** `StacksBlockInfoPropertyName, uint`\n**output:** `(optional buff), (optional uint)`\n**signature:** `(get-stacks-block-info? prop-name stacks-block-height)`\n**description:**\nThe `get-stacks-block-info?` function fetches data for a block of the given _Stacks_ block height. The value and type returned are determined by the specified `StacksBlockInfoPropertyName`. If the provided `stacks-block-height` does not correspond to an existing block prior to the current block, the function returns `none`. The currently available property names are as follows:\n  * `id-header-hash`: This property returns a `(buff 32)` value containing the _index block hash_ of a Stacks block. This hash is globally unique, and is derived from the block hash and the history of accepted PoX operations. This is also the block hash value you would pass into `(at-block)`.\n  * `header-hash`: This property returns a `(buff 32)` value containing the header hash of a Stacks block, given a Stacks chain height. **WARNING** this hash is not guaranteed to be globally unique, since the same Stacks block can be mined in different PoX forks. If you need global uniqueness, you should use `id-header-hash`.\n  * `time`: This property returns a `uint` value of the block header time field. This is a Unix epoch timestamp in seconds which roughly corresponds to when the block was mined. For a block mined before epoch 3.0, this timestamp comes from the burnchain block. **Note** : this does not increase monotonically with each block and block times are accurate only to within two hours. See [BIP113](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki) for more information. For a block mined after epoch 3.0, this timestamp comes from the Stacks block header. **Note** : this is the time, according to the miner, when the mining of this block started, but is not guaranteed to be accurate. This time will be validated by the signers to be:\n  * Greater than the timestamp of the previous block\n  * At most 15 seconds into the future (according to their own local clocks)\n\n\n**example:**\nCopy```\n(get-stacks-block-info? time u0) ;; Returns (some u1557860301)\n(get-stacks-block-info? header-hash u0) ;; Returns (some 0x374708fff7719dd5979ec875d56cd2286f6d3cf7ec317a3b25632aab28ec37bb)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#get-tenure-info)\nget-tenure-info?\nIntroduced in: **Clarity 3**\n**input:** `TenureInfoPropertyName, uint`\n**output:** `(optional buff) | (optional uint)`\n**signature:** `(get-tenure-info? prop-name stacks-block-height)`\n**description:**\nThe `get-tenure-info?` function fetches data for the tenure at the given block height. The value and type returned are determined by the specified `TenureInfoPropertyName`. If the provided `stacks-block-height` does not correspond to an existing block prior to the current block, the function returns `none`. The currently available property names are as follows:\n  * `burnchain-header-hash`: This property returns a `(buff 32)` value containing the header hash of the burnchain (Bitcoin) block that selected the tenure at the given height.\n  * `miner-address`: This property returns a `principal` value corresponding to the miner of the given tenure. **WARNING** This is not guaranteed to be the same `principal` that received the block reward, since Stacks 2.1+ supports coinbase transactions that pay the reward to a contract address. This is merely the address of the `principal` that produced the tenure.\n  * `time`: This property returns a `uint` Unix epoch timestamp in seconds which roughly corresponds to when the tenure was started. This timestamp comes from the burnchain block. **Note** : this does not increase monotonically with each tenure and tenure times are accurate only to within two hours. See [BIP113](https://github.com/bitcoin/bips/blob/master/bip-0113.mediawiki) for more information.\n  * `vrf-seed`: This property returns a `(buff 32)` value of the VRF seed for the corresponding tenure.\n  * `block-reward`: This property returns a `uint` value for the total block reward of the indicated tenure. This value is only available once the reward for the tenure matures. That is, the latest `block-reward` value available is at least 101 Stacks blocks in the past (on mainnet). The reward includes the coinbase, the anchored tenure's transaction fees, and the shares of the confirmed and produced microblock transaction fees earned by this block's miner. Note that this value may be smaller than the Stacks coinbase at this height, because the miner may have been punished with a valid `PoisonMicroblock` transaction in the event that the miner published two or more microblock stream forks.\n  * `miner-spend-total`: This property returns a `uint` value for the total number of burnchain tokens (i.e. satoshis) spent by all miners trying to win this tenure.\n  * `miner-spend-winner`: This property returns a `uint` value for the number of burnchain tokens (i.e. satoshis) spent by the winning miner for this tennure. Note that this value is less than or equal to the value for `miner-spend-total` at the same tenure height.\n\n\n**example:**\nCopy```\n(get-tenure-info? time u0) ;; Returns (some u1557860301)\n(get-tenure-info? vrf-seed u0) ;; Returns (some 0xf490de2920c8a35fabeb13208852aa28c76f9be9b03a4dd2b3c075f7a26923b4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#hash160)\nhash160‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 20)`\n**signature:** `(hash160 value)`\n**description:**\nThe `hash160` function computes `RIPEMD160(SHA256(x))` of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(hash160 0) ;; Returns 0xe4352f72356db555721651aa612e00379167b30f\n```\n\n## \n[](https://docs.stacks.co/reference/functions#if)\nif‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool, A, A`\n**output:** `A`\n**signature:** `(if bool1 expr1 expr2)`\n**description:**\nThe `if` function admits a boolean argument and two expressions which must return the same type. In the case that the boolean input is `true`, the `if` function evaluates and returns `expr1`. If the boolean input is `false`, the `if` function evaluates and returns `expr2`.\n**example:**\nCopy```\n(if true 1 2) ;; Returns 1\n(if (> 1 2) 1 2) ;; Returns 2\n```\n\n## \n[](https://docs.stacks.co/reference/functions#impl-trait)\nimpl-trait‚Äã\nIntroduced in: **Clarity 1**\n**input:** `TraitIdentifier`\n**output:** `Not Applicable`\n**signature:** `(impl-trait trait-identifier)`\n**description:**\n`impl-trait` can be use for asserting that a contract is fully implementing a given trait. Additional checks are being performed when the contract is being published, rejecting the deployment if the contract is violating the trait specification.\nTrait identifiers can either be using the sugared syntax (.token-a.token-trait), or be fully qualified ('SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait).\nLike other kinds of definition statements, `impl-trait` may only be used at the top level of a smart contract definition (i.e., you cannot put such a statement in the middle of a function body).\n**example:**\nCopy```\n(impl-trait 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait)\n(define-public (get-balance (account principal))  \n  (ok u0))\n(define-public (transfer? (from principal) (to principal) (amount uint))  \n  (ok u0))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#index-of)\nindex-of‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A, A`\n**output:** `(optional uint)`\n**signature:** `(index-of? sequence item)`\n**description:**\nThe `index-of?` function returns the first index at which `item` can be found, using `is-eq` checks, in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. If the target item is not found in the sequence (or if an empty string or buffer is supplied), this function returns `none`. In Clarity1, `index-of` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(index-of? \"blockstack\" \"b\") ;; Returns (some u0)\n(index-of? \"blockstack\" \"k\") ;; Returns (some u4)\n(index-of? \"blockstack\" \"\") ;; Returns none\n(index-of? (list 1 2 3 4 5) 6) ;; Returns none\n(index-of? 0xfb01 0x01) ;; Returns (some u1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#index-of-1)\nindex-of?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, A`\n**output:** `(optional uint)`\n**signature:** `(index-of? sequence item)`\n**description:**\nThe `index-of?` function returns the first index at which `item` can be found, using `is-eq` checks, in the provided sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. If the target item is not found in the sequence (or if an empty string or buffer is supplied), this function returns `none`. In Clarity1, `index-of` must be used (without the `?`). The `?` is added in Clarity2 for consistency -- built-ins that return responses or optionals end in `?`. The Clarity1 spelling is left as an alias in Clarity2 for backwards compatibility.\n**example:**\nCopy```\n(index-of? \"blockstack\" \"b\") ;; Returns (some u0)\n(index-of? \"blockstack\" \"k\") ;; Returns (some u4)\n(index-of? \"blockstack\" \"\") ;; Returns none\n(index-of? (list 1 2 3 4 5) 6) ;; Returns none\n(index-of? 0xfb01 0x01) ;; Returns (some u1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#int-to-ascii)\nint-to-ascii‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int | uint`\n**output:** `(string-ascii 40)`\n**signature:** `(int-to-ascii (int|uint))`\n**description:**\nConverts an integer, either `int` or `uint`, to a `string-ascii` string-value representation.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(int-to-ascii 1) ;; Returns \"1\"\n(int-to-ascii u1) ;; Returns \"1\"\n(int-to-ascii -1) ;; Returns \"-1\"\n```\n\n## \n[](https://docs.stacks.co/reference/functions#int-to-utf8)\nint-to-utf8‚Äã\nIntroduced in: **Clarity 2**\n**input:** `int | uint`\n**output:** `(string-utf8 40)`\n**signature:** `(int-to-utf8 (int|uint))`\n**description:**\nConverts an integer, either `int` or `uint`, to a `string-utf8` string-value representation.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(int-to-utf8 1) ;; Returns u\"1\"\n(int-to-utf8 u1) ;; Returns u\"1\"\n(int-to-utf8 -1) ;; Returns u\"-1\"\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-eq)\nis-eq‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A, A, ...`\n**output:** `bool`\n**signature:** `(is-eq v1 v2...)`\n**description:**\nCompares the inputted values, returning `true` if they are all equal. Note that _unlike_ the `(and ...)` function, `(is-eq ...)` will _not_ short-circuit. All values supplied to is-eq _must_ be the same type.\n**example:**\nCopy```\n(is-eq 1 1) ;; Returns true\n(is-eq true false) ;; Returns false\n(is-eq \"abc\" 234 234) ;; Throws type error\n(is-eq \"abc\" \"abc\") ;; Returns true\n(is-eq 0x0102 0x0102) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-err)\nis-err‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(response A B)`\n**output:** `bool`\n**signature:** `(is-err value)`\n**description:**\n`is-err` tests a supplied response value, returning `true` if the response was an `err`, and `false` if it was an `ok`.\n**example:**\nCopy```\n(is-err (ok 1)) ;; Returns false\n(is-err (err 1)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-none)\nis-none‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A)`\n**output:** `bool`\n**signature:** `(is-none value)`\n**description:**\n`is-none` tests a supplied option value, returning `true` if the option value is `(none)`, and `false` if it is a `(some ...)`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(is-none (get id (map-get? names-map { name: \"blockstack\" }))) ;; Returns false\n(is-none (get id (map-get? names-map { name: \"non-existant\" }))) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-ok)\nis-ok‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(response A B)`\n**output:** `bool`\n**signature:** `(is-ok value)`\n**description:**\n`is-ok` tests a supplied response value, returning `true` if the response was `ok`, and `false` if it was an `err`.\n**example:**\nCopy```\n(is-ok (ok 1)) ;; Returns true\n(is-ok (err 1)) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-some)\nis-some‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A)`\n**output:** `bool`\n**signature:** `(is-some value)`\n**description:**\n`is-some` tests a supplied option value, returning `true` if the option value is `(some ...)`, and `false` if it is a `none`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(is-some (get id (map-get? names-map { name: \"blockstack\" }))) ;; Returns true\n(is-some (get id (map-get? names-map { name: \"non-existant\" }))) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#is-standard)\nis-standard‚Äã\nIntroduced in: **Clarity 2**\n**input:** `principal`\n**output:** `bool`\n**signature:** `(is-standard standard-or-contract-principal)`\n**description:**\nTests whether `standard-or-contract-principal` _matches_ the current network type, and therefore represents a principal that can spend tokens on the current network type. That is, the network is either of type `mainnet`, or `testnet`. Only `SPxxxx` and `SMxxxx` _c32check form_ addresses can spend tokens on a mainnet, whereas only `STxxxx` and `SNxxxx` _c32check forms_ addresses can spend tokens on a testnet. All addresses can _receive_ tokens, but only principal _c32check form_ addresses that match the network type can _spend_ tokens on the network. This method will return `true` if and only if the principal matches the network type, and false otherwise.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(is-standard 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6) ;; returns true on testnet and false on mainnet\n(is-standard 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6.foo) ;; returns true on testnet and false on mainnet\n(is-standard 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY) ;; returns true on mainnet and false on testnet\n(is-standard 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY.foo) ;; returns true on mainnet and false on testnet\n(is-standard 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; returns false on both mainnet and testnet\n```\n\n## \n[](https://docs.stacks.co/reference/functions#keccak256)\nkeccak256‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 32)`\n**signature:** `(keccak256 value)`\n**description:**\nThe `keccak256` function computes `KECCAK256(value)` of the inputted value. Note that this differs from the `NIST SHA-3` (that is, FIPS 202) standard. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(keccak256 0) ;; Returns 0xf490de2920c8a35fabeb13208852aa28c76f9be9b03a4dd2b3c075f7a26923b4\n```\n\n## \n[](https://docs.stacks.co/reference/functions#len)\nlen‚Äã\nIntroduced in: **Clarity 1**\n**input:** `sequence_A`\n**output:** `uint`\n**signature:** `(len sequence)`\n**description:**\nThe `len` function returns the length of a given sequence. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`.\n**example:**\nCopy```\n(len \"blockstack\") ;; Returns u10\n(len (list 1 2 3 4 5)) ;; Returns u5\n(len 0x010203) ;; Returns u3\n```\n\n## \n[](https://docs.stacks.co/reference/functions#let)\nlet‚Äã\nIntroduced in: **Clarity 1**\n**input:** `((name1 AnyType) (name2 AnyType) ...), AnyType, ... A`\n**output:** `A`\n**signature:** `(let ((name1 expr1) (name2 expr2) ...) expr-body1 expr-body2 ... expr-body-last)`\n**description:**\nThe `let` function accepts a list of `variable name` and `expression` pairs, evaluating each expression and _binding_ it to the corresponding variable name. `let` bindings are sequential: when a `let` binding is evaluated, it may refer to prior binding. The _context_ created by this set of bindings is used for evaluating its body expressions. The let expression returns the value of the last such body expression. Note: intermediary statements returning a response type must be checked\n**example:**\nCopy```\n(let \n  ( (a 2) (b (+ 5 6 7))) \n  (print a) \n  (print b) \n  (+ a b)) ;; Returns 20\n(let \n  ( (a 5) (c (+ a 1)) (d (+ c 1)) (b (+ a c d))) \n  (print a) \n  (print b) \n  (+ a b)) ;; Returns 23\n```\n\n## \n[](https://docs.stacks.co/reference/functions#list)\nlist‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A, ...`\n**output:** `(list A)`\n**signature:** `(list expr1 expr2 expr3 ...)`\n**description:**\nThe `list` function constructs a list composed of the inputted values. Each supplied value must be of the same type.\n**example:**\nCopy```\n(list (+ 1 2) 4 5) ;; Returns (3 4 5)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#log2)\nlog2‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int | uint`\n**output:** `int | uint`\n**signature:** `(log2 n)`\n**description:**\nReturns the power to which the number 2 must be raised to to obtain the value `n`, rounded down to the nearest integer. Fails on a negative numbers.\n**example:**\nCopy```\n(log2 u8) ;; Returns u3\n(log2 8) ;; Returns 3\n(log2 u1) ;; Returns u0\n(log2 1000) ;; Returns 9\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map)\nmap‚Äã\nIntroduced in: **Clarity 1**\n**input:** `Function(A, B, ..., N) -> X, sequence_A, sequence_B, ..., sequence_N`\n**output:** `(list X)`\n**signature:** `(map func sequence_A sequence_B ... sequence_N)`\n**description:**\nThe `map` function applies the function `func` to each corresponding element of the input sequences, and outputs a _list_ of the same type containing the outputs from those function applications. Applicable sequence types are `(list A)`, `buff`, `string-ascii` and `string-utf8`, for which the corresponding element types are, respectively, `A`, `(buff 1)`, `(string-ascii 1)` and `(string-utf8 1)`. The `func` argument must be a literal function name. Also, note that, no matter what kind of sequences the inputs are, the output is always a list.\n**example:**\nCopy```\n(map not (list true false true false)) ;; Returns (false true false true)\n(map + (list 1 2 3) (list 1 2 3) (list 1 2 3)) ;; Returns (3 6 9)\n(define-private (a-or-b (char (string-utf8 1))) \n  (if (is-eq char u\"a\") u\"a\" u\"b\"))\n(map a-or-b u\"aca\") ;; Returns (u\"a\" u\"b\" u\"a\")\n(define-private (zero-or-one (char (buff 1))) \n  (if (is-eq char 0x00) 0x00 0x01))\n(map zero-or-one 0x000102) ;; Returns (0x00 0x01 0x01)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-delete)\nmap-delete‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple`\n**output:** `bool`\n**signature:** `(map-delete map-name key-tuple)`\n**description:**\nThe `map-delete` function removes the value associated with the input key for the given map. If an item exists and is removed, the function returns `true`. If a value did not exist for this key in the data map, the function returns `false`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(map-delete names-map { name: \"blockstack\" }) ;; Returns true\n(map-delete names-map { name: \"blockstack\" }) ;; Returns false\n(map-delete names-map (tuple (name \"blockstack\"))) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-get)\nmap-get?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple`\n**output:** `(optional (tuple))`\n**signature:** `(map-get? map-name key-tuple)`\n**description:**\nThe `map-get?` function looks up and returns an entry from a contract's data map. The value is looked up using `key-tuple`. If there is no value associated with that key in the data map, the function returns a `none` option. Otherwise, it returns `(some value)`.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(map-get? names-map (tuple (name \"blockstack\"))) ;; Returns (some (tuple (id 1337)))\n(map-get? names-map { name: \"blockstack\" }) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-insert)\nmap-insert‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple_A, tuple_B`\n**output:** `bool`\n**signature:** `(map-insert map-name key-tuple value-tuple)`\n**description:**\nThe `map-insert` function sets the value associated with the input key to the inputted value if and only if there is not already a value associated with the key in the map. If an insert occurs, the function returns `true`. If a value already existed for this key in the data map, the function returns `false`.\nNote: the `value-tuple` requires 1 additional byte for storage in the materialized blockchain state, and therefore the maximum size of a value that may be inserted into a map is MAX_CLARITY_VALUE - 1.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(map-insert names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns false\n(map-insert names-map (tuple (name \"blockstack\")) (tuple (id 1337))) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#map-set)\nmap-set‚Äã\nIntroduced in: **Clarity 1**\n**input:** `MapName, tuple_A, tuple_B`\n**output:** `bool`\n**signature:** `(map-set map-name key-tuple value-tuple)`\n**description:**\nThe `map-set` function sets the value associated with the input key to the inputted value. This function performs a _blind_ update; whether or not a value is already associated with the key, the function overwrites that existing association.\nNote: the `value-tuple` requires 1 additional byte for storage in the materialized blockchain state, and therefore the maximum size of a value that may be inserted into a map is MAX_CLARITY_VALUE - 1.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 10) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 }) ;; Returns true\n(map-set names-map (tuple (name \"blockstack\")) (tuple (id 1337))) ;; Same command, using a shorthand for constructing the tuple\n```\n\n## \n[](https://docs.stacks.co/reference/functions#match)\nmatch‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A) name expression expression | (response A B) name expression name expression`\n**output:** `C`\n**signature:** `(match opt-input some-binding-name some-branch none-branch) | (match-resp input ok-binding-name ok-branch err-binding-name err-branch)`\n**description:**\nThe `match` function is used to test and destructure optional and response types.\nIf the `input` is an optional, it tests whether the provided `input` is a `some` or `none` option, and evaluates `some-branch` or `none-branch` in each respective case.\nWithin the `some-branch`, the _contained value_ of the `input` argument is bound to the provided `some-binding-name` name.\nOnly _one_ of the branches will be evaluated (similar to `if` statements).\nIf the `input` is a response, it tests whether the provided `input` is an `ok` or `err` response type, and evaluates `ok-branch` or `err-branch` in each respective case.\nWithin the `ok-branch`, the _contained ok value_ of the `input` argument is bound to the provided `ok-binding-name` name.\nWithin the `err-branch`, the _contained err value_ of the `input` argument is bound to the provided `err-binding-name` name.\nOnly _one_ of the branches will be evaluated (similar to `if` statements).\nNote: Type checking requires that the type of both the ok and err parts of the response object be determinable. For situations in which one of the parts of a response is untyped, you should use `unwrap-panic` or `unwrap-err-panic` instead of `match`.\n**example:**\nCopy```\n(define-private (add-10 (x (optional int)))  \n  (match x \n    value (+ 10 value)\n    10))\n(add-10 (some 5)) ;; Returns 15\n(add-10 none) ;; Returns 10\n(define-private (add-or-pass-err (x (response int (string-ascii 10))) (to-add int))  \n  (match x\n    value (ok (+ to-add value))\n    err-value (err err-value)))\n(add-or-pass-err (ok 5) 20) ;; Returns (ok 25)\n(add-or-pass-err (err \"ERROR\") 20) ;; Returns (err \"ERROR\")\n```\n\n## \n[](https://docs.stacks.co/reference/functions#merge)\nmerge‚Äã\nIntroduced in: **Clarity 1**\n**input:** `tuple, tuple`\n**output:** `tuple`\n**signature:** `(merge tuple { key1: val1 })`\n**description:**\nThe `merge` function returns a new tuple with the combined fields, without mutating the supplied tuples.\n**example:**\nCopy```\n(define-map users { id: int } { name: (string-ascii 12), address: (optional principal) })\n(map-insert users { id: 1337 } { name: \"john\", address: none }) ;; Returns true\n(let \n  ( (user (unwrap-panic (map-get? users { id: 1337 }))))    \n  (merge user { address: (some 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) })) ;; Returns (tuple (address (some SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF)) (name \"john\"))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#mod)\nmod‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `int | uint`\n**signature:** `(mod i1 i2)`\n**description:**\nReturns the integer remainder from integer dividing `i1` by `i2`. In the event of a division by zero, throws a runtime error.\n**example:**\nCopy```\n(mod 2 3) ;; Returns 2\n(mod 5 2) ;; Returns 1\n(mod 7 1) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-burn)\nnft-burn?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A, principal`\n**output:** `(response bool uint)`\n**signature:** `(nft-burn? asset-class asset-identifier sender)`\n**description:**\n`nft-burn?` is used to burn an asset that the `sender` principal owns. The asset must have been defined using `define-non-fungible-token`, and the supplied `asset-identifier` must be of the same type specified in that definition.\nOn a successful burn, it returns `(ok true)`. In the event of an unsuccessful burn it returns one of the following error codes:\n`(err u1)` -- `sender` does not own the specified asset `(err u3)` -- the asset specified by `asset-identifier` does not exist\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(nft-burn? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-get-owner)\nnft-get-owner?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A`\n**output:** `(optional principal)`\n**signature:** `(nft-get-owner? asset-class asset-identifier)`\n**description:**\n`nft-get-owner?` returns the owner of an asset, identified by `asset-identifier`, or `none` if the asset does not exist. The asset type must have been defined using `define-non-fungible-token`, and the supplied `asset-identifier` must be of the same type specified in that definition.\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF)\n(nft-get-owner? stackaroo \"Roo\") ;; Returns (some SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF)\n(nft-get-owner? stackaroo \"Too\") ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-mint)\nnft-mint?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A, principal`\n**output:** `(response bool uint)`\n**signature:** `(nft-mint? asset-class asset-identifier recipient)`\n**description:**\n`nft-mint?` is used to instantiate an asset and set that asset's owner to the `recipient` principal. The asset must have been defined using `define-non-fungible-token`, and the supplied `asset-identifier` must be of the same type specified in that definition.\nIf an asset identified by `asset-identifier` _already exists_ , this function will return an error with the following error code:\n`(err u1)`\nOtherwise, on successfuly mint, it returns `(ok true)`.\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#nft-transfer)\nnft-transfer?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `AssetName, A, principal, principal`\n**output:** `(response bool uint)`\n**signature:** `(nft-transfer? asset-class asset-identifier sender recipient)`\n**description:**\n`nft-transfer?` is used to change the owner of an asset identified by `asset-identifier` from `sender` to `recipient`. The `asset-class` must have been defined by `define-non-fungible-token` and `asset-identifier` must be of the type specified in that definition. In contrast to `stx-transfer?`, any user can transfer the asset. When used, relevant guards need to be added.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not own the asset `(err u2)` -- `sender` and `recipient` are the same principal `(err u3)` -- asset identified by asset-identifier does not exist\n**example:**\nCopy```\n(define-non-fungible-token stackaroo (string-ascii 40))\n(nft-mint? stackaroo \"Roo\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)\n(nft-transfer? stackaroo \"Roo\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (ok true)\n(nft-transfer? stackaroo \"Roo\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (err u1)\n(nft-transfer? stackaroo \"Stacka\" 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF) ;; Returns (err u3)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#not)\nnot‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool`\n**output:** `bool`\n**signature:** `(not b1)`\n**description:**\nReturns the inverse of the boolean input.\n**example:**\nCopy```\n(not true) ;; Returns false\n(not (is-eq 1 2)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#ok)\nok‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `(response A B)`\n**signature:** `(ok value)`\n**description:**\nThe `ok` function constructs a response type from the input value. Use `ok` for creating return values in public functions. An _ok_ value indicates that any database changes during the processing of the function should materialize.\n**example:**\nCopy```\n(ok 1) ;; Returns (ok 1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#or)\nor‚Äã\nIntroduced in: **Clarity 1**\n**input:** `bool, ...`\n**output:** `bool`\n**signature:** `(or b1 b2 ...)`\n**description:**\nReturns `true` if any boolean inputs are `true`. Importantly, the supplied arguments are evaluated in-order and lazily. Lazy evaluation means that if one of the arguments returns `true`, the function short-circuits, and no subsequent arguments are evaluated.\n**example:**\nCopy```\n(or true false) ;; Returns true\n(or (is-eq (+ 1 2) 1) (is-eq 4 4)) ;; Returns true\n(or (is-eq (+ 1 2) 1) (is-eq 3 4)) ;; Returns false\n(or (is-eq (+ 1 2) 3) (is-eq 4 4)) ;; Returns true\n```\n\n## \n[](https://docs.stacks.co/reference/functions#pow)\npow‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `int | uint`\n**signature:** `(pow i1 i2)`\n**description:**\nReturns the result of raising `i1` to the power of `i2`. In the event of an _overflow_ , throws a runtime error. Note: Corner cases are handled with the following rules:\n  * if both `i1` and `i2` are `0`, return `1`\n  * if `i1` is `1`, return `1`\n  * if `i1` is `0`, return `0`\n  * if `i2` is negative or greater than `u32::MAX`, throw a runtime error\n\n\n**example:**\nCopy```\n(pow 2 3) ;; Returns 8\n(pow 2 2) ;; Returns 4\n(pow 7 1) ;; Returns 7\n```\n\n## \n[](https://docs.stacks.co/reference/functions#principal-construct)\nprincipal-construct?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(buff 1), (buff 20), [(string-ascii 40)]`\n**output:** `(response principal { error_code: uint, principal: (option principal) })`\n**signature:** `(principal-construct? (buff 1) (buff 20) [(string-ascii 40)])`\n**description:**\nA principal value represents either a set of keys, or a smart contract. The former, called a _standard principal_ , is encoded as a `(buff 1)` _version byte_ , indicating the type of account and the type of network that this principal can spend tokens on, and a `(buff 20)` _public key hash_ , characterizing the principal's unique identity. The latter, a _contract principal_ , is encoded as a standard principal concatenated with a `(string-ascii 40)` _contract name_ that identifies the code body.\nThe `principal-construct?` function allows users to create either standard or contract principals, depending on which form is used. To create a standard principal, `principal-construct?` would be called with two arguments: it takes as input a `(buff 1)` which encodes the principal address's `version-byte`, a `(buff 20)` which encodes the principal address's `hash-bytes`. To create a contract principal, `principal-construct?` would be called with three arguments: the `(buff 1)` and `(buff 20)` to represent the standard principal that created the contract, and a `(string-ascii 40)` which encodes the contract's name. On success, this function returns either a standard principal or contract principal, depending on whether or not the third `(string-ascii 40)` argument is given.\nThis function returns a `Response`. On success, the `ok` value is a `Principal`. The `err` value is a value tuple with the form `{ error_code: uint, value: (optional principal) }`.\nIf the single-byte `version-byte` is in the valid range `0x00` to `0x1f`, but is not an appropriate version byte for the current network, then the error will be `u0`, and `value` will contain `(some principal)`, where the wrapped value is the principal. If the `version-byte` is not in this range, however, then the `value` will be `none`.\nIf the `version-byte` is a `buff` of length 0, if the single-byte `version-byte` is a value greater than `0x1f`, or the `hash-bytes` is a `buff` of length not equal to 20, then `error_code` will be `u1` and `value` will be `None`.\nIf a name is given, and the name is either an empty string or contains ASCII characters that are not allowed in contract names, then `error_code` will be `u2`.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (ok ST3X6QWWETNBZWGBK6DRGTR1KX50S74D3425Q1TPK)\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320 \"foo\") ;; Returns (ok ST3X6QWWETNBZWGBK6DRGTR1KX50S74D3425Q1TPK.foo)\n(principal-construct? 0x16 0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (err (tuple (error_code u0) (value (some SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY))))\n(principal-construct? 0x16 0xfa6bf38ed557fe417333710d6033e9419391a320 \"foo\") ;; Returns (err (tuple (error_code u0) (value (some SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY.foo))))\n(principal-construct? 0x   0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (err (tuple (error_code u1) (value none)))\n(principal-construct? 0x16 0xfa6bf38ed557fe417333710d6033e9419391a3)   ;; Returns (err (tuple (error_code u1) (value none)))\n(principal-construct? 0x20 0xfa6bf38ed557fe417333710d6033e9419391a320) ;; Returns (err (tuple (error_code u1) (value none)))\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320 \"\") ;; Returns (err (tuple (error_code u2) (value none)))\n(principal-construct? 0x1a 0xfa6bf38ed557fe417333710d6033e9419391a320 \"foo[\") ;; Returns (err (tuple (error_code u2) (value none)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#principal-destruct)\nprincipal-destruct?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `principal`\n**output:** `(response (tuple (hash-bytes (buff 20)) (name (optional (string-ascii 40))) (version (buff 1))) (tuple (hash-bytes (buff 20)) (name (optional (string-ascii 40))) (version (buff 1))))`\n**signature:** `(principal-destruct? principal-address)`\n**description:**\nA principal value represents either a set of keys, or a smart contract. The former, called a _standard principal_ , is encoded as a `(buff 1)` _version byte_ , indicating the type of account and the type of network that this principal can spend tokens on, and a `(buff 20)` _public key hash_ , characterizing the principal's unique identity. The latter, a _contract principal_ , is encoded as a standard principal concatenated with a `(string-ascii 40)` _contract name_ that identifies the code body.\n`principal-destruct?` will decompose a principal into its component parts: either`{version-byte, hash-bytes}` for standard principals, or `{version-byte, hash-bytes, name}` for contract principals.\nThis method returns a `Response` that wraps this data as a tuple.\nIf the version byte of `principal-address` matches the network (see `is-standard`), then this method returns the pair as its `ok` value.\nIf the version byte of `principal-address` does not match the network, then this method returns the pair as its `err` value.\nIn both cases, the value itself is a tuple containing three fields: a `version` value as a `(buff 1)`, a `hash-bytes` value as a `(buff 20)`, and a `name` value as an `(optional (string-ascii 40))`. The `name` field will only be `(some ..)` if the principal is a contract principal.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(principal-destruct? 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6) ;; Returns (ok (tuple (hash-bytes 0x164247d6f2b425ac5771423ae6c80c754f7172b0) (name none) (version 0x1a)))\n(principal-destruct? 'STB44HYPYAT2BB2QE513NSP81HTMYWBJP02HPGK6.foo) ;; Returns (ok (tuple (hash-bytes 0x164247d6f2b425ac5771423ae6c80c754f7172b0) (name (some \"foo\")) (version 0x1a)))\n(principal-destruct? 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY) ;; Returns (err (tuple (hash-bytes 0xfa6bf38ed557fe417333710d6033e9419391a320) (name none) (version 0x16)))\n(principal-destruct? 'SP3X6QWWETNBZWGBK6DRGTR1KX50S74D3433WDGJY.foo) ;; Returns (err (tuple (hash-bytes 0xfa6bf38ed557fe417333710d6033e9419391a320) (name (some \"foo\")) (version 0x16)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#principal-of)\nprincipal-of?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 33)`\n**output:** `(response principal uint)`\n**signature:** `(principal-of? public-key)`\n**description:**\nThe `principal-of?` function returns the principal derived from the provided public key. If the `public-key` is invalid, it will return the error code `(err u1).`.\nNote: Before Stacks 2.1, this function has a bug, in that the principal returned would always be a testnet single-signature principal, even if the function were run on the mainnet. Starting with Stacks 2.1, this bug is fixed, so that this function will return a principal suited to the network it is called on. In particular, if this is called on the mainnet, it will return a single-signature mainnet principal.\n**example:**\nCopy```\n(principal-of? 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns (ok ST1AW6EKPGT61SQ9FNVDS17RKNWT8ZP582VF9HSCP)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#print)\nprint‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `A`\n**signature:** `(print expr)`\n**description:**\nThe `print` function evaluates and returns its input expression. On Stacks Core nodes configured for development (as opposed to production mining nodes), this function prints the resulting value to `STDOUT` (standard output).\n**example:**\nCopy```\n(print (+ 1 2 3)) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#replace-at)\nreplace-at?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, uint, A`\n**output:** `(optional sequence_A)`\n**signature:** `(replace-at? sequence index element)`\n**description:**\nThe `replace-at?` function takes in a sequence, an index, and an element, and returns a new sequence with the data at the index position replaced with the given element. The given element's type must match the type of the sequence, and must correspond to a single index of the input sequence. The return type on success is the same type as the input sequence.\nIf the provided index is out of bounds, this functions returns `none`.\n**example:**\nCopy```\n(replace-at? u\"ab\" u1 u\"c\") ;; Returns (some u\"ac\")\n(replace-at? 0x00112233 u2 0x44) ;; Returns (some 0x00114433)\n(replace-at? \"abcd\" u3 \"e\") ;; Returns (some \"abce\")\n(replace-at? (list 1) u0 10) ;; Returns (some (10))\n(replace-at? (list (list 1) (list 2)) u0 (list 33)) ;; Returns (some ( (33) (2)))\n(replace-at? (list 1 2) u3 4) ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#secp256k1-recover)\nsecp256k1-recover?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 32), (buff 65)`\n**output:** `(response (buff 33) uint)`\n**signature:** `(secp256k1-recover? message-hash signature)`\n**description:**\nThe `secp256k1-recover?` function recovers the public key used to sign the message which sha256 is `message-hash` with the provided `signature`. If the signature does not match, it will return the error code `(err u1).`. If the signature is invalid, it will return the error code `(err u2).`. The signature includes 64 bytes plus an additional recovery id (00..03) for a total of 65 bytes.\n**example:**\nCopy```\n(secp256k1-recover? 0xde5b9eb9e7c5592930eb2e30a01369c36586d872082ed8181ee83d2a0ec20f04 0x8738487ebe69b93d8e51583be8eee50bb4213fc49c767d329632730cc193b873554428fc936ca3569afc15f1c9365f6591d6251a89fee9c9ac661116824d3a1301) ;; Returns (ok 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#secp256k1-verify)\nsecp256k1-verify‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(buff 32), (buff 64) | (buff 65), (buff 33)`\n**output:** `bool`\n**signature:** `(secp256k1-verify message-hash signature public-key)`\n**description:**\nThe `secp256k1-verify` function verifies that the provided signature of the message-hash was signed with the private key that generated the public key. The `message-hash` is the `sha256` of the message. The signature includes 64 bytes plus an optional additional recovery id (00..03) for a total of 64 or 65 bytes.\n**example:**\nCopy```\n(secp256k1-verify 0xde5b9eb9e7c5592930eb2e30a01369c36586d872082ed8181ee83d2a0ec20f04 0x8738487ebe69b93d8e51583be8eee50bb4213fc49c767d329632730cc193b873554428fc936ca3569afc15f1c9365f6591d6251a89fee9c9ac661116824d3a1301 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns true\n(secp256k1-verify 0xde5b9eb9e7c5592930eb2e30a01369c36586d872082ed8181ee83d2a0ec20f04 0x8738487ebe69b93d8e51583be8eee50bb4213fc49c767d329632730cc193b873554428fc936ca3569afc15f1c9365f6591d6251a89fee9c9ac661116824d3a13 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns true\n(secp256k1-verify 0x0000000000000000000000000000000000000000000000000000000000000000 0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 0x03adb8de4bfb65db2cfd6120d55c6526ae9c52e675db7e47308636534ba7786110) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sha256)\nsha256‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 32)`\n**signature:** `(sha256 value)`\n**description:**\nThe `sha256` function computes `SHA256(x)` of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(sha256 0) ;; Returns 0x374708fff7719dd5979ec875d56cd2286f6d3cf7ec317a3b25632aab28ec37bb\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sha512)\nsha512‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 64)`\n**signature:** `(sha512 value)`\n**description:**\nThe `sha512` function computes `SHA512(x)` of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(sha512 1) ;; Returns 0x6fcee9a7b7a7b821d241c03c82377928bc6882e7a08c78a4221199bfa220cdc55212273018ee613317c8293bb8d1ce08d1e017508e94e06ab85a734c99c7cc34\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sha512-256)\nsha512/256‚Äã\nIntroduced in: **Clarity 1**\n**input:** `buff|uint|int`\n**output:** `(buff 32)`\n**signature:** `(sha512/256 value)`\n**description:**\nThe `sha512/256` function computes `SHA512/256(x)` (the SHA512 algorithm with the 512/256 initialization vector, truncated to 256 bits) of the inputted value. If an integer (128 bit) is supplied the hash is computed over the little-endian representation of the integer.\n**example:**\nCopy```\n(sha512/256 1) ;; Returns 0x515a7e92e7c60522db968d81ff70b80818fc17aeabbec36baf0dda2812e94a86\n```\n\n## \n[](https://docs.stacks.co/reference/functions#slice)\nslice?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `sequence_A, uint, uint`\n**output:** `(optional sequence_A)`\n**signature:** `(slice? sequence left-position right-position)`\n**description:**\nThe `slice?` function attempts to return a sub-sequence of that starts at `left-position` (inclusive), and ends at `right-position` (non-inclusive). If `left_position`==`right_position`, the function returns an empty sequence. If either `left_position` or `right_position` are out of bounds OR if `right_position` is less than `left_position`, the function returns `none`.\n**example:**\nCopy```\n(slice? \"blockstack\" u5 u10) ;; Returns (some \"stack\")\n(slice? (list 1 2 3 4 5) u5 u9) ;; Returns none\n(slice? (list 1 2 3 4 5) u3 u4) ;; Returns (some (4))\n(slice? \"abcd\" u1 u3) ;; Returns (some \"bc\")\n(slice? \"abcd\" u2 u2) ;; Returns (some \"\")\n(slice? \"abcd\" u3 u1) ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#some)\nsome‚Äã\nIntroduced in: **Clarity 1**\n**input:** `A`\n**output:** `(optional A)`\n**signature:** `(some value)`\n**description:**\nThe `some` function constructs a `optional` type from the input value.\n**example:**\nCopy```\n(some 1) ;; Returns (some 1)\n(is-none (some 2)) ;; Returns false\n```\n\n## \n[](https://docs.stacks.co/reference/functions#sqrti)\nsqrti‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int | uint`\n**output:** `int | uint`\n**signature:** `(sqrti n)`\n**description:**\nReturns the largest integer that is less than or equal to the square root of `n`. Fails on a negative numbers.\n**example:**\nCopy```\n(sqrti u11) ;; Returns u3\n(sqrti 1000000) ;; Returns 1000\n(sqrti u1) ;; Returns u1\n(sqrti 0) ;; Returns 0\n```\n\n## \n[](https://docs.stacks.co/reference/functions#string-to-int)\nstring-to-int?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(string-ascii 1048576) | (string-utf8 262144)`\n**output:** `(optional int)`\n**signature:** `(string-to-int? (string-ascii|string-utf8))`\n**description:**\nConverts a string, either `string-ascii` or `string-utf8`, to an optional-wrapped signed integer. If the input string does not represent a valid integer, then the function returns `none`. Otherwise it returns an integer wrapped in `some`.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(string-to-int? \"1\") ;; Returns (some 1)\n(string-to-int? u\"-1\") ;; Returns (some -1)\n(string-to-int? \"a\") ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#string-to-uint)\nstring-to-uint?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `(string-ascii 1048576) | (string-utf8 262144)`\n**output:** `(optional uint)`\n**signature:** `(string-to-uint? (string-ascii|string-utf8))`\n**description:**\nConverts a string, either `string-ascii` or `string-utf8`, to an optional-wrapped unsigned integer. If the input string does not represent a valid integer, then the function returns `none`. Otherwise it returns an unsigned integer wrapped in `some`.\nNote: This function is only available starting with Stacks 2.1.\n**example:**\nCopy```\n(string-to-uint? \"1\") ;; Returns (some u1)\n(string-to-uint? u\"1\") ;; Returns (some u1)\n(string-to-uint? \"a\") ;; Returns none\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-account)\nstx-account‚Äã\nIntroduced in: **Clarity 2**\n**input:** `principal`\n**output:** `(tuple (locked uint) (unlock-height uint) (unlocked uint))`\n**signature:** `(stx-account owner)`\n**description:**\n`stx-account` is used to query the STX account of the `owner` principal.\nThis function returns a tuple with the canonical account representation for an STX account. This includes the current amount of unlocked STX, the current amount of locked STX, and the unlock height for any locked STX, all denominated in microstacks.\n**example:**\nCopy```\n(stx-account 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns (tuple (locked u0) (unlock-height u0) (unlocked u0))\n(stx-account (as-contract tx-sender)) ;; Returns (tuple (locked u0) (unlock-height u0) (unlocked u1000))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-burn)\nstx-burn?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `uint, principal`\n**output:** `(response bool uint)`\n**signature:** `(stx-burn? amount sender)`\n**description:**\n`stx-burn?` decreases the `sender` principal's STX holdings by `amount`, specified in microstacks, by destroying the STX. The `sender` principal _must_ be equal to the current context's `tx-sender`.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to transfer `(err u3)` -- amount to send is non-positive `(err u4)` -- the `sender` principal is not the current `tx-sender`\n**example:**\nCopy```\n(as-contract  (stx-burn? u60 tx-sender)) ;; Returns (ok true)\n(as-contract  (stx-burn? u50 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)) ;; Returns (err u4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-get-balance)\nstx-get-balance‚Äã\nIntroduced in: **Clarity 1**\n**input:** `principal`\n**output:** `uint`\n**signature:** `(stx-get-balance owner)`\n**description:**\n`stx-get-balance` is used to query the STX balance of the `owner` principal.\nThis function returns the STX balance, in microstacks (1 STX = 1,000,000 microstacks), of the `owner` principal. In the event that the `owner` principal isn't materialized, it returns 0.\n**example:**\nCopy```\n(stx-get-balance 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns u0\n(stx-get-balance (as-contract tx-sender)) ;; Returns u1000\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-transfer-memo)\nstx-transfer-memo?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `uint, principal, principal, buff`\n**output:** `(response bool uint)`\n**signature:** `(stx-transfer-memo? amount sender recipient memo)`\n**description:**\n`stx-transfer-memo?` is similar to `stx-transfer?`, except that it adds a `memo` field.\nThis function returns (ok true) if the transfer is successful, or, on an error, returns the same codes as `stx-transfer?`.\n**example:**\nCopy```\n(as-contract  (stx-transfer-memo? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR 0x010203)) ;; Returns (ok true)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#stx-transfer)\nstx-transfer?‚Äã\nIntroduced in: **Clarity 1**\n**input:** `uint, principal, principal`\n**output:** `(response bool uint)`\n**signature:** `(stx-transfer? amount sender recipient)`\n**description:**\n`stx-transfer?` is used to increase the STX balance for the `recipient` principal by debiting the `sender` principal by `amount`, specified in microstacks. The `sender` principal _must_ be equal to the current context's `tx-sender`.\nThis function returns (ok true) if the transfer is successful. In the event of an unsuccessful transfer it returns one of the following error codes:\n`(err u1)` -- `sender` does not have enough balance to transfer `(err u2)` -- `sender` and `recipient` are the same principal `(err u3)` -- amount to send is non-positive `(err u4)` -- the `sender` principal is not the current `tx-sender`\n**example:**\nCopy```\n(as-contract  (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)) ;; Returns (ok true)\n(as-contract  (stx-transfer? u60 tx-sender 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR)) ;; Returns (ok true)\n(as-contract  (stx-transfer? u50 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR tx-sender)) ;; Returns (err u4)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#to-consensus-buff)\nto-consensus-buff?‚Äã\nIntroduced in: **Clarity 2**\n**input:** `any`\n**output:** `(optional buff)`\n**signature:** `(to-consensus-buff? value)`\n**description:**\n`to-consensus-buff?` is a special function that will serialize any Clarity value into a buffer, using the SIP-005 serialization of the Clarity value. Not all values can be serialized: some value's consensus serialization is too large to fit in a Clarity buffer (this is because of the type prefix in the consensus serialization).\nIf the value cannot fit as serialized into the maximum buffer size, this returns `none`, otherwise, it will be `(some consensus-serialized-buffer)`. During type checking, the analyzed type of the result of this method will be the maximum possible consensus buffer length based on the inferred type of the supplied value.\n**example:**\nCopy```\n(to-consensus-buff? 1) ;; Returns (some 0x0000000000000000000000000000000001)\n(to-consensus-buff? u1) ;; Returns (some 0x0100000000000000000000000000000001)\n(to-consensus-buff? true) ;; Returns (some 0x03)\n(to-consensus-buff? false) ;; Returns (some 0x04)\n(to-consensus-buff? none) ;; Returns (some 0x09)\n(to-consensus-buff? 'SZ2J6ZY48GV1EZ5V2V5RB9MP66SW86PYKKQ9H6DPR) ;; Returns (some 0x051fa46ff88886c2ef9762d970b4d2c63678835bd39d)\n(to-consensus-buff? { abc: 3, def: 4 }) ;; Returns (some 0x0c00000002036162630000000000000000000000000000000003036465660000000000000000000000000000000004)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#to-int)\nto-int‚Äã\nIntroduced in: **Clarity 1**\n**input:** `uint`\n**output:** `int`\n**signature:** `(to-int u)`\n**description:**\nTries to convert the `uint` argument to an `int`. Will cause a runtime error and abort if the supplied argument is >= `pow(2, 127)`\n**example:**\nCopy```\n(to-int u238) ;; Returns 238\n```\n\n## \n[](https://docs.stacks.co/reference/functions#to-uint)\nto-uint‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int`\n**output:** `uint`\n**signature:** `(to-uint i)`\n**description:**\nTries to convert the `int` argument to a `uint`. Will cause a runtime error and abort if the supplied argument is negative.\n**example:**\nCopy```\n(to-uint 238) ;; Returns u238\n```\n\n## \n[](https://docs.stacks.co/reference/functions#try)\ntry!\nIntroduced in: **Clarity 1**\n**input:** `(optional A) | (response A B)`\n**output:** `A`\n**signature:** `(try! option-input)`\n**description:**\nThe `try!` function attempts to 'unpack' the first argument: if the argument is an option type, and the argument is a `(some ...)` option, `try!` returns the inner value of the option. If the argument is a response type, and the argument is an `(ok ...)` response, `try!` returns the inner value of the `ok`. If the supplied argument is either an `(err ...)` or a `none` value, `try!` _returns_ either `none` or the `(err ...)` value from the current function and exits the current control-flow.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(try! (map-get? names-map { name: \"blockstack\" })) ;; Returns (tuple (id 1337))\n(define-private (checked-even (x int))  \n  (if (is-eq (mod x 2) 0)      \n    (ok x)      \n    (err false)))\n(define-private (double-if-even (x int))  \n  (ok (* 2 (try! (checked-even x)))))\n(double-if-even 10) ;; Returns (ok 20)\n(double-if-even 3) ;; Returns (err false)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#tuple)\ntuple‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(key-name A), (key-name-2 B), ...`\n**output:** `(tuple (key-name A) (key-name-2 B) ...)`\n**signature:** `(tuple (key0 expr0) (key1 expr1) ...)`\n**description:**\nThe `tuple` special form constructs a typed tuple from the supplied key and expression pairs. A `get` function can use typed tuples as input to select specific values from a given tuple. Key names may not appear multiple times in the same tuple definition. Supplied expressions are evaluated and associated with the expressions' paired key name.\nThere is a shorthand using curly brackets of the form {key0: expr0, key1: expr, ...}\n**example:**\nCopy```\n(tuple (name \"blockstack\") \n(id 1337)) ;; using tuple    \n{name: \"blockstack\", id: 1337} ;; using curly brackets\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap)\nunwrap!\nIntroduced in: **Clarity 1**\n**input:** `(optional A) | (response A B), C`\n**output:** `A`\n**signature:** `(unwrap! option-input thrown-value)`\n**description:**\nThe `unwrap!` function attempts to 'unpack' the first argument: if the argument is an option type, and the argument is a `(some ...)` option, `unwrap!` returns the inner value of the option. If the argument is a response type, and the argument is an `(ok ...)` response, `unwrap!` returns the inner value of the `ok`. If the supplied argument is either an `(err ...)` or a `(none)` value, `unwrap!` _returns_ `thrown-value` from the current function and exits the current control-flow.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(define-private (get-name-or-err (name (string-ascii 12)))  \n  (let ( (raw-name (unwrap! (map-get? names-map { name: name }) (err 1))))       \n  (ok raw-name)))\n(get-name-or-err \"blockstack\") ;; Returns (ok (tuple (id 1337)))\n(get-name-or-err \"non-existant\") ;; Returns (err 1)\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap-err)\nunwrap-err!\nIntroduced in: **Clarity 1**\n**input:** `(response A B), C`\n**output:** `B`\n**signature:** `(unwrap-err! response-input thrown-value)`\n**description:**\nThe `unwrap-err!` function attempts to 'unpack' the first argument: if the argument is an `(err ...)` response, `unwrap-err!` returns the inner value of the `err`. If the supplied argument is an `(ok ...)` value, `unwrap-err!` _returns_ `thrown-value` from the current function and exits the current control-flow.\n**example:**\nCopy```\n(unwrap-err! (err 1) false) ;; Returns 1\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap-err-panic)\nunwrap-err-panic‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(response A B)`\n**output:** `B`\n**signature:** `(unwrap-err-panic response-input)`\n**description:**\nThe `unwrap-err` function attempts to 'unpack' the first argument: if the argument is an `(err ...)` response, `unwrap` returns the inner value of the `err`. If the supplied argument is an `(ok ...)` value, `unwrap-err` throws a runtime error, aborting any further processing of the current transaction.\n**example:**\nCopy```\n(unwrap-err-panic (err 1)) ;; Returns 1\n(unwrap-err-panic (ok 1)) ;; Throws a runtime exception\n```\n\n## \n[](https://docs.stacks.co/reference/functions#unwrap-panic)\nunwrap-panic‚Äã\nIntroduced in: **Clarity 1**\n**input:** `(optional A) | (response A B)`\n**output:** `A`\n**signature:** `(unwrap-panic option-input)`\n**description:**\nThe `unwrap` function attempts to 'unpack' its argument: if the argument is an option type, and the argument is a `(some ...)` option, this function returns the inner value of the option. If the argument is a response type, and the argument is an `(ok ...)` response, it returns the inner value of the `ok`. If the supplied argument is either an `(err ...)` or a `(none)` value, `unwrap` throws a runtime error, aborting any further processing of the current transaction.\n**example:**\nCopy```\n(define-map names-map { name: (string-ascii 12) } { id: int })\n(map-set names-map { name: \"blockstack\" } { id: 1337 })\n(unwrap-panic (map-get? names-map { name: \"blockstack\" })) ;; Returns (tuple (id 1337))\n(unwrap-panic (map-get? names-map { name: \"non-existant\" })) ;; Throws a runtime exception\n```\n\n## \n[](https://docs.stacks.co/reference/functions#use-trait)\nuse-trait‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, TraitIdentifier`\n**output:** `Not Applicable`\n**signature:** `(use-trait trait-alias trait-identifier)`\n**description:**\n`use-trait` is used to bring a trait, defined in another contract, to the current contract. Subsequent references to an imported trait are signaled with the syntax `<trait-alias>`.\nTraits import are defined with a name, used as an alias, and a trait identifier. Trait identifiers can either be using the sugared syntax (.token-a.token-trait), or be fully qualified ('SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait).\nLike other kinds of definition statements, `use-trait` may only be used at the top level of a smart contract definition (i.e., you cannot put such a statement in the middle of a function body).\n**example:**\nCopy```\n(use-trait token-a-trait 'SPAXYA5XS51713FDTQ8H94EJ4V579CXMTRNBZKSF.token-a.token-trait)\n(define-public (forward-get-balance (user principal) (contract <token-a-trait>))  \n  (begin (ok 1)))\n```\n\n## \n[](https://docs.stacks.co/reference/functions#var-get)\nvar-get‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName`\n**output:** `A`\n**signature:** `(var-get var-name)`\n**description:**\nThe `var-get` function looks up and returns an entry from a contract's data map. The value is looked up using `var-name`.\n**example:**\nCopy```\n(define-data-var cursor int 6)\n(var-get cursor) ;; Returns 6\n```\n\n## \n[](https://docs.stacks.co/reference/functions#var-set)\nvar-set‚Äã\nIntroduced in: **Clarity 1**\n**input:** `VarName, AnyType`\n**output:** `bool`\n**signature:** `(var-set var-name expr1)`\n**description:**\nThe `var-set` function sets the value associated with the input variable to the inputted value. The function always returns `true`.\n**example:**\nCopy```\n(define-data-var cursor int 6)\n(var-get cursor) ;; Returns 6\n(var-set cursor (+ (var-get cursor) 1)) ;; Returns true\n(var-get cursor) ;; Returns 7\n```\n\n## \n[](https://docs.stacks.co/reference/functions#xor)\nxor‚Äã\nIntroduced in: **Clarity 1**\n**input:** `int, int | uint, uint | string-ascii, string-ascii | string-utf8, string-utf8 | buff, buff`\n**output:** `int | uint`\n**signature:** `(xor i1 i2)`\n**description:**\nReturns the result of bitwise exclusive or'ing `i1` with `i2`.\n**example:**\nCopy```\n(xor 1 2) ;; Returns 3\n(xor 120 280) ;; Returns 352\n```\n\n[PreviousClarity Types](https://docs.stacks.co/reference/types)[NextClarity Keywords](https://docs.stacks.co/reference/keywords)\nLast updated 2 months ago\nWas this helpful?\n",
      "wordCount": 15427,
      "title": "Clarity Functions | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/stacks-101/accounts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/concepts/network-fundamentals/accounts#introduction)\n  * [Creation](https://docs.stacks.co/concepts/network-fundamentals/accounts#creation)\n\n\nWas this helpful?\nCopy\n  1. [üß†Concepts](https://docs.stacks.co/concepts)\n  2. [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n\n\n# Accounts\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/accounts#introduction)\nIntroduction\nStacks uses an accounts-based model, more similar to Ethereum, rather than a [UTXO](https://learnmeabitcoin.com/technical/transaction/utxo/) model like Bitcoin. In a UTXO model, the network operates as a ledger, with each UTXO being analagous to a cash bill.\nWith an accounts-based model, each account is associated with a balance and that balance can be added to or subtracted from.\nStacks accounts are entities that own assets, like Stacks (STX) tokens. An account has an address, private key, nonce, and one or more asset balances.\nThe cryptographic signature algorithm used in Stacks is [**secp256k1**](https://en.bitcoinwiki.org/wiki/Secp256k1).\nAdditionally, [Ed25519](https://ed25519.cr.yp.to/) is also used just for the VRF (Verifiable Random Function).\nAssets cannot leave an account without an action from the account owner. All changes to assets (and the balances of the account) require a corresponding transaction.\nThe transaction type doesn't need to be a token transfer - contract deploy and contract call transactions can change the balances of an account\n### \n[](https://docs.stacks.co/concepts/network-fundamentals/accounts#creation)\nCreation\nAn account is generated from a 24-word mnemonic phrase. This is often referred to as the **seed phrase**. The seed phrase provides access to Stacks accounts.\nIf the seed phrase is lost, access to the associated account cannot be restored. No person or organization can recover a lost seed phrase.\nThe easiest way to generate a new Stacks account is to use the [Stacks CLI](https://github.com/hirosystems/stacks.js/tree/master/packages/cli):\nCopy```\n# install CLI globally\nnpminstall--global@stacks/cli\n# generate a new account and store details in a new file\n# '-t' option makes this a testnet account\nstxmake_keychain-t>cli_keychain.json\n```\n\n`make_keychain` creates the following file:\nCopy```\n{\n  \"mnemonic\": \"aaa bbb ccc ddd ...\",\n  \"keyInfo\": {\n    \"privateKey\": \"5a3f1f15245bb3fb...\",\n    \"address\": \"STJRM2AMVF90ER6G3RW1QTF85E3HZH37006D5ER1\",\n    \"btcAddress\": \"biwSd6KTEvJcyX2R8oyfgj5REuLzczMYC1\",\n    \"wif\": \"L4HXn7PLmzoNW...\",\n    \"index\": 0\n  }\n}\n```\n\nCheck out the [Stacks CLI reference](https://docs.hiro.so/references/stacks-cli) for more details\nField\nDescription\n`mnemonic`\nA 24-word seed phrase used to access the account, generated using [BIP39](https://github.com/bitcoin/bips/blob/master/bip-0039.mediawiki) with 256 bits of entropy\n`keyInfo.privateKey`\nPrivate key for the account. Required for token transfers and often referred to as `senderKey`\n`keyInfo.address`\nStacks address for the account\n`keyInfo.btcAddress`\nCorresponding BTC address for the account.\n`keyInfo.wif`\nPrivate key of the btcAddress in compressed format.\n`keyInfo.index`\nNonce for the account, starting at 0\nNote that a new account automatically exists for each new private key. There is no need to manually instantiate an account on the Stacks blockchain.\nAddresses are created by generating the [RIPEMD-160 hash](https://en.wikipedia.org/wiki/RIPEMD#RIPEMD-160_hashes) of the [SHA256](https://en.bitcoinwiki.org/wiki/SHA-256) of the public key. BTC addresses are encoded with [Base58Check](https://en.bitcoin.it/wiki/Base58Check_encoding). For Stacks addresses, [c32check](https://github.com/stacks-network/c32check) is used. Deriving an address from a public key can be done without internet access, for instance using the c32check `c32addressDecode` method.\nAlternatively to the CLI creation, the [Stacks Transactions JS](https://github.com/hirosystems/stacks.js/tree/master/packages/transactions) library can be used:\nCopy```\nimport {\n  makeRandomPrivKey,\n  privateKeyToString,\n  getAddressFromPrivateKey,\n  TransactionVersion,\n  getPublicKey,\n} from \"@stacks/transactions\";\nconst privateKey = makeRandomPrivKey();\n// Get public key from private\nconst publicKey = getPublicKey(privateKey);\nconst stacksAddress = getAddressFromPrivateKey(\n  privateKeyToString(privateKey),\n  TransactionVersion.Testnet // remove for Mainnet addresses\n);\n```\n\nFinally, you can generate new account using a Stacks-enabled wallet like [Leather](https://leather.io/), [Xverse](https://www.xverse.app/), or [Asigna](https://asigna.io/).\n[PreviousMainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)[NextAuthentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 1047,
      "title": "Accounts | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Fast Blocks](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes#fast-blocks)\n  * [Bitcoin MEV Mitigation](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes#bitcoin-mev-mitigation)\n\n\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n\n\n# Nakamoto in 10 Minutes\nOn the previous page, we outlined three primary changes to the way Stacks works that Nakamoto introduces:\n  * **Fast blocks:** The time taken for a user-submitted transaction to be mined within a block (and thus confirmed) will now take on the order of seconds, instead of tens of minutes. This is achieved by separating block production from cryptographic sortitions -- a winning miner may produce many blocks between two subsequent sortitions.\n  * **Bitcoin finality:** Once a transaction is confirmed, reversing it is at least as hard as reversing a Bitcoin transaction. The Stacks blockchain no longer forks on its own.\n  * **Bitcoin Miner MEV Resistance:** This proposal alters the sortition algorithm to ensure that Bitcoin miners do not have an advantage as Stacks miners. They must spend competitive amounts of Bitcoin currency to have a chance of earning STX.\n\n\nHere is a video that covers exactly what happens to a Stacks transaction under Nakamoto rules. In it we cover exactly how Nakamoto achieves Bitcoin finality.\nIn the rest of this doc, we'll cover some of the key components of Nakamoto in a bit more detail.\nFore a more detailed technical explanation of how this is all accomplished, check out the [Block Production](https://docs.stacks.co/concepts/block-production) section.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes#fast-blocks)\nFast Blocks\nOne of the most significant changes coming in Nakamoto is how new blocks are produced. Historically, because Stacks blocks have been anchored 1:1 to Bitcoin blocks, slow block times and transaction times have been one of the biggest pain points for Stacks users and developers.\nNakamoto brings significantly faster block times by decoupling Stacks block production from Bitcoin block production. In Nakamoto, new Stacks blocks are produced roughly every 5 seconds.\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes#tenure-based-block-production)\nTenure-Based Block Production\nThis is achieved via the use of tenure-based block production. Each Bitcoin block introduces a new tenure, in which a single miner cryptographically selected for that tenure is responsible for producing all Stacks blocks.\nRather than single Stacks blocks being tied to a single Bitcoin block, Bitcoin blocks are now tied to a miner tenure, during which they mine several Stacks blocks which settle in around 5 seconds.\nBut if a single miner is only cryptographically selected for their tenure, and not their produced blocks, what mechanisms exist to ensure the validity of their block production?\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes#stackers)\nStackers\nThis is where Stackers come in. In pre-Nakamoto Stacks, Stackers were responsible only for locking their STX tokens to contribute to the economic security of the network.\nIn Nakamoto, Stackers are responsible for validating and approving each block produced during a miner's tenure.\nTo ensure network consistency, the Stacks protocol commits to the state of the Stacks blockchain with each new Bitcoin block by referencing the first Stacks block produced in the previous tenure. Such a design reinforces the fidelity of transaction data and the synchronization between the two chains. It also links the Stacker‚Äôs actions with the actions of miners producing a partnership between the two to create both fast and secure blocks.\nAs part of this tenure change, Stackers also agree on a last signed block and require the next miner to build off of this, which prevents new Stacks forks. Stacks does not fork on its own and automatically forks with Bitcoin.\nThis symbiotic relationship between Stackers and miners is what creates the capability for both fast blocks and 100% Bitcoin finality.\nThis elegant design creates a cooperative relationship between miners and stackers while achieving the best of both worlds with block production and transaction speed and security.\nHere is a diagram outlining miner and signer behavior.\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FQF91BMT7nVSvNmQdM2Tu%252Fimage.png%3Falt%3Dmedia%26token%3D87fda736-16b1-42b6-af99-693a8183e50c&width=768&dpr=4&quality=100&sign=19669dc1&sv=2)\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes#bitcoin-mev-mitigation)\nBitcoin MEV Mitigation\nMiner Extractable Value (MEV) has been a longstanding issue across many blockchains, including Stacks pre-Nakamoto.\nMEV refers to the potential profit miners can extract from the manipulation of transaction inclusion and ordering within the blocks they produce, which can lead to unfair practices and diminished trust in the network.\nSpecifically in pre-Nakamoto releases of Stacks, Bitcoin miners with a significant percentage of Bitcoin‚Äôs hashrate had the ability to censor commitment transactions of other Stacks miners ensuring they were able to win the block rewards and fees of Stacks blocks where they were also the winner of the Bitcoin block as a Bitcoin miner.\nThe Nakamoto system uses a variation of the Assumed Total Commitment with Carryforward (ATC-C) MEV mitigation strategy described in [this document](https://github.com/stacksgov/sips/blob/main/sips/sip-021/MEV-Report.pdf) to allocate block rewards to miners. The probability a miner will win the block and be granted the current tenure will be based on a function that accounts for the total block commit spend on the blocks leading up to the current block.\nThe ATC solution leaves the option for a block to have no valid winner. The TenureChange-Extend transaction mitigates the majority of adverse effects caused by a missed block.\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 1349,
      "title": "Nakamoto in 10 Minutes | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/reference",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Introduction](https://docs.stacks.co/reference/api#introduction)\n  * [Stacks Node RPC API endpoints](https://docs.stacks.co/reference/api#stacks-node-rpc-api-endpoints)\n  * [GETGet contract interface](https://docs.stacks.co/reference/api#get-v2-contracts-interface-contract_address-contract_name)\n  * [POSTBroadcast raw transaction](https://docs.stacks.co/reference/api#post-v2-transactions)\n  * [POSTGet specific data-map inside a contract](https://docs.stacks.co/reference/api#post-v2-map_entry-contract_address-contract_name-map_name)\n  * [POSTUpload a Nakamoto block](https://docs.stacks.co/reference/api#post-v3-blocks-upload)\n  * [POSTQuery mempool for missing transactions](https://docs.stacks.co/reference/api#post-v2-mempool-query)\n  * [POSTUpload a Stacks block](https://docs.stacks.co/reference/api#post-v2-blocks-upload-consensus_hash)\n  * [GETGet unconfirmed transaction](https://docs.stacks.co/reference/api#get-v2-transactions-unconfirmed-txid)\n  * [GETGet tenure tip](https://docs.stacks.co/reference/api#get-v3-tenures-tip-consensus_hash)\n  * [GETGet tenure fork information](https://docs.stacks.co/reference/api#get-v3-tenures-fork_info-start-stop)\n  * [GETGet neighbor peers](https://docs.stacks.co/reference/api#get-v2-neighbors)\n  * [GETGet Stacks 2.x block by ID](https://docs.stacks.co/reference/api#get-v2-blocks-block_id)\n  * [GETGet recent 2.x block headers](https://docs.stacks.co/reference/api#get-v2-headers-quantity)\n  * [GETGet contract data variable](https://docs.stacks.co/reference/api#get-v2-data_var-principal-contract_name-var_name)\n  * [GETList StackerDB replicas](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-replicas)\n  * [POSTWrite StackerDB chunk](https://docs.stacks.co/reference/api#post-v2-stackerdb-principal-contract_name-chunks)\n  * [GETGet StackerDB metadata](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name)\n  * [GETGet StackerDB chunk (specific version)](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id-slot_version)\n  * [GETGet StackerDB chunk (latest version)](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id)\n  * [POSTSubmit a microblock (Epoch 2.x)](https://docs.stacks.co/reference/api#post-v2-microblocks)\n  * [GETGet stream of unconfirmed microblocks (Epoch 2.x)](https://docs.stacks.co/reference/api#get-v2-microblocks-unconfirmed-block_id-seq)\n  * [GETGet a stream of microblocks beginning with the given microblock (Epoch 2.x). ](https://docs.stacks.co/reference/api#get-v2-microblocks-microblock_id)\n  * [GETGet stream of confirmed microblocks (Epoch 2.x)](https://docs.stacks.co/reference/api#get-v2-microblocks-confirmed-block_id)\n  * [GETGet attachment inventory](https://docs.stacks.co/reference/api#get-v2-attachments-inv)\n  * [GETGet attachment by hash](https://docs.stacks.co/reference/api#get-v2-attachments-hash)\n  * [GETQuery the health of the node.](https://docs.stacks.co/reference/api#get-v3-health)\n  * [GETRetrieve transaction details by TXID](https://docs.stacks.co/reference/api#get-v3-transaction-txid)\n  * [GETGet number of blocks signed by signer during a given reward cycle](https://docs.stacks.co/reference/api#get-v3-signer-signer_pubkey-cycle_number)\n  * [GETGet sortition by burn block height](https://docs.stacks.co/reference/api#get-v3-sortitions-burn_height-height)\n  * [GETGet sortition by burn header hash](https://docs.stacks.co/reference/api#get-v3-sortitions-burn-burn_header_hash)\n  * [GETGet sortition by consensus hash](https://docs.stacks.co/reference/api#get-v3-sortitions-consensus-consensus_hash)\n  * [GETGet latest and last winning sortitions](https://docs.stacks.co/reference/api#get-v3-sortitions-latest_and_last)\n  * [GETGet latest sortition information](https://docs.stacks.co/reference/api#get-v3-sortitions)\n  * [GETFetch a sequence of Nakamoto blocks in a tenure](https://docs.stacks.co/reference/api#get-v3-tenures-block_id)\n  * [GETFetch metadata about the ongoing Nakamoto tenure](https://docs.stacks.co/reference/api#get-v3-tenures-info)\n  * [GETFetch a Nakamoto block by its height and optional tip](https://docs.stacks.co/reference/api#get-v3-blocks-height-block_height)\n  * [GETGet Nakamoto block by ID](https://docs.stacks.co/reference/api#get-v3-blocks-block_id)\n  * [GETFetch the stacker and signer set information for a given cycle.](https://docs.stacks.co/reference/api#get-v3-stacker_set-cycle_number)\n  * [POSTValidate a proposed Stacks block](https://docs.stacks.co/reference/api#post-v3-block_proposal)\n  * [GETGet the value of a constant inside a contract](https://docs.stacks.co/reference/api#get-v2-constant_val-contract_address-contract_name-constant_name)\n  * [GETGet the contract metadata for the metadata key](https://docs.stacks.co/reference/api#get-v2-clarity-metadata-contract_address-contract_name-clarity_metadata_key)\n  * [GETGet the MARF value for a given key](https://docs.stacks.co/reference/api#get-v2-clarity-marf-marf_key_hash)\n  * [GETGet trait implementation details](https://docs.stacks.co/reference/api#get-v2-traits-contract_address-contract_name-trait_contract_address-trait_contract_name-trait_name)\n  * [GETGet PoX details](https://docs.stacks.co/reference/api#get-v2-pox)\n  * [GETGet Core API info](https://docs.stacks.co/reference/api#get-v2-info)\n  * [GETGet estimated fee](https://docs.stacks.co/reference/api#get-v2-fees-transfer)\n  * [POSTGet approximate fees for the given transaction](https://docs.stacks.co/reference/api#post-v2-fees-transaction)\n  * [GETGet account info](https://docs.stacks.co/reference/api#get-v2-accounts-principal)\n  * [POSTCall read-only function in fast mode (no cost and memory tracking)](https://docs.stacks.co/reference/api#post-v3-contracts-fast-call-read-contract_address-contract_name-function_name)\n  * [POSTCall read-only function](https://docs.stacks.co/reference/api#post-v2-contracts-call-read-contract_address-contract_name-function_name)\n  * [GETGet contract source](https://docs.stacks.co/reference/api#get-v2-contracts-source-contract_address-contract_name)\n\n\nWas this helpful?\nCopy\n  1. [üìöReference](https://docs.stacks.co/reference)\n\n\n# API\n### \n[](https://docs.stacks.co/reference/api#introduction)\nIntroduction\nThe Stacks Blockchain API allows you to query the Stacks blockchain and interact with smart contracts. It was built to maintain pageable materialized views of the Stacks Blockchain.\nNote that the [Stacks Node RPC API](https://github.com/stacks-network/stacks-blockchain/) and the [Hiro Stacks API](https://www.hiro.so/stacks-api) are two different things. The Hiro API is a centralized service run by Hiro, a developer tooling company, that makes it easy to get onboarded and begin interacting with the Stacks blockchain in a RESTful way. You can also [run your own API server](https://docs.hiro.so/get-started/running-api-node).\nThe Hiro Stacks API is a proxy for the Stacks Node API that makes it a bit easier to work with by providing additional functionality.\nThe RPC API is generated by every Stacks node and allows developers to self-host their own node and API for a more decentralized architecture.\nThe RPC API can be used without any authorization. The basepath for the API is:\nCopy```\n# for mainnet, replace `testnet` with `mainnet`\nhttps://api.testnet.hiro.so/\n```\n\nIf you run a local node, it exposes an HTTP server on port `20443`. The info endpoint would be `localhost:20443/v2/info`.\n### \n[](https://docs.stacks.co/reference/api#stacks-node-rpc-api-endpoints)\nStacks Node RPC API endpoints\nThe Stacks 2.0 Blockchain API (Hiro's API) is centrally hosted. However, every running Stacks node exposes an RPC API, which allows you to interact with the underlying blockchain. Instead of using a centrally hosted API, you can directly access the RPC API of a locally hosted Node.\n### \n[](https://docs.stacks.co/reference/api#get-v2-contracts-interface-contract_address-contract_name)\nGet contract interface\nget\nhttp://localhost:20443/v2/contracts/interface/{contract_address}/{contract_name}\nGet contract interface using a `contract_address` and `contract name`\nResponses\n200\nContract interface\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/contracts/interface/{contract_address}/{contract_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/contracts/interface/{contract_address}/{contract_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nContract interface\nCopy```\n{\n  \"$ref\": \"./components/examples/contract-interface.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-transactions)\nBroadcast raw transaction\npost\nhttp://localhost:20443/v2/transactions\nBroadcast raw transactions on the network. You can use the [@stacks/transactions](https://github.com/blockstack/stacks.js) project to generate a raw transaction payload.\nThe node performs static validation checks on transactions before accepting them into the mempool, including:\n  * Transaction format validation\n  * Signature verification\n  * Nonce checking\n  * Fee validation\n  * Size limits\n\n\nBody\napplication/octet-stream\napplication/octet-stream application/json\nstring ¬∑ binaryOptional\nResponses\n200\nTransaction ID of successful post of a raw tx to the node's mempool.\napplication/json\nResponsestringExample: `e161978626f216b2141b156ade10501207ae535fa365a13ef5d7a7c9310a09f2`Pattern: `^[0-9a-f]{64}$`\n400\nBad request\napplication/json\n500\nInternal Server Error\ntext/plain\npost\n/v2/transactions\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/transactions HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 379\n\"binary format of 00000000010400bed38c2aadffa348931bcb542880ff79d607afec000000000000000000000000000000c800012b0b1fff6cccd0974966dcd665835838f0985be508e1322e09fb3d751eca132c492bda720f9ef1768d14fdabed6127560ba52d5e3ac470dcb60b784e97dc88c9030200000000000516df0ba3e79792be7be5e50a370289accfc8c9e032000000000000303974657374206d656d6f00000000000000000000000000000000000000000000000000\"\n```\n\napplication/octet-stream\napplication/octet-stream application/json\nTest it\n200\nTransaction ID of successful post of a raw tx to the node's mempool.\nCopy```\ne161978626f216b2141b156ade10501207ae535fa365a13ef5d7a7c9310a09f2\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-map_entry-contract_address-contract_name-map_name)\nGet specific data-map inside a contract\npost\nhttp://localhost:20443/v2/map_entry/{contract_address}/{contract_name}/{map_name}\nAttempt to fetch data from a contract data map. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The map is identified with [Map Name].\nThe key to lookup in the map is supplied via the POST body. This should be supplied as the hex string serialization of the key (which should be a Clarity value). Note, this is a JSON string.\nThe response is a JSON object with the following properties:\n  * `data`: The hex serialization of the map response. Note that map responses are Clarity option types, for non-existent values, this is a serialized none, and for all other responses, it is a serialized (some ...) object.\n  * `proof`: The hex serialization of the Merkle proof for the data.\n\n\nPath parameters\nmap_nameanyRequired\nBody\napplication/json\napplication/json\nstringOptional\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/map_entry/{contract_address}/{contract_name}/{map_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/map_entry/{contract_address}/{contract_name}/{map_name} HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\nContent-Length: 6\n\"text\"\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v3-blocks-upload)\nUpload a Nakamoto block\npost\nhttp://localhost:20443/v3/blocks/upload\nUpload a Nakamoto block to the node for processing.\n  * **Body** - must be the binary (SIP-003) serialization of a `NakamotoBlock`.\n  * **Authentication** - only required when the query parameter `broadcast=1` is supplied. In that case the caller **must** include an `Authorization` header.\n\n\nrpcAuth\nrpcAuth\nQuery parameters\nbroadcaststring ¬∑ enumOptional\nIf set to `\"1\"` the node will broadcast the uploaded block to peers. When present the request must include a valid `Authorization` header.\nPossible values: `1`\nBody\napplication/octet-stream\napplication/octet-stream\nstring ¬∑ binaryOptional\nBinary SIP-003 encoding of a `NakamotoBlock`\nResponses\n200\nBlock upload result.\napplication/json\nResponseanyExample: `{\"stacks_block_id\":\"abc123...\",\"accepted\":true}`\n400\nBad request\ntext/plain\n401\nUnauthorized. Invalid or missing authentication token.\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v3/blocks/upload\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v3/blocks/upload HTTP/1.1\nHost: localhost:20443\nauthorization: YOUR_API_KEY\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 8\n\"binary\"\n```\n\nTest it\n200\nBlock upload result.\nCopy```\n{\n  \"stacks_block_id\": \"abc123...\",\n  \"accepted\": true\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-mempool-query)\nQuery mempool for missing transactions\npost\nhttp://localhost:20443/v2/mempool/query\nQuery the mempool for transactions that might be missing from the requesting node. This endpoint supports pagination and streaming of transaction data.\nQuery parameters\npage_idstringOptional\nTransaction ID to start pagination from\nPattern: `^[0-9a-f]{64}$`\nBody\napplication/octet-stream\napplication/octet-stream\nBinary SIP-003 encoding of `MemPoolSyncData` (`BloomFilter` or `TxTags` variants).\ntransactionsstring[]Optional\nTransaction IDs\nResponses\n200\nStream of missing transactions\napplication/octet-stream\nResponsestring ¬∑ binary\nBinary stream of transactions and pagination data. The stream contains serialized transactions followed by a page ID for continuation.\n400\nBad request\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/mempool/query\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/mempool/query HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 25\n{\n  \"transactions\": [\n    \"text\"\n  ]\n}\n```\n\nTest it\n200\nStream of missing transactions\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-blocks-upload-consensus_hash)\nUpload a Stacks block\npost\nhttp://localhost:20443/v2/blocks/upload/{consensus_hash}\nUpload a Stacks block to the node for processing. The block must be in binary format and associated with the given consensus hash.\nPath parameters\nconsensus_hashstringRequired\nConsensus hash (40 hex characters)\nPattern: `^[0-9a-f]{40}$`\nBody\napplication/octet-stream\napplication/octet-stream\nstring ¬∑ binaryOptional\nBinary-encoded Stacks block\nResponses\n200\nBlock upload result\napplication/json\nResponseanyExample: `{\"stacks_block_id\":\"abc123...\",\"accepted\":true}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/blocks/upload/{consensus_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/blocks/upload/{consensus_hash} HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 8\n\"binary\"\n```\n\nTest it\n200\nBlock upload result\nCopy```\n{\n  \"stacks_block_id\": \"abc123...\",\n  \"accepted\": true\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-transactions-unconfirmed-txid)\nGet unconfirmed transaction\nget\nhttp://localhost:20443/v2/transactions/unconfirmed/{txid}\nGet an unconfirmed transaction by its transaction ID. This looks in both the mempool and unconfirmed microblock stream.\nPath parameters\ntxidstringRequired\nTransaction ID (64 hexadecimal characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nUnconfirmed transaction details\napplication/json\nResponseanyExample: `{\"tx\":\"800000000004...\",\"status\":\"Mempool\"}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/transactions/unconfirmed/{txid}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/transactions/unconfirmed/{txid} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nUnconfirmed transaction details\nCopy```\n{\n  \"tx\": \"800000000004...\",\n  \"status\": \"Mempool\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-tip-consensus_hash)\nGet tenure tip\nget\nhttp://localhost:20443/v3/tenures/tip/{consensus_hash}\nGet the tip block of a tenure identified by consensus hash.\nPath parameters\nconsensus_hashstringRequired\nConsensus hash (40 characters)\nPattern: `^[0-9a-f]{40}$`\nResponses\n200\nTenure tip block information\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/tenures/tip/{consensus_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/tip/{consensus_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nTenure tip block information\nCopy```\n{\n  \"$ref\": \"./components/examples/get-tenure-tip.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-fork_info-start-stop)\nGet tenure fork information\nget\nhttp://localhost:20443/v3/tenures/fork_info/{start}/{stop}\nGet information about tenure forking between two consensus hashes. This is used to identify conflicting tenures in the Nakamoto consensus.\nPath parameters\nstartstringRequired\nStarting consensus hash (40 hexadecimal characters, without 0x prefix)\nPattern: `^[0-9a-f]{40}$`\nstopstringRequired\nStopping consensus hash (40 hexadecimal characters, without 0x prefix)\nPattern: `^[0-9a-f]{40}$`\nResponses\n200\nOrdered list of tenure fork events from `stop` back to (and including) `start`\napplication/json\nResponseany[]\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/tenures/fork_info/{start}/{stop}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/fork_info/{start}/{stop} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nOrdered list of tenure fork events from `stop` back to (and including) `start`\nCopy```\n[]\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-neighbors)\nGet neighbor peers\nget\nhttp://localhost:20443/v2/neighbors\nGet information about the node\"s neighbor peers in the network.\nResponses\n200\nList of neighbor peers\napplication/json\nResponseany\nget\n/v2/neighbors\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/neighbors HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nList of neighbor peers\nCopy```\n{\n  \"$ref\": \"./components/examples/network-peers.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-blocks-block_id)\nGet Stacks 2.x block by ID\nget\nhttp://localhost:20443/v2/blocks/{block_id}\nGet a specific Stacks 2.x era block by its block ID. This endpoint streams the block data from the filesystem storage where traditional Stacks blocks are stored as individual files.\n**Compatibility** : Works with all Stacks 2.x blocks. For Nakamoto blocks (Stacks 3.x+), use `/v3/blocks/{block_id}`.\nPath parameters\nblock_idstringRequired\nHex-encoded block ID (64 characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nThe block data\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/blocks/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/blocks/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe block data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-headers-quantity)\nGet recent 2.x block headers\nget\nhttp://localhost:20443/v2/headers/{quantity}\n**Deprecated** : This endpoint is deprecated since Nakamoto.** Stream (as a JSON array) up to `quantity` most recent anchored Stacks block headers. The result is ordered from the current tip backwards.\nPath parameters\nquantityinteger ¬∑ min: 1 ¬∑ max: 256Required\nNumber of headers to return (max 256)\nResponses\n200\nArray of block headers\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/headers/{quantity}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/headers/{quantity} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nArray of block headers\n```\n\nNo content\n\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-data_var-principal-contract_name-var_name)\nGet contract data variable\nget\nhttp://localhost:20443/v2/data_var/{principal}/{contract_name}/{var_name}\nFetch a data variable from a smart contract. Returns the raw hex-encoded value of the variable.\nPath parameters\nvar_namestringRequired\nVariable name\nResponses\n200\nThe data variable value\napplication/json\nResponseanyExample: `{\"$ref\":\"./components/examples/clarity-data.example.json\"}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/data_var/{principal}/{contract_name}/{var_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/data_var/{principal}/{contract_name}/{var_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe data variable value\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-replicas)\nList StackerDB replicas\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/replicas\nGet a list of replicas for a StackerDB instance.\nResponses\n200\nList of StackerDB replicas\napplication/json\nResponseanyExample: `[{\"ip\":\"127.0.0.1\",\"port\":20444,\"public_key_hash\":\"03abc123...\"}]`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}/replicas\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name}/replicas HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nList of StackerDB replicas\nCopy```\n[\n  {\n    \"ip\": \"127.0.0.1\",\n    \"port\": 20444,\n    \"public_key_hash\": \"03abc123...\"\n  }\n]\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-stackerdb-principal-contract_name-chunks)\nWrite StackerDB chunk\npost\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/chunks\nWrite a chunk of data to a StackerDB instance.\nThe request body should contain a JSON object with the chunk data including slot_id, slot_version, signature, and hex-encoded data.\nThe response indicates whether the chunk was accepted, and if not, provides detailed error information. Note that failed writes return HTTP 200 with accepted: false, not HTTP error codes.\nBody\napplication/json\napplication/json\nanyOptional\nResponses\n200\nChunk submission result (both success and failure cases)\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/stackerdb/{principal}/{contract_name}/chunks\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/stackerdb/{principal}/{contract_name}/chunks HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\nContent-Length: 74\n{\n  \"$ref\": \"./components/examples/stackerdb-chunk-data-request.example.json\"\n}\n```\n\nTest it\n200\nChunk submission result (both success and failure cases)\n```\n\nNo content\n\n```\n\nSuccessful chunk write\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name)\nGet StackerDB metadata\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}\nGet metadata about a StackerDB instance, including slot information.\nResponses\n200\nStackerDB metadata\napplication/json\nResponseanyExample: `[{\"slot_id\":0,\"slot_version\":1,\"data_hash\":\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\"signature\":\"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\"}]`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStackerDB metadata\nCopy```\n[\n  {\n    \"slot_id\": 0,\n    \"slot_version\": 1,\n    \"data_hash\": \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\",\n    \"signature\": \"0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef\"\n  }\n]\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id-slot_version)\nGet StackerDB chunk (specific version)\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/{slot_id}/{slot_version}\nGet a specific version of a chunk of data from a StackerDB instance.\nPath parameters\nslot_idintegerRequired\nSlot ID\nslot_versionintegerRequired\nSpecific slot version\nResponses\n200\nStackerDB chunk data\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}/{slot_id}/{slot_version}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name}/{slot_id}/{slot_version} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStackerDB chunk data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-stackerdb-principal-contract_name-slot_id)\nGet StackerDB chunk (latest version)\nget\nhttp://localhost:20443/v2/stackerdb/{principal}/{contract_name}/{slot_id}\nGet the latest version of a chunk of data from a StackerDB instance.\nPath parameters\nslot_idintegerRequired\nSlot ID\nResponses\n200\nStackerDB chunk data\napplication/octet-stream\nResponsestring ¬∑ binary\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/stackerdb/{principal}/{contract_name}/{slot_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/stackerdb/{principal}/{contract_name}/{slot_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStackerDB chunk data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-microblocks)\nSubmit a microblock (Epoch 2.x)\npost\nhttp://localhost:20443/v2/microblocks\nSubmit a microblock to the node for validation and relay. The body **must** be the SIP-003 binary serialization of a `Microblock` and sent with `Content-Type: application/octet-stream`.\nBody\napplication/octet-stream\napplication/octet-stream\nstring ¬∑ binaryOptional\nResponses\n200\nIndex-block hash of the accepted microblock\napplication/json\nResponsestring\n32-byte block-header hash (hex)\nPattern: `^[0-9a-f]{64}$`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/microblocks\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/microblocks HTTP/1.1\nHost: localhost:20443\nContent-Type: application/octet-stream\nAccept: */*\nContent-Length: 8\n\"binary\"\n```\n\nTest it\n200\nIndex-block hash of the accepted microblock\nCopy```\n3e4f5d6b7c8a9e0ff1122303445566778899aabbccddeeff0011223344556677\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-microblocks-unconfirmed-block_id-seq)\nGet stream of unconfirmed microblocks (Epoch 2.x)\nget\nhttp://localhost:20443/v2/microblocks/unconfirmed/{block_id}/{seq}\nGet unconfirmed microblocks starting from a specific sequence number. The microblocks are returned as a binary stream.\nPath parameters\nblock_idstringRequired\nHex-encoded parent block ID (64 characters)\nPattern: `^[0-9a-f]{64}$`\nseqinteger ¬∑ max: 65535Required\nStarting sequence number (0-65535)\nResponses\n200\nStream of unconfirmed microblocks\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/microblocks/unconfirmed/{block_id}/{seq}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/microblocks/unconfirmed/{block_id}/{seq} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStream of unconfirmed microblocks\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-microblocks-microblock_id)\nGet a stream of microblocks beginning with the given microblock (Epoch 2.x). \nget\nhttp://localhost:20443/v2/microblocks/{microblock_id}\nPath parameters\nmicroblock_idstringRequired\nHex-encoded microblock hash (64 characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nThe microblock data\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/microblocks/{microblock_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/microblocks/{microblock_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe microblock data\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-microblocks-confirmed-block_id)\nGet stream of confirmed microblocks (Epoch 2.x)\nget\nhttp://localhost:20443/v2/microblocks/confirmed/{block_id}\nGet microblocks that were confirmed by the given anchored block. The microblocks are returned as a binary stream of concatenated microblock data.\nPath parameters\nblock_idstringRequired\nHex-encoded Stacks block ID (64 characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nStream of confirmed microblocks\napplication/octet-stream\nResponsestring ¬∑ binary\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/microblocks/confirmed/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/microblocks/confirmed/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nStream of confirmed microblocks\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-attachments-inv)\nGet attachment inventory\nget\nhttp://localhost:20443/v2/attachments/inv\nGet inventory of attachments for a given index block hash and page range. This returns a bitfield indicating which attachments are available.\nQuery parameters\nindex_block_hashstringRequired\nHex-encoded index block hash (64 characters)\nPattern: `^[0-9a-f]{64}$`\npages_indexesstringRequired\nmax 8 pages per request\nExample: `1,2,3`Pattern: `^[0-9]+(,[0-9]+){0,7}$`\nResponses\n200\nAttachment inventory bitfield\napplication/json\nResponseanyExample: `{\"block_id\":\"0123456789abcdef0123456789abcdef0123456789abcdef\",\"pages\":[{\"index\":1,\"inventory\":[255,0,255,0]},{\"index\":2,\"inventory\":[0,255,0,255]}]}`\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/attachments/inv\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/attachments/inv?index_block_hash=text&pages_indexes=1%2C2%2C3 HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nAttachment inventory bitfield\nCopy```\n{\n  \"block_id\": \"0123456789abcdef0123456789abcdef0123456789abcdef\",\n  \"pages\": [\n    {\n      \"index\": 1,\n      \"inventory\": [\n        255,\n        0,\n        255,\n        0\n      ]\n    },\n    {\n      \"index\": 2,\n      \"inventory\": [\n        0,\n        255,\n        0,\n        255\n      ]\n    }\n  ]\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-attachments-hash)\nGet attachment by hash\nget\nhttp://localhost:20443/v2/attachments/{hash}\nGet an attachment by its hash. Attachments are content stored in the Atlas network.\nThe attachment hash is a 40-character hex string (SHA-1 hash).\nPath parameters\nhashstringRequired\nHex-encoded SHA-1 hash of the attachment (40 characters)\nPattern: `^[0-9a-f]{40}$`\nResponses\n200\nThe attachment content\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/attachments/{hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/attachments/{hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe attachment content\n```\n\nNo content\n\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-health)\nQuery the health of the node.\nget\nhttp://localhost:20443/v3/health\nGet node health information. A node is considered healthy if its Stacks tip height matches the maximum Stacks tip height observed among its connected peers. This endpoint returns:\n  * `difference_from_max_peer`: The difference in Stacks height between this node and its most advanced peer.\n  * `max_stacks_height_of_neighbors`: The maximum Stacks height observed among the node\"s connected peers.\n  * `node_stacks_tip_height`: The current Stacks tip height of this node.\n  * `max_stacks_neighbor_address`: The address of the most advanced peer. Null if no peer data is available.\n\n\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/health\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/health HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/node-health.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-transaction-txid)\nRetrieve transaction details by TXID\nget\nhttp://localhost:20443/v3/transaction/{txid}\nGet a JSON with the transaction details including the `index_block_hash`, the hex-encoded transaction body, and the `result`.\nPath parameters\ntxidstringRequired\nTransaction ID (64 hexadecimal characters)\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nTransaction JSON with index_block_hash, transaction body and result\napplication/json\nResponseany\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\n501\nTransaction indexing not enabled\ntext/plain\nget\n/v3/transaction/{txid}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/transaction/{txid} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nTransaction JSON with index_block_hash, transaction body and result\nCopy```\n{\n  \"$ref\": \"./components/examples/get-transaction.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-signer-signer_pubkey-cycle_number)\nGet number of blocks signed by signer during a given reward cycle\nget\nhttp://localhost:20443/v3/signer/{signer_pubkey}/{cycle_number}\nGet number of blocks signed by signer during a given reward cycle\nPath parameters\nsigner_pubkeystringRequired\nHex-encoded compressed Secp256k1 public key of signer\nPattern: `^0[23][0-9a-f]{64}$`\ncycle_numberintegerRequired\nReward cycle number\nResponses\n200\nNumber of blocks signed\napplication/json\nResponseany\nget\n/v3/signer/{signer_pubkey}/{cycle_number}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/signer/{signer_pubkey}/{cycle_number} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nNumber of blocks signed\nCopy```\n{\n  \"blocks_signed\": 7\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-burn_height-height)\nGet sortition by burn block height\nget\nhttp://localhost:20443/v3/sortitions/burn_height/{height}\nGet sortition information for a specific burn block height. Returns a single-element array with the matching sortition.\nPath parameters\nheightintegerRequired\nBurn block height (integer)\nResponses\n200\nSortition information for the burn block height\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/burn_height/{height}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/burn_height/{height} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSortition information for the burn block height\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-burn-burn_header_hash)\nGet sortition by burn header hash\nget\nhttp://localhost:20443/v3/sortitions/burn/{burn_header_hash}\nGet sortition information for a specific burn header hash. Returns a single-element array with the matching sortition.\nPath parameters\nburn_header_hashstringRequired\nHex-encoded burn header hash (64 characters)\nPattern: `^(0x)?[0-9a-f]{64}$`\nResponses\n200\nSortition information for the burn header hash\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/burn/{burn_header_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/burn/{burn_header_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSortition information for the burn header hash\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-consensus-consensus_hash)\nGet sortition by consensus hash\nget\nhttp://localhost:20443/v3/sortitions/consensus/{consensus_hash}\nGet sortition information for a specific consensus hash. Returns a single-element array with the matching sortition.\nPath parameters\nconsensus_hashstringRequired\nHex-encoded consensus hash (40 characters)\nPattern: `^(0x)?[0-9a-f]{40}$`\nResponses\n200\nSortition information for the consensus hash\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/consensus/{consensus_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/consensus/{consensus_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSortition information for the consensus hash\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions-latest_and_last)\nGet latest and last winning sortitions\nget\nhttp://localhost:20443/v3/sortitions/latest_and_last\nGet sortition information about the latest burn block with a winning miner AND the previous such burn block. Returns an array with two sortition objects.\nResponses\n200\nLatest and last sortition information\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions/latest_and_last\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions/latest_and_last HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nLatest and last sortition information\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions-latest-and-prior.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-sortitions)\nGet latest sortition information\nget\nhttp://localhost:20443/v3/sortitions\nGet sortition information about the latest burnchain block processed by this node. Returns a single-element array with the latest sortition.\nResponses\n200\nLatest sortition information\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/sortitions\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/sortitions HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nLatest sortition information\nCopy```\n{\n  \"$ref\": \"./components/examples/get-sortitions.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-block_id)\nFetch a sequence of Nakamoto blocks in a tenure\nget\nhttp://localhost:20443/v3/tenures/{block_id}\nFetch a sequence of Nakamoto blocks in a tenure. The blocks will be served in order from highest to lowest. The blocks will be encoded in their SIP-003 wire format, and concatenated together.\nPath parameters\nblock_idstringRequired\nThe tenure-start block ID of the tenure to query\nQuery parameters\nstopstringOptional\nThe block ID hash of the highest block in this tenure that is already known to the caller. Neither the corresponding block nor any of its ancestors will be served. This is used to fetch tenure blocks that the caller does not have.\nResponses\n200\nSIP-003-encoded Nakamoto blocks, concatenated together\napplication/octet-stream\nResponsestring ¬∑ binary\nget\n/v3/tenures/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSIP-003-encoded Nakamoto blocks, concatenated together\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-tenures-info)\nFetch metadata about the ongoing Nakamoto tenure\nget\nhttp://localhost:20443/v3/tenures/info\nFetch metadata about the ongoing Nakamoto tenure. This information is sufficient to obtain and authenticate the highest complete tenure, as well as obtain new tenure blocks.\nResponses\n200\nMetadata about the ongoing tenure\napplication/json\nResponseany\nget\n/v3/tenures/info\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/tenures/info HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nMetadata about the ongoing tenure\nCopy```\n{\n  \"$ref\": \"./components/examples/get-tenure-info.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-blocks-height-block_height)\nFetch a Nakamoto block by its height and optional tip\nget\nhttp://localhost:20443/v3/blocks/height/{block_height}\nFetch a Nakamoto block by its height and optional tip.\nPath parameters\nblock_heightintegerRequired\nThe block's height\nResponses\n200\nThe raw SIP-003-encoded block will be returned.\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/blocks/height/{block_height}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/blocks/height/{block_height} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe raw SIP-003-encoded block will be returned.\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-blocks-block_id)\nGet Nakamoto block by ID\nget\nhttp://localhost:20443/v3/blocks/{block_id}\nGet a specific Nakamoto block (Stacks 3.x+) by its index block hash. This endpoint streams the block data from the Nakamoto staging blocks database where Nakamoto blocks are stored with additional metadata including tenure information.\n**Compatibility** : Works with Nakamoto blocks only. For Stacks 2.x blocks, use `/v2/blocks/{block_id}`.\nPath parameters\nblock_idstringRequired\nThe block\"s ID hash\nResponses\n200\nThe raw SIP-003-encoded block will be returned.\napplication/octet-stream\nResponsestring ¬∑ binary\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v3/blocks/{block_id}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/blocks/{block_id} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nThe raw SIP-003-encoded block will be returned.\nCopy```\nbinary\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v3-stacker_set-cycle_number)\nFetch the stacker and signer set information for a given cycle.\nget\nhttp://localhost:20443/v3/stacker_set/{cycle_number}\nUsed to get stacker and signer set information for a given cycle.\nThis will only return information for cycles started in Epoch-2.5 where PoX-4 was active and subsequent cycles.\nPath parameters\ncycle_numberintegerRequired\nreward cycle number\nResponses\n200\nInformation for the given reward cycle\napplication/json\nResponseany\n400\nCould not fetch the given reward set\napplication/json\nget\n/v3/stacker_set/{cycle_number}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v3/stacker_set/{cycle_number} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nInformation for the given reward cycle\nCopy```\n{\n  \"$ref\": \"./components/examples/get-stacker-set.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v3-block_proposal)\nValidate a proposed Stacks block\npost\nhttp://localhost:20443/v3/block_proposal\nUsed by stackers to validate a proposed Stacks block from a miner. **This API endpoint requires a basic Authorization header.**\nrpcAuth\nrpcAuth\nBody\napplication/json\napplication/json\nblockstringRequired\nHex-encoded block data\nchain_idintegerRequired\nChain ID for the block\nResponses\n202\nBlock proposal has been accepted for processing. The result will be returned via the event observer.\napplication/json\nResponseany\n400\nBad Request\napplication/json\napplication/json text/plain\n401\nUnauthorized. Invalid or missing authentication token.\ntext/plain\n429\nThere is an ongoing proposal validation being processed, the new request cannot be accepted until the prior request has been processed.\napplication/json\n500\nInternal Server Error\ntext/plain\npost\n/v3/block_proposal\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v3/block_proposal HTTP/1.1\nHost: localhost:20443\nauthorization: YOUR_API_KEY\nContent-Type: application/json\nAccept: */*\nContent-Length: 73\n{\n  \"$ref\": \"./components/examples/post-block-proposal-request.example.json\"\n}\n```\n\nTest it\n202\nBlock proposal has been accepted for processing. The result will be returned via the event observer.\nCopy```\n{\n  \"$ref\": \"./components/examples/post-block-proposal-response.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-constant_val-contract_address-contract_name-constant_name)\nGet the value of a constant inside a contract\nget\nhttp://localhost:20443/v2/constant_val/{contract_address}/{contract_name}/{constant_name}\nAttempt to fetch the value of a constant inside a contract. The contract is identified with [Stacks Address] and [Contract Name] in the URL path. The constant is identified with [Constant Name].\nIn the response, `data` is the hex serialization of the constant value.\nPath parameters\nconstant_nameanyRequired\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/constant_val/{contract_address}/{contract_name}/{constant_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/constant_val/{contract_address}/{contract_name}/{constant_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/constant-value.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-clarity-metadata-contract_address-contract_name-clarity_metadata_key)\nGet the contract metadata for the metadata key\nget\nhttp://localhost:20443/v2/clarity/metadata/{contract_address}/{contract_name}/{clarity_metadata_key}\nAttempt to fetch the metadata of a contract. The contract is identified with [Contract Address] and [Contract Name] in the URL path. The metadata key is identified with [Clarity Metadata Key].\nIn the response, `data` is formatted as JSON.\nPath parameters\nclarity_metadata_keystringRequired\nMetadata key\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/clarity/metadata/{contract_address}/{contract_name}/{clarity_metadata_key}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/clarity/metadata/{contract_address}/{contract_name}/{clarity_metadata_key} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-metadata.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-clarity-marf-marf_key_hash)\nGet the MARF value for a given key\nget\nhttp://localhost:20443/v2/clarity/marf/{marf_key_hash}\nAttempt to fetch the value of a MARF key. The key is a 64-character hex string representing the MARF node hash.\nPath parameters\nmarf_key_hashstring ¬∑ min: 64 ¬∑ max: 64Required\nThe 64-character hex-encoded hash of the MARF key.\nPattern: `^[0-9a-f]{64}$`\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/clarity/marf/{marf_key_hash}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/clarity/marf/{marf_key_hash} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/clarity-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-traits-contract_address-contract_name-trait_contract_address-trait_contract_name-trait_name)\nGet trait implementation details\nget\nhttp://localhost:20443/v2/traits/{contract_address}/{contract_name}/{trait_contract_address}/{trait_contract_name}/{trait_name}\nDetermine whether or not a specified trait is implemented (either explicitly or implicitly) within a given contract.\nPath parameters\ntrait_contract_addressstring ¬∑ min: 28 ¬∑ max: 41Required\nStacks address of the trait-defining contract.\nExample: `SP2Z1K16238380NBP4T38A4G10A90Q03JJ2C2003`Pattern: `^[0123456789ABCDEFGHJKMNPQRSTVWXYZ]{28,41}$`\ntrait_contract_namestring ¬∑ min: 1 ¬∑ max: 128Required\nContract name of the trait-defining contract.\nExample: `some-trait`Pattern: `^[a-zA-Z]([a-zA-Z0-9]|[-_]){0,127}$`\ntrait_nameanyRequiredExample: `some-trait`\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\nget\n/v2/traits/{contract_address}/{contract_name}/{trait_contract_address}/{trait_contract_name}/{trait_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/traits/{contract_address}/{contract_name}/{trait_contract_address}/{trait_contract_name}/{trait_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/is-trait-implemented.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-pox)\nGet PoX details\nget\nhttp://localhost:20443/v2/pox\nGet Proof of Transfer (PoX) information. Can be used for Stacking.\nResponses\n200\nSuccess\napplication/json\nResponseany\nget\n/v2/pox\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/pox HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/pox-info.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-info)\nGet Core API info\nget\nhttp://localhost:20443/v2/info\nGet Core API information\nResponses\n200\nSuccess\napplication/json\nResponseany\n500\nInternal Server Error\ntext/plain\nget\n/v2/info\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/info HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/node-info.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-fees-transfer)\nGet estimated fee\nget\nhttp://localhost:20443/v2/fees/transfer\nGet an estimated fee rate for STX transfer transactions. This is a fee rate per byte, returned as a JSON integer (microSTX per byte).\nResponses\n200\nFee rate in microSTX per byte\napplication/json\nResponseinteger ¬∑ min: 1\nFee rate in microSTX per byte\n500\nInternal Server Error\ntext/plain\nget\n/v2/fees/transfer\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/fees/transfer HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nFee rate in microSTX per byte\nCopy```\n3\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v2-fees-transaction)\nGet approximate fees for the given transaction\npost\nhttp://localhost:20443/v2/fees/transaction\nGet an estimated fee for the supplied transaction. This estimates the execution cost of the transaction, the current fee rate of the network, and returns estimates for fee amounts.\n  * `transaction_payload` is a hex-encoded serialization of the TransactionPayload for the transaction.\n  * `estimated_len` is an optional argument that provides the endpoint with an estimation of the final length (in bytes) of the transaction, including any post-conditions and signatures\n\n\nIf the node cannot provide an estimate for the transaction (e.g., if the node has never seen a contract-call for the given contract and function) or if estimation is not configured on this node, a 400 response is returned. The 400 response will be a JSON error containing a `reason` field which can be one of the following:\n  * `DatabaseError` - this Stacks node has had an internal database error while trying to estimate the costs of the supplied transaction.\n  * `NoEstimateAvailable` - this Stacks node has not seen this kind of contract-call before, and it cannot provide an estimate yet.\n  * `CostEstimationDisabled` - this Stacks node does not perform fee or cost estimation, and it cannot respond on this endpoint.\n\n\nThe 200 response contains the following data:\n  * `estimated_cost` - the estimated multi-dimensional cost of executing the Clarity VM on the provided transaction.\n  * `estimated_cost_scalar` - a unitless integer that the Stacks node uses to compare how much of the block limit is consumed by different transactions. This value incorporates the estimated length of the transaction and the estimated execution cost of the transaction. The range of this integer may vary between different Stacks nodes. In order to compute an estimate of total fee amount for the transaction, this value is multiplied by the same Stacks node\"s estimated fee rate.\n  * `cost_scalar_change_by_byte` - a float value that indicates how much the `estimated_cost_scalar` value would increase for every additional byte in the final transaction.\n  * `estimations` - an array of estimated fee rates and total fees to pay in microSTX for the transaction. This array provides a range of estimates (default: 3) that may be used. Each element of the array contains the following fields:\n    * `fee_rate` - the estimated value for the current fee rates in the network\n    * `fee` - the estimated value for the total fee in microSTX that the given transaction should pay. These values are the result of computing: `fee_rate` x `estimated_cost_scalar`. If the estimated fees are less than the minimum relay fee `(1 ustx x estimated_len)`, then that minimum relay fee will be returned here instead.\n\n\nNote: If the final transaction\"s byte size is larger than supplied to `estimated_len`, then applications should increase this fee amount by:\n`fee_rate` x `cost_scalar_change_by_byte` x (`final_size` - `estimated_size`)\nBody\napplication/json\napplication/json\nanyOptional\nResponses\n200\nEstimated fees for the transaction\napplication/json\nResponseany\n400\nFee estimation error\napplication/json\n500\nInternal Server Error\ntext/plain\npost\n/v2/fees/transaction\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/fees/transaction HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\nContent-Length: 69\n{\n  \"$ref\": \"./components/examples/fee-transaction-request.example.json\"\n}\n```\n\nTest it\n200\nEstimated fees for the transaction\nCopy```\n{\n  \"$ref\": \"./components/examples/fee-transaction-response.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#get-v2-accounts-principal)\nGet account info\nget\nhttp://localhost:20443/v2/accounts/{principal}\nGet the account data for the provided principal\nWhere balance is the hex encoding of a unsigned 128-bit integer (big-endian), nonce is a unsigned 64-bit integer, and the proofs are provided as hex strings.\nFor non-existent accounts, this does not 404, rather it returns an object with balance and nonce of 0.\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/accounts/{principal}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/accounts/{principal} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/account-data.example.json\"\n}\n```\n\n### \n[](https://docs.stacks.co/reference/api#post-v3-contracts-fast-call-read-contract_address-contract_name-function_name)\nCall read-only function in fast mode (no cost and memory tracking)\npost\nhttp://localhost:20443/v3/contracts/fast-call-read/{contract_address}/{contract_name}/{function_name}\nCall a read-only public function on a given smart contract without cost tracking.\nThe contract is identified with [Stacks Address] and [Contract Name] in the URL path. The function is identified with [Function Name].\nThe arguments to the function are supplied via the POST body. This should be a JSON object with two main properties:\n  * `sender` which should be a standard Stacks address\n  * `arguments` which should be an array of hex-encoded Clarity values.\n\n\n**This API endpoint requires a basic Authorization header.**\nrpcAuth\nrpcAuth\nPath parameters\nfunction_nameanyRequired\nBody\napplication/json\napplication/json\nanyOptionalExample: `{\"sender\":\"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info\",\"arguments\":[\"0x0011...\",\"0x00231...\"]}`\nResponses\n200\nFunction executed successfully\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n408\nTimeout\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v3/contracts/fast-call-read/{contract_address}/{contract_name}/{function_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v3/contracts/fast-call-read/{contract_address}/{contract_name}/{function_name} HTTP/1.1\nHost: localhost:20443\nauthorization: YOUR_API_KEY\nContent-Type: application/json\nAccept: */*\nContent-Length: 102\n{\n  \"sender\": \"SP31DA6FTSJX2WGTZ69SFY11BH51NZMB0ZW97B5P0.get-info\",\n  \"arguments\": [\n    \"0x0011...\",\n    \"0x00231...\"\n  ]\n}\n```\n\nTest it\n200\nFunction executed successfully\n```\n\nNo content\n\n```\n\nSuccessful function call\n### \n[](https://docs.stacks.co/reference/api#post-v2-contracts-call-read-contract_address-contract_name-function_name)\nCall read-only function\npost\nhttp://localhost:20443/v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}\nCall a read-only public function on a given contract.\nThe contract is identified with [Stacks Address] and [Contract Name] in the URL path. The function is identified with [Function Name].\nThe arguments to the function are supplied via the POST body. This should be a JSON object with two main properties:\n  * `sender` which should be a standard Stacks address\n  * `arguments` which should be an array of hex-encoded Clarity values.\n\n\nPath parameters\nfunction_nameanyRequired\nBody\napplication/json\napplication/json\nanyOptional\nResponses\n200\nFunction executed successfully\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\npost\n/v2/contracts/call-read/{contract_address}/{contract_name}/{function_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nPOST /v2/contracts/call-read/{contract_address}/{contract_name}/{function_name} HTTP/1.1\nHost: localhost:20443\nContent-Type: application/json\nAccept: */*\n\n```\n\nTest it\n200\nFunction executed successfully\n```\n\nNo content\n\n```\n\nSuccessful function call\n### \n[](https://docs.stacks.co/reference/api#get-v2-contracts-source-contract_address-contract_name)\nGet contract source\nget\nhttp://localhost:20443/v2/contracts/source/{contract_address}/{contract_name}\nReturns the Clarity source code of a given contract, along with the block height it was published in, and the MARF proof for the data.\nResponses\n200\nSuccess\napplication/json\nResponseany\n400\nBad request\ntext/plain\n404\nNot found\ntext/plain\n500\nInternal Server Error\ntext/plain\nget\n/v2/contracts/source/{contract_address}/{contract_name}\nHTTP\nHTTP cURL JavaScript Python\nCopy```\nGET /v2/contracts/source/{contract_address}/{contract_name} HTTP/1.1\nHost: localhost:20443\nAccept: */*\n\n```\n\nTest it\n200\nSuccess\nCopy```\n{\n  \"$ref\": \"./components/examples/contract-source.example.json\"\n}\n```\n\n[PreviousCommunity Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)[NextClarity Types](https://docs.stacks.co/reference/types)\nLast updated 29 days ago\nWas this helpful?\n",
      "wordCount": 6528,
      "title": "API | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/example-contracts",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üèóÔ∏èExample Contracts](https://docs.stacks.co/example-contracts)\n\n\n# Audited Starter Contracts\nHere's a list of sample contracts to learn Clarity or to serve as a starting point for your next project. All contracts come from the [Clarity book](https://book.clarity-lang.org/) and have been audited by [Coinfabrik](https://www.coinfabrik.com/).\n  * [Counter](https://github.com/clarity-lang/book/tree/main/projects/counter)\n  * [Multisig Vault](https://github.com/clarity-lang/book/tree/main/projects/multisig-vault)\n  * [Sip-009 NFT](https://github.com/clarity-lang/book/tree/main/projects/sip009-nft)\n  * [SIP-010 FT](https://github.com/clarity-lang/book/tree/main/projects/sip010-ft)\n  * [Timelocked Wallet](https://github.com/clarity-lang/book/tree/main/projects/timelocked-wallet)\n  * [Tiny Market (NFT marketplace)](https://github.com/clarity-lang/book/tree/main/projects/tiny-market)\n\n\n[PreviousStacks Tooling](https://docs.stacks.co/reference/the-stack)[NextStacking](https://docs.stacks.co/example-contracts/stacking)\nLast updated 1 year ago\nWas this helpful?\n",
      "wordCount": 602,
      "title": "Audited Starter Contracts | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/press-and-top-links",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n![Page cover](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FtOCiJfV1A2a8roFJSYLf%252F%252B%2520%286%29.svg%3Falt%3Dmedia%26token%3D093063f4-f5f2-4645-96fb-233fdc64ff4d&width=1248&dpr=4&quality=100&sign=3d6fa701&sv=2)\nWas this helpful?\nCopy\n  1. [üß°Press & Top Links](https://docs.stacks.co/press-and-top-links)\n\n\n#  üî∂2024\nThis page indexes top stories, press, and reports related to Stacks on a monthly basis.\nFor weekly stories delivered to your inbox, subscribe to [Stacks Snacks](https://stackssnacks.com/). For quarterly ecosystem recaps, subscribe to the [Stacks Foundation newsletter](https://newsletters.stacks.org).\n[üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)[üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)[üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)[üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)[üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)[üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)[üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)[üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)[üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)[üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)[üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)[üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n[PreviousMulti Send](https://docs.stacks.co/example-contracts/multi-send)[NextJanuary 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\nLast updated 9 months ago\nWas this helpful?\n",
      "wordCount": 602,
      "title": "2024 | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/bitcoin-theses-and-reports",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n![Page cover](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FtOCiJfV1A2a8roFJSYLf%252F%252B%2520%286%29.svg%3Falt%3Dmedia%26token%3D093063f4-f5f2-4645-96fb-233fdc64ff4d&width=1248&dpr=4&quality=100&sign=3d6fa701&sv=2)\nWas this helpful?\nCopy\n  1. [üß°Bitcoin Theses and Reports](https://docs.stacks.co/bitcoin-theses-and-reports)\n\n\n#  üü†Bitcoin Theses\nThis list will be updated monthly and capture notable investor theses or industry commentary on Stacks and the Bitcoin ecosystem.\nTitle\nOutlet/Author\nDate\n[TradFi Tomorrow: DeFi and the Rise of Extensible Finance](https://www.paradigm.xyz/2025/03/tradfi-tomorrow-defi-and-the-rise-of-extensible-finance)\nParadigm\nMarch 2025\nüí≠ [It's time to make your It‚Äôs time to make your BTC productive again](https://medium.com/@aspendigitalAMP/its-time-to-make-your-btc-productive-again-7532ea788a32)\nAspen Digital\nMarch 2025\nüí≠ [The Bitcoin Renaissance: Unlocking Trillions in Value](https://www.forbes.com/sites/leeorshimron/2024/08/13/the-bitcoin-renaissance-unlocking-trillions-in-value/)\nLeeor Shimron, Forbes\nAugust 2024\nüí≠[My journey with the Blockchain Ecosystem and why do I like Stacks?](https://www.linkedin.com/pulse/my-journey-blockchain-ecosystem-why-do-i-like-stacks-ali-farid-khwaja-wkybf?ref=stacksblog)\nAli Farid Khwaja\nJuly 2024\nüñãÔ∏è [Bitcoin and Future Infracon Highlights](https://arkstreamcapital.medium.com/arkstream-capital-bitcoin-and-future-infracon-highlights-b9b3ac4777cd)\nArkstream Capital\nJune 2024\nüìä [The Build on Bitcoin Era is Here](https://mythofmoney.substack.com/p/build-on-bitcoin-era-is-here)\nMyth of Money\nFebruary 2024\nüìä [2024 Bitcoin Halving: This Time It's Different](https://www.grayscale.com/research/reports/2024-halving-this-time-its-actually-different)\nGrayscale\nFebruary 2024\nüå± [The Year Ahead | Pantera Blockchain Letter](https://panteracapital.com/blockchain-letter/the-year-ahead-2024/)\nPantera\nJanuary 2024\nüå± [State of Bitcoin Q4 2023](https://messari.io/report/state-of-bitcoin-q4-2023)\nMessari\nJanuary 2024\nüñãÔ∏è [Notable Moments for Bitcoin in 2024](https://trustmachines.co/blog/notable-moments-for-bitcoin-in-2024/?ref=stacksblog)\nTrust Machines\nJanuary 2024\nüìô [Bitcoin Layers: Tapestry of a Trustless Financial Era](https://bitcoinlayersreport.com/)\nSpartan Group\nDecember 2023\nüß™ [A Technical History of Blockchain Design, Innovation, and Narratives](https://foundationcapital.com/a-technical-history-of-blockchain-design-innovation-and-narratives-part-i/)\nFoundation Capital\nDecember 2023\nüìä [2024 Crypto Market Outlook](https://www.coinbase.com/nl/institutional/research-insights/research/market-intelligence/2024-crypto-market-outlook)\nCoinbase\nDecember 2023\nüëÄ [STX Thesis Update](https://medium.com/@halp1120/stx-thesis-update-cd09b7f2cce8)\nHal Press\nDecember 2023\n[PreviousSeptember 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)[NextBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\nLast updated 6 months ago\nWas this helpful?\n",
      "wordCount": 745,
      "title": "Bitcoin Theses | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [The Basics](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#the-basics)\n  * [Users/STX Holders](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#users-stx-holders)\n  * [Stackers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stackers)\n  * [Stacking Pool Operators](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stacking-pool-operators)\n  * [Signers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#signers)\n  * [Application Developers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#application-developers)\n  * [Exchanges](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#exchanges)\n\n\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n\n\n# Nakamoto Upgrade - Start Here\nThe Nakamoto Upgrade is a major upgrade to the Stacks blockchain that instantiated at Bitcoin block 840,360. This marked the start of the [Nakamoto mainnet rollout](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan).\nThere are several important things to be aware of when it comes to how the Nakamoto upgrade will be rolled out and different actions you may need to take depending on your role in the ecosystem.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#the-basics)\nThe Basics\nFirst of all, if you aren't familiar with what Nakamoto is, you'll want to [get up to speed](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release).\nNext, you'll want to make sure you understand the rollout plan. Nakamoto is a major change to the network, and there are several moving parts and a specific, intentional [rollout plan and timeline](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan).\nAfter you familiarize yourself with what Nakamoto is and how it is being rolled out, you can check to see what specific actions you need to take and knowledge you need to have depending on your role. Those are each outlined below.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#users-stx-holders)\nUsers/STX Holders\nThe upgrade is simple for you, you don't have to do anything. No token transfers, etc. For most of you, your wallets will be upgraded automatically and you'll be on the upgraded network without even realizing there was a change. \nIn terms of buying/trading/withdrawing, exchanges _may_ briefly suspend STX-related activities, as they upgrade their nodes. Communicating a deposit/withdrawal suspension is the typical process, but in practice, these suspensions are either very brief or don't end up happening at all assuming their upgrade went smoothly. If an exchange decides to suspend activity they will communicate this to you directly. Again, typically these suspensions are quite brief and most exchanges don't suspend at all. If you have an issue with your exchange, please get in touch with them directly. \n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stackers)\nStackers\nAfter Nakamoto activation, stackers will need to either operate or work with a signer. If you are stacking in a pool, your pool operator will be responsible for running the signer. If you are solo stacking, you can either run your own signer or collaborate with an existing signer in order to stack your STX. For more information on how stacking and signing work together, visit the [Stack STX guide](https://docs.stacks.co/guides-and-tutorials/stack-stx).\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stacking-pool-operators)\nStacking Pool Operators\nIf you are a pool operator, you'll need to make sure you are ready to accept delegations and that you have an operational signer you can stack with. Details for this process can be found in the [How to Operate a Pool guide](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool).\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#signers)\nSigners\nIf you are operating as a signer, you'll want to make sure you familiarize yourself with both the [stacking guide](https://docs.stacks.co/guides-and-tutorials/stack-stx) and the [running a signer guide](https://docs.stacks.co/guides-and-tutorials/running-a-signer). These will give you all the information you need to not only run a signer but understand how signing and stacking work together. \n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#application-developers)\nApplication Developers\nThe instantiation phase (current phase) focuses on activation the new stacking rules in pox-4. Fast blocks won't be available until after Activation, projected ~October 29th. This means that most developers won't need to do anything different, although there are some changes to various Hiro products and tools you should be aware of. Details on this can be found in the [Nakamoto for App Developers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto) guide.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#exchanges)\nExchanges\nFor exchanges, your role will be much the same as other upgrades, and really only involves upgrading your node to the newest version. Depending on your setup, you may also want to take a look at some changes to the API and stacks.js. Details can be found in the [Nakamoto for Exchanges](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges) guide.\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1157,
      "title": "Nakamoto Upgrade - Start Here | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [The Basics](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#the-basics)\n  * [Users/STX Holders](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#users-stx-holders)\n  * [Stackers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stackers)\n  * [Stacking Pool Operators](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stacking-pool-operators)\n  * [Signers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#signers)\n  * [Application Developers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#application-developers)\n  * [Exchanges](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#exchanges)\n\n\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n\n\n# Nakamoto Upgrade - Start Here\nThe Nakamoto Upgrade is a major upgrade to the Stacks blockchain that instantiated at Bitcoin block 840,360. This marked the start of the [Nakamoto mainnet rollout](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan).\nThere are several important things to be aware of when it comes to how the Nakamoto upgrade will be rolled out and different actions you may need to take depending on your role in the ecosystem.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#the-basics)\nThe Basics\nFirst of all, if you aren't familiar with what Nakamoto is, you'll want to [get up to speed](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release).\nNext, you'll want to make sure you understand the rollout plan. Nakamoto is a major change to the network, and there are several moving parts and a specific, intentional [rollout plan and timeline](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan).\nAfter you familiarize yourself with what Nakamoto is and how it is being rolled out, you can check to see what specific actions you need to take and knowledge you need to have depending on your role. Those are each outlined below.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#users-stx-holders)\nUsers/STX Holders\nThe upgrade is simple for you, you don't have to do anything. No token transfers, etc. For most of you, your wallets will be upgraded automatically and you'll be on the upgraded network without even realizing there was a change. \nIn terms of buying/trading/withdrawing, exchanges _may_ briefly suspend STX-related activities, as they upgrade their nodes. Communicating a deposit/withdrawal suspension is the typical process, but in practice, these suspensions are either very brief or don't end up happening at all assuming their upgrade went smoothly. If an exchange decides to suspend activity they will communicate this to you directly. Again, typically these suspensions are quite brief and most exchanges don't suspend at all. If you have an issue with your exchange, please get in touch with them directly. \n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stackers)\nStackers\nAfter Nakamoto activation, stackers will need to either operate or work with a signer. If you are stacking in a pool, your pool operator will be responsible for running the signer. If you are solo stacking, you can either run your own signer or collaborate with an existing signer in order to stack your STX. For more information on how stacking and signing work together, visit the [Stack STX guide](https://docs.stacks.co/guides-and-tutorials/stack-stx).\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#stacking-pool-operators)\nStacking Pool Operators\nIf you are a pool operator, you'll need to make sure you are ready to accept delegations and that you have an operational signer you can stack with. Details for this process can be found in the [How to Operate a Pool guide](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool).\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#signers)\nSigners\nIf you are operating as a signer, you'll want to make sure you familiarize yourself with both the [stacking guide](https://docs.stacks.co/guides-and-tutorials/stack-stx) and the [running a signer guide](https://docs.stacks.co/guides-and-tutorials/running-a-signer). These will give you all the information you need to not only run a signer but understand how signing and stacking work together. \n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#application-developers)\nApplication Developers\nThe instantiation phase (current phase) focuses on activation the new stacking rules in pox-4. Fast blocks won't be available until after Activation, projected ~October 29th. This means that most developers won't need to do anything different, although there are some changes to various Hiro products and tools you should be aware of. Details on this can be found in the [Nakamoto for App Developers](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto) guide.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-upgrade-start-here#exchanges)\nExchanges\nFor exchanges, your role will be much the same as other upgrades, and really only involves upgrading your node to the newest version. Depending on your setup, you may also want to take a look at some changes to the API and stacks.js. Details can be found in the [Nakamoto for Exchanges](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges) guide.\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1157,
      "title": "Nakamoto Upgrade - Start Here | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Step 1, Step 2: Instantiation & Activation](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#step-1-step-2-instantiation-and-activation)\n  * [Nakamoto Activation Sequence](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#nakamoto-activation-sequence)\n  * [Factors that could affect timelines:](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#factors-that-could-affect-timelines)\n\n\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n\n\n# Nakamoto Rollout Plan\nTestnet and mainnet rollout sequencing for the Nakamoto upgrade. Several key steps bring more features live in a safe, step-by-step process that will give builders and partners time to integrate.\nNakamoto has completed step 1 of the rollout (Instantiation). Next, a hard fork that follows an Activation sequence outlined below will make Nakamoto features available to the whole network. \n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#step-1-step-2-instantiation-and-activation)\nStep 1, Step 2: Instantiation & Activation\nThe rollout will follow this two-step process, each of which is implemented via hard fork. \n  1. **Step 1 - Instantiation:** The pox-4 contract and the majority of the Nakamoto code are shipped, but Nakamoto rules are inactive. This is so other aspects of the contract can be tested before layering on the complexity that comes with the testnet (and later mainnet) being dependent on it. Importantly, this phase also allows time for Signers to register without the network being dependent on them to sign blocks.\n  2. **Step 2 - Activation:** Once completely rolled out, the full set of Nakamoto features including Signer-based functions, fast blocks, and Bitcoin finality. In other words, ‚Äòthe switch is flipped‚Äô! This switch is scheduled to occur at Bitcoin Block #867867 (~October 29th).\n\n\nIt‚Äôs important to note the heaviest lift of any hard fork is historically the sync from genesis. With the two Nakamoto forks, one goal is not to require this, making the upgrade more akin to a push-button software update and much simpler for all node operators.\n**What are ‚ÄòNakamoto Rules‚Äô?**[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#what-are-nakamoto-rules)\nNakamoto rules are the logic that makes Nakamoto different than the version before it called Stacks 2.4. The key difference is that under Nakamoto, block validation logic requires Signers to sign the blocks to be confirmed as anchor blocks. At Step 1 (Instantiation), this logic, or the ‚ÄòNakamoto Rules‚Äô remains inactive, meaning the network follows the block validation rules of Stacks 2.4. Once the testnet (and later mainnet) reaches Activation, the network switches to running these Nakamoto rules and all the features we‚Äôre excited about go live for everybody.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#nakamoto-activation-sequence)\nNakamoto Activation Sequence\nStep \nOverview \nDate/Period\n‚úÖ A, B\n**A** ctivation Window Opens & **B** inaries Delivered\nPending no new bugs, final binaries are delivered - this is all the code Signers, Miners, and Node Operators need to run the network.\nAug 28th\n‚úÖ C\n**C** ycle Handoff - Signers\nAt the end of Cycle 92, core developers will watch for a successful ‚Äòhandoff‚Äô, meaning a successful change of the Signer sets between Stacking cycles.\nCycle 92 to Cycle 93\n‚úÖ D\nFirst Testnet Hard Fork\nCore developers performed a successful testnet hardfork (on Nakamoto testnet).\nSept 27\n‚úÖ E\nDetermine Hard Fork Block\nCore developers have selected Bitcoin block #867867.\nOctober 17\nF\nEpoch 3.0 - Nakamoto Rules Start\nFast blocks, full Bitcoin finality! Nakamoto rules go live on mainnet at hard fork block.\n~October 29\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan#factors-that-could-affect-timelines)\nFactors that could affect timelines:\n  * **Testing & Audit Results: **A top-notch group of researchers, contractors, and testers, along with security auditors from Clarity Alliance and Quantstamp, continue to hammer away at Nakamoto as they have for the past several months. This testing is ongoing, so there is always the possibility they surface an issue that needs to be addressed before the final hard fork.\n  * **Signer Needs:** The ecosystem is proud to have industry leaders comprising its leading Signer network. Signers are a critical new network player so if a clear issue or unexpected need arises during activation, additional time would be taken to address it.\n  * **Miner adoption:** As always, miners must choose to adopt the new code. Should they be delayed or experience issues with their setups, it could cause a delay in Activation.\n\n\nFactors that could affect timelines: As always, core developers are committed to a safe, secure launch. As such, several factors _could_ warrant additional time added to the Nakamoto activation sequence outlined above and result in a new hard fork block being selected:\nLast updated 11 months ago\nWas this helpful?\n",
      "wordCount": 1220,
      "title": "Nakamoto Rollout Plan | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [Previous Stacks Block Production Design](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#previous-stacks-block-production-design)\n  * [The Problems](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#the-problems)\n  * [The Solutions](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#the-solutions)\n  * [Nakamoto Design](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#nakamoto-design)\n\n\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n\n\n# What is the Nakamoto Upgrade?\nThe Nakamoto Release is a recent hard fork on the Stacks network designed to bring several benefits, chief among them are increased transaction throughput and 100% Bitcoin finality. \nWith Nakamoto, Stacks block production would no longer be tied to miner elections. Instead, miners produce blocks at a fixed cadence, and the set of PoX Stackers rely on the miner elections to determine when the current miner should stop producing blocks and a new miner should start. This blockchain will only fork if 70% of Stackers approve the fork, and chain reorganization will be as difficult as reorganizing Bitcoin.\nThe Nakamoto release brings many new capabilities and improvements to the Stacks blockchain by focusing on a set of core advancements: improving transaction speed, enhancing finality guarantees for transactions, mitigating Bitcoin miner MEV (miner extractable value) opportunities that affect PoX, and boosting robustness against chain reorganizations.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#previous-stacks-block-production-design)\nPrevious Stacks Block Production Design\nThe Stacks blockchain today produces blocks in accordance with the algorithms described in [SIP-001](https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md) and [SIP-007](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md), and [SIP-015](https://github.com/stacksgov/sips/blob/main/sips/sip-015/sip-015-network-upgrade.md). Miners compete to append a block to the blockchain through the miner selection process facilitated by a VRF backed sortition process. Miners submit a block-commit transaction to Bitcoin, which commits to the hash of the block the miner intends to append. The sortition process selects at most one block-commit in the subsequent Bitcoin block, which entitles the submitter to propagate their block and earn a block reward.\nThroughout this documentation and the SIPs, you'll frequently see the term \"cryptographic sortition\" or some variation thereof (miner sortition, the sortition, etc.). A Cryptographic sortition is a process of randomly selecting one or more entities from a set using cryptography. This is a decentralized and verifiable way to select participants for a variety of tasks, such as consensus protocols, lotteries, and auctions.\nMore specifically, miner sortition in the context of Stacks is the weighted cryptographic sortition process by which a miner candidate is selected as the next miner (leader). Details of this process are in [SIP-001](https://github.com/stacksgov/sips/blob/main/sips/sip-001/sip-001-burn-election.md) with mechanism alterations in [SIP-007](https://github.com/stacksgov/sips/blob/main/sips/sip-007/sip-007-stacking-consensus.md).\nNakamoto will introduce further mechanism alterations to this process.\n### \n[](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#the-problems)\nThe Problems\nOver the last three years the Stacks community has identified several issues with the current system design:\n  1. **Slow Bitcoin blocks, Stacks forks, and missed sortitions are disruptive to on-chain applications.** The act of waiting to produce a new block until after a sortition elects a valid miner ties best-case Stacks block production rate to the block production rate of Bitcoin, leading to very high transaction confirmation latency.\n  2. **Microblocks are not effective in speeding up transaction confirmation time.** While microblocks have the potential to mitigate missed sortitions and improve transaction inclusion time, they do not work in practice because the protocol cannot ensure that microblocks will be confirmed until the next sortition happens. Additionally, new miners will often orphan recently-confirmed transactions from the old miner that were included in microblocks because there is no consensus-critical procedure that forces the next miner to build upon the latest microblock.\n  3. **Stacks forks are not tied to Bitcoin forks, allowing cheap reorgs** The cost to reorg the last N blocks in the Stacks blockchain is the cost to produce the next N + 1 Stacks blocks (i.e. by spending BTC), which is cheap compared to the cost of reorging the Bitcoin. This SIP describes an opportunity to tie the canonical Stacks fork to the Bitcoin blockchain such that the act of reorging Stacks chain history requires the Stacks miner to produce the fork with 70% of stacker sign-off.\n  4. **Stacks forks arise due to poorly-connected miners.** If a set of miners has a hard time learning the canonical Stacks chain tip when they submit block-commits, then they will collectively orphan other miners who are better-connected. This has happened in practice.\n  5. **Some Bitcoin miners run their own Stacks miners and deliberately exclude other Stacks miners'**`**block-commits**`**from their Bitcoin blocks.** Once the STX block reward became sufficiently large this allowed them to pay a trivial PoX payout while guaranteeing that they would win the cryptographic sortition in their Bitcoin block. This was anticipated in the original design but the regularity with which it happens today is greater than the original protocol accounted for, and thus must be addressed now.\n\n\n### \n[](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#the-solutions)\nThe Solutions\nTo address these shortcomings, Nakamoto applies three fundamental changes to the way Stacks works.\n  * **Fast blocks:** The time taken for a user-submitted transaction to be mined within a block (and thus confirmed) will now take on the order of seconds, instead of tens of minutes. This is achieved by separating block production from cryptographic sortitions -- a winning miner may produce many blocks between two subsequent sortitions.\n  * **Bitcoin finality:** Once a transaction is confirmed, reversing it is at least as hard as reversing a Bitcoin transaction. The Stacks blockchain no longer forks on its own.\n  * **Bitcoin Miner MEV Resistance:** This proposal alters the sortition algorithm to ensure that Bitcoin miners do not have an advantage as Stacks miners. They must spend competitive amounts of Bitcoin currency to have a chance of earning STX.\n\n\n### \n[](https://docs.stacks.co/nakamoto-upgrade/what-is-the-nakamoto-release#nakamoto-design)\nNakamoto Design\nTo achieve these goals Nakamoto introduced the following changes to the Stacks protocol:\n  1. **Decouple Stacks tenure changes from Bitcoin block arrivals.** In both today's system and Nakamoto, miners take turns appending blocks to the Stacks blockchain -- the next miner is selected by cryptographic sortition, and the miner has the duration of the Bitcoin block (its tenure) to announce a new block state. Nakamoto allows a miner to produce many Stacks blocks per Bitcoin block instead of one, and requiring the next miner to confirm all of them. There are no more microblocks or Bitcoin-anchored blocks; instead, there are only Nakamoto Stacks blocks. This will achieve fast block times.\n  2. **Require stackers to collaborate before the next block can be produced.** Stackers will need to collectively validate, store, sign, and propagate each Nakamoto Stacks block the miner produces before the next block can be produced. Stackers must do this in order to earn their PoX payouts and unlock their STX (i.e. PoX is now treated as compensation from the miner for playing this essential role). In Nakamoto, a sortition only selects a new miner; it does not give the miner the power to unilaterally orphan confirmed transactions as it does today. This will ensure that miners do not produce forks and are able to confirm all prior Stacks blocks prior to selection.\n  3. **Use stackers to police miner behavior.** A sortition causes the Stackers to carry out a tenure change by (a) agreeing on a \"last-signed\" block from the current miner, and (b) agreeing to only sign blocks from the new miner which descend from this last-signed block. Thus, Stackers police miner behavior -- Stackers prevent miners from mining forks during their tenure, and ensure that they begin their tenures by building atop the canonical chain tip. The new miner cannot orphan recently-confirmed transactions from the old miner because the signers who approved the tenure change are necessarily aware of all Stacks blocks that came before it. This **further prevents miners from forking the Stacks blockchain.**\n  4. **Require Stacks miners to commit the indexed block hash of the first block produced by the last Stacks miner in their block-commit transactions on the Bitcoin blockchain.** This is the SHA512/256 hash of both the consensus hash of all previously-accepted Bitcoin transactions that Stacks recognizes, as well as the hash of the block itself (a block-commit today only contains the hash of the Stacks block). This will anchor the Stacks chain history to the Bitcoin up to the start of the previous miner's tenure, as well as all causally-dependent Bitcoin state that Stacks has processed. This **ensures Bitcoin finality and resolves miner connectivity issues** by putting fork prevention on Stackers.\n  5. **Adopt a Bitcoin MEV solution which punishes block-commit censorship.** The probability a stacks miner wins a sortition should be altered such that omitting block commits of honest Stacks miners is not profitable to Bitcoin miners. The mechanics of this are outlined below.\n\n\nAlthough Nakamoto is a breaking change, all smart contracts published prior to this its activation will be usable after it activates.\nLet's dive into how each of these pieces work so we can get an in-depth understanding of exactly how Nakamoto works.\nLast updated 10 months ago\nWas this helpful?\n",
      "wordCount": 1947,
      "title": "What is the Nakamoto Upgrade? | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n  2. [Nakamoto Rollout Plan](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan)\n\n\n# Nakamoto for App Developers\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#api-endpoints)\nAPI Endpoints\n  * API status \n    * Tesnet: <https://api.testnet.hiro.so/extended/>\n    * Mainnet: <https://api.hiro.so/extended/>\n  * Burn Block endpoint. This will allow you to get the hashes of fast Stacks blocks as they are added to the chain and see their associated burn blocks.\n    * Testnet: <https://api.testnet.hiro.so/extended/v2/burn-blocks>\n    * Mainnet: <https://api.hiro.so/extended/v2/burn-blocks>\n  * Pox endpoint. This allows you to get information about proof of transfer, including the currently deployed pox-4 contract. This will be helpful for anyone looking to incorporate stacking into their app.\n    * Testnet: <https://api.testnet.hiro.so/v2/pox>\n    * Mainnet: <https://api.hiro.so/v2/pox>\n\n\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#pox-4-contract)\nPoX-4 Contract\n`pox-4.clar` is the stacking contract. If you are interested in experimenting with proof of transfer use cases including state changes, solo stacking, and pool stacking, all the functions you‚Äôll need can be found at the deployed contract: \n  * Testnet: <https://explorer.hiro.so/txid/0xfba7f786fae1953fa56f4e56aeac053575fd48bf72360523366d739e96613da3?chain=testnet>\n  * Mainnet: <https://explorer.hiro.so/txid/0xc6d6e6ec82cabb2d7a9f4b85fcc298778d01186cabaee01685537aca390cdb46?chain=mainnet>\n\n\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#signers-voting-contract)\nSigners Voting Contract\nAfter a DKG (Distributed Key Generation) round, signer votes are submitted to this contract. For more on DKG, you can read the [Stackers and Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing) section of Nakamoto In-Depth.\n<https://explorer.hiro.so/txid/0x69af1dbed501acdbc0d1c79e1ecbc17e1904edacc15cf4b39d6783e720e21c00?chain=testnet>\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#block-explorer)\nBlock Explorer\nThe explorer will allow you to view fast blocks as they come in. Be sure to turn on ‚ÄúLive updates‚Äù to see them coming in in real time. <https://explorer.hiro.so/?chain=testnet>\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FxbD1nHT7bpPf4mRnsztU%252Fimage.png%3Falt%3Dmedia%26token%3D6739db3a-b6cf-4f1a-8c06-a55c061ffd76&width=768&dpr=4&quality=100&sign=c5305cca&sv=2)\nTurn on Live Updates to view blocks coming in in real time\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#local-development-environment)\nLocal Development Environment\nClarinet has been updated to work with Nakamoto using as of [version 2.4](https://github.com/hirosystems/clarinet/releases/tag/v2.4.0). That means you can use Clarinet to build locally using Nakamoto rules in your local development environment and use Clarinet and deployment plans to deploy to Nakamoto Testnet.\nBe sure to [update Clarinet](https://docs.hiro.so/clarinet/getting-started) to the newest version.\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#running-a-signer)\nRunning a signer\nIf you are interested in running a signer, you can take a look at the [How to Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) doc which will get you up to speed on how to get the signer software set up using Nakamoto.\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#office-hours)\nOffice Hours\nIf you need support or just want to ask questions while experimenting with the Nakamoto Testnet, you can [join the weekly office hours](https://events.stacks.co/event/HD16484710) with the Stacks' Foundation's Developer Advocate, Kenny Rogers.\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 901,
      "title": "Nakamoto for App Developers | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\n  * [What does the Nakamoto upgrade mean for exchanges?](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#what-does-the-nakamoto-upgrade-mean-for-exchanges)\n  * [Other Recommendations:](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#other-recommendations)\n  * [Resources:](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#resources)\n\n\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n  2. [Nakamoto Rollout Plan](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan)\n\n\n# Nakamoto for Exchanges\n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#what-is-the-nakamoto-upgrade)\nThe Nakamoto release brings many new capabilities and improvements to the Stacks blockchain by focusing on a set of core advancements: improving transaction speed, enhancing finality guarantees for transactions, mitigating Bitcoin miner MEV (miner extractable value) opportunities that affect PoX, and boosting robustness against chain reorganizations. This strategic upgrade aims to solidify trust in the Stacks network, offer greater alignment with Bitcoin's immutable nature, and foster an environment ripe for advanced Decentralized Finance (DeFi) applications. The expected outcome is a versatile, scalable, and secure platform that closely integrates with, yet distinctly enhances, the Bitcoin ecosystem. Learn more: [Nakamoto in 10 Minutes](https://docs.stacks.co/nakamoto-upgrade/nakamoto-in-10-minutes)\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#what-does-the-nakamoto-upgrade-mean-for-exchanges)\nWhat does the Nakamoto upgrade mean for exchanges?\nThe main thing exchanges will notice when the Nakamoto rollout is complete is the faster blocks! Gone are the days of waiting for Bitcoin blocks for confirmations. In addition to fast blocks, exchanges will benefit from:\n  * Smoother block production\n  * No forking at the Stacks layer, once a transaction is confirmed in an anchor block, it is as irreversible as a Bitcoin transaction (and therefore, can update confirmation rules (number of confirmations) to match Bitcoin's)\n  * For exchanges offering Stacking pools, likely increased BTC rewards thanks to MEV improvements\n\n\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#other-recommendations)\nOther Recommendations:\n  * With just a bit of extra work, exchanges can support the [Stacks SIP-10 token standard](https://github.com/stacksgov/sips/blob/main/sips/sip-010/sip-010-fungible-token-standard.md). This allows an exchange to easily list any of a growing number of tokens built on Stacks as well as the upcoming [sBTC asset](https://github.com/stacks-network/docs/blob/master/nakamoto-upgrade/nakamoto-rollout-plan/broken-reference/README.md).\n  * Exchanges that already offer staking type services to their users (programs often called Earn/Stake/etc.) should consider adding [Stacking](https://docs.stacks.co/concepts/block-production/stacking) to their platform alongside other offerings. Users can earn BTC by participating in Stacks consensus through a simple pool.\n  * The Stacks Foundation is seeking a handful of exchanges to pilot rapid BTC withdrawals via the upcoming sBTC asset, expected to closely follow the Nakamoto hard fork. Interest exchange can reach out to their usual point of contact or complete [this form](https://stacks.org/exchanges).\n\n\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto-for-exchanges#resources)\nResources:\n  * [Testnet documentation](https://docs.stacks.co/nakamoto-upgrade/nakamoto)\n  * [API documentation](https://docs.hiro.so/nakamoto/stacks-js)\n  * [Stacks Core Binaries](https://github.com/stacks-network/stacks-core/releases/latest)\n  * [Stacks Signer Binary](https://github.com/stacks-network/stacks-core/releases/tag/signer-3.1.0.0.5.0)\n  * [Stacks Core Docker Images](https://hub.docker.com/r/blockstack/stacks-core/tags?page=1&name=3.1.0.0.5)\n  * [Stacks Signer Docker Image](https://hub.docker.com/r/blockstack/stacks-signer/tags?page=1&name=3.1.0.0.5.0)\n  * [Stacks Blockchain API](https://github.com/hirosystems/stacks-blockchain-api/releases/latest)\n  * [Stacks Blockchain API Docker Images](https://hub.docker.com/r/hirosystems/stacks-blockchain-api/tags?page=1&name=8.4.0)\n\n\nLast updated 8 months ago\nWas this helpful?\n",
      "wordCount": 930,
      "title": "Nakamoto for Exchanges | Stacks Documentation"
    },
    {
      "url": "https://docs.stacks.co/nakamoto-upgrade/nakamoto",
      "content": "[![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252F1v0ZbDUgGyh92mdjDSiP%252FStacksSymbol_Black_Squircle.png%3Falt%3Dmedia%26token%3D9cbcfbdc-e31d-4323-bd5b-22e0ab923b46&width=32&dpr=4&quality=100&sign=c2a1d043&sv=2)![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F1079687915-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Forganizations%252Fhoh4mQXTl8NvI3cETroY%252Fsites%252Fsite_Q9bfU%252Ficon%252Fmw3sYGk4LF2XiSfOOi5a%252FStacksSymbol_White_Squircle.png%3Falt%3Dmedia%26token%3Dc4a8e92b-f1a7-4956-8aba-52416f71a0ff&width=32&dpr=4&quality=100&sign=f0b13246&sv=2)Stacks Documentation](https://docs.stacks.co/)\n`‚åò``K`\n  * [Start Here](https://docs.stacks.co/)\n  * üß†Concepts\n    * [Stacks 101](https://docs.stacks.co/concepts/stacks-101)\n      * [What Is Stacks?](https://docs.stacks.co/concepts/stacks-101/what-is-stacks)\n      * [Bitcoin Connection](https://docs.stacks.co/concepts/stacks-101/bitcoin-connection)\n      * [Proof of Transfer](https://docs.stacks.co/concepts/stacks-101/proof-of-transfer)\n      * [Stacks Among Other Layers](https://docs.stacks.co/concepts/stacks-101/stacks-among-other-layers)\n      * [Financial Incentive and Security Budget](https://docs.stacks.co/concepts/stacks-101/financial-incentive-and-security-budget)\n    * [Network Fundamentals](https://docs.stacks.co/concepts/network-fundamentals)\n      * [Network Basics](https://docs.stacks.co/concepts/network-fundamentals/network)\n      * [Mainnet and Testnets](https://docs.stacks.co/concepts/network-fundamentals/mainnet-and-testnets)\n      * [Accounts](https://docs.stacks.co/concepts/network-fundamentals/accounts)\n      * [Authentication](https://docs.stacks.co/concepts/network-fundamentals/authentication)\n      * [Bitcoin Name System](https://docs.stacks.co/concepts/network-fundamentals/bitcoin-name-system)\n      * [SIPs](https://docs.stacks.co/concepts/network-fundamentals/sips)\n      * [Technical Specifications](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications)\n        * [Audits](https://docs.stacks.co/concepts/network-fundamentals/technical-specifications/audits)\n    * [Block Production](https://docs.stacks.co/concepts/block-production)\n      * [Mining](https://docs.stacks.co/concepts/block-production/mining)\n      * [Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing)\n      * [Bitcoin Finality](https://docs.stacks.co/concepts/block-production/bitcoin-finality)\n      * [Bitcoin Reorgs](https://docs.stacks.co/concepts/block-production/bitcoin-reorgs)\n      * [Stacking](https://docs.stacks.co/concepts/block-production/stacking)\n    * [Transactions](https://docs.stacks.co/concepts/transactions)\n      * [How Transactions Work](https://docs.stacks.co/concepts/transactions/transactions)\n      * [Post Conditions](https://docs.stacks.co/concepts/transactions/post-conditions)\n    * [Clarity](https://docs.stacks.co/concepts/clarity)\n      * [Overview](https://docs.stacks.co/concepts/clarity/overview)\n      * [Decidability](https://docs.stacks.co/concepts/clarity/decidability)\n    * [sBTC](https://docs.stacks.co/concepts/sbtc)\n      * [Core Features](https://docs.stacks.co/concepts/sbtc/core-features)\n      * [sBTC Operations](https://docs.stacks.co/concepts/sbtc/operations)\n        * [Deposit](https://docs.stacks.co/concepts/sbtc/operations/deposit)\n        * [Withdrawal](https://docs.stacks.co/concepts/sbtc/operations/withdrawal)\n        * [Deposit vs Withdrawal Times](https://docs.stacks.co/concepts/sbtc/operations/deposit-withdrawal-times)\n      * [Emily API](https://docs.stacks.co/concepts/sbtc/emily)\n      * [Peg Wallet UTXO](https://docs.stacks.co/concepts/sbtc/peg-wallet-utxo)\n      * [Clarity Contracts](https://docs.stacks.co/concepts/sbtc/clarity-contracts)\n        * [sBTC Registry](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-registry)\n        * [sBTC Token](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-token)\n        * [sBTC Deposit](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-deposit)\n        * [sBTC Withdrawal](https://docs.stacks.co/concepts/sbtc/clarity-contracts/sbtc-withdrawal)\n      * [Auxiliary Features](https://docs.stacks.co/concepts/sbtc/auxiliary-features)\n        * [Transaction Fee Sponsorship](https://docs.stacks.co/concepts/sbtc/auxiliary-features/fee-sponsorship)\n        * [Signer Wallet Rotation](https://docs.stacks.co/concepts/sbtc/auxiliary-features/signer-wallet-rotation)\n      * [Walkthroughs](https://docs.stacks.co/concepts/sbtc/walkthroughs)\n        * [Signer Process Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/signer-process)\n        * [sBTC Transaction Walkthrough](https://docs.stacks.co/concepts/sbtc/walkthroughs/sbtc-transaction-lifecycle)\n      * [sBTC FAQ](https://docs.stacks.co/concepts/sbtc/sbtc-faq)\n      * [sBTC Audits](https://docs.stacks.co/concepts/sbtc/sbtc-audits)\n    * [Gaia](https://docs.stacks.co/concepts/gaia)\n      * [Configuration](https://docs.stacks.co/concepts/gaia/configuration)\n      * [Deploy Gaia Hub](https://docs.stacks.co/concepts/gaia/deploy-gaia-hub)\n      * [Amazon EC2](https://docs.stacks.co/concepts/gaia/amazon-ec2)\n      * [Linux](https://docs.stacks.co/concepts/gaia/linux)\n      * [Mac OS](https://docs.stacks.co/concepts/gaia/mac-os)\n  * üõ†Ô∏èGuides & Tutorials\n    * [Developer Quickstart](https://docs.stacks.co/guides-and-tutorials/hello-stacks-quickstart-tutorial)\n    * [Clarity Crash Course](https://docs.stacks.co/guides-and-tutorials/clarity-crash-course)\n    * [Build a Borrowing & Lending Protocol](https://docs.stacks.co/guides-and-tutorials/build-a-borrowing-and-lending-protocol)\n    * [Bitcoin Integration](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration)\n      * [Sending Bitcoin with Leather Wallet](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/sending-bitcoin-with-leather-wallet)\n      * [Verifying a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/verifying-a-bitcoin-transaction)\n      * [Parsing a Bitcoin Transaction](https://docs.stacks.co/guides-and-tutorials/bitcoin-integration/parsing-a-bitcoin-transaction)\n    * [Create Tokens](https://docs.stacks.co/guides-and-tutorials/tokens)\n      * [Creating a NFT](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-nft)\n      * [Creating a Fungible Token](https://docs.stacks.co/guides-and-tutorials/tokens/creating-a-fungible-token)\n    * [Build a Frontend](https://docs.stacks.co/guides-and-tutorials/frontend)\n      * [Post Conditions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/post-conditions-with-stacks.js)\n      * [Authentication with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/authentication-with-stacks.js)\n      * [Sending Transactions with Stacks.js](https://docs.stacks.co/guides-and-tutorials/frontend/sending-transactions-with-stacks.js)\n    * [Testing Smart Contracts](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts)\n      * [Fuzz Testing](https://docs.stacks.co/guides-and-tutorials/testing-smart-contracts/fuzz-testing)\n    * [Run a Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners)\n      * [Run a Node with Docker](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-docker)\n      * [Run a Node with Digital Ocean](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-digital-ocean)\n      * [Run a Node with a Hosted Provider](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-a-hosted-provider)\n      * [Run a Node with Quicknode](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-node-with-quicknode)\n      * [Run a Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-bitcoin-node)\n      * [Run a Pruned Bitcoin Node](https://docs.stacks.co/guides-and-tutorials/nodes-and-miners/run-a-pruned-bitcoin-node)\n    * [Run a Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner)\n      * [Miner Prerequisites](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-prerequisites)\n      * [Miner Costs and Fees](https://docs.stacks.co/guides-and-tutorials/run-a-miner/miner-costs-and-fees)\n      * [Mine Testnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-testnet-stacks-tokens)\n      * [Mine Mainnet Stacks Tokens](https://docs.stacks.co/guides-and-tutorials/run-a-miner/mine-mainnet-stacks-tokens)\n      * [Verify Miner](https://docs.stacks.co/guides-and-tutorials/run-a-miner/verify-miner)\n    * [Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer)\n      * [Signer Quickstart](https://docs.stacks.co/guides-and-tutorials/running-a-signer/signer-quickstart)\n      * [How to Read Signer Logs](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-read-signer-logs)\n      * [How to Monitor a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/how-to-monitor-signer)\n      * [Best practices for running a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer/best-practices-to-run-a-signer)\n      * [OpSec Best Practices](https://docs.stacks.co/guides-and-tutorials/running-a-signer/opsec-best-practices)\n    * [sBTC](https://docs.stacks.co/guides-and-tutorials/sbtc)\n      * [sBTC Builder Quickstart](https://docs.stacks.co/guides-and-tutorials/sbtc/sbtc-builder-quickstart)\n      * [How to Run an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-run-sbtc-signer)\n      * [Best practices for running an sBTC Signer](https://docs.stacks.co/guides-and-tutorials/sbtc/best-practices-for-running-an-sbtc-signer)\n      * [How to Use the sBTC Bridge](https://docs.stacks.co/guides-and-tutorials/sbtc/how-to-use-the-sbtc-bridge)\n      * [Earn sBTC Rewards](https://docs.stacks.co/guides-and-tutorials/sbtc/earn-sbtc-rewards)\n    * [Stack STX](https://docs.stacks.co/guides-and-tutorials/stack-stx)\n      * [Solo Stack](https://docs.stacks.co/guides-and-tutorials/stack-stx/stacking-flow)\n      * [Operate a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/operate-a-pool)\n      * [Stack with a Pool](https://docs.stacks.co/guides-and-tutorials/stack-stx/stack-with-a-pool)\n      * [Increase Stacked Position](https://docs.stacks.co/guides-and-tutorials/stack-stx/increase-stacking)\n      * [Stop Stacking](https://docs.stacks.co/guides-and-tutorials/stack-stx/stop-stacking)\n    * [Snapshot the chainstate](https://docs.stacks.co/guides-and-tutorials/best-practices-to-snapshot-the-chainstate)\n    * [Oracles](https://docs.stacks.co/guides-and-tutorials/oracles)\n    * [Community Tutorials](https://docs.stacks.co/guides-and-tutorials/community-tutorials)\n  * üìöReference\n    * [API](https://docs.stacks.co/reference/api)\n    * [Clarity Types](https://docs.stacks.co/reference/types)\n    * [Clarity Functions](https://docs.stacks.co/reference/functions)\n    * [Clarity Keywords](https://docs.stacks.co/reference/keywords)\n    * [Stacks Node Configuration](https://docs.stacks.co/reference/stacks-node-configuration)\n    * [Signer Configuration](https://docs.stacks.co/reference/sample-configuration-files)\n    * [Stacks Tooling](https://docs.stacks.co/reference/the-stack)\n  * üèóÔ∏èExample Contracts\n    * [Audited Starter Contracts](https://docs.stacks.co/example-contracts/audited-starter-contracts)\n    * [Stacking](https://docs.stacks.co/example-contracts/stacking)\n    * [BNS](https://docs.stacks.co/example-contracts/bns)\n    * [Multi Send](https://docs.stacks.co/example-contracts/multi-send)\n  * üß°Press & Top Links\n    * [üî∂2024](https://docs.stacks.co/press-and-top-links/2024)\n      * [üî∏January 2024](https://docs.stacks.co/press-and-top-links/2024/january-2024)\n      * [üî∏February 2024](https://docs.stacks.co/press-and-top-links/2024/february-2024)\n      * [üî∏March 2024](https://docs.stacks.co/press-and-top-links/2024/march-2024)\n      * [üî∏April 2024](https://docs.stacks.co/press-and-top-links/2024/april-2024)\n      * [üî∏May 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024)\n      * [üî∏June 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-1)\n      * [üî∏July 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-2)\n      * [üî∏August 2024](https://docs.stacks.co/press-and-top-links/2024/may-2024-3)\n      * [üî∏September 2024](https://docs.stacks.co/press-and-top-links/2024/september-2024)\n      * [üî∏October 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024)\n      * [üî∏November 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1)\n      * [üî∏December 2024](https://docs.stacks.co/press-and-top-links/2024/october-2024-1-1)\n    * [üî∂2025](https://docs.stacks.co/press-and-top-links/2025)\n      * [üî∏January 2025](https://docs.stacks.co/press-and-top-links/2025/january-2024)\n      * [üî∏February 2025](https://docs.stacks.co/press-and-top-links/2025/february-2025)\n      * [üî∏March 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025)\n      * [üî∏April 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-1)\n      * [üî∏May 2025](https://docs.stacks.co/press-and-top-links/2025/march-2025-2)\n      * [üî∏June 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025)\n      * [üî∏July 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-1)\n      * [üî∏August 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2)\n      * [üî∏September 2025](https://docs.stacks.co/press-and-top-links/2025/june-2025-2-1)\n  * üß°Bitcoin Theses and Reports\n    * [üü†Bitcoin Theses](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-theses)\n    * [üìôBitcoin Reports](https://docs.stacks.co/bitcoin-theses-and-reports/bitcoin-reports)\n  * [Contribute](https://docs.stacks.co/contribute)\n\n\n[Powered by GitBook](https://www.gitbook.com/?utm_source=content&utm_medium=trademark&utm_campaign=kmQRCSAss8rGMUFc587c)\nWas this helpful?\nCopy\n  1. [üüßNakamoto Upgrade](https://docs.stacks.co/nakamoto-upgrade)\n  2. [Nakamoto Rollout Plan](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan)\n\n\n# Nakamoto for App Developers\n### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#api-endpoints)\nAPI Endpoints\n  * API status \n    * Tesnet: <https://api.testnet.hiro.so/extended/>\n    * Mainnet: <https://api.hiro.so/extended/>\n  * Burn Block endpoint. This will allow you to get the hashes of fast Stacks blocks as they are added to the chain and see their associated burn blocks.\n    * Testnet: <https://api.testnet.hiro.so/extended/v2/burn-blocks>\n    * Mainnet: <https://api.hiro.so/extended/v2/burn-blocks>\n  * Pox endpoint. This allows you to get information about proof of transfer, including the currently deployed pox-4 contract. This will be helpful for anyone looking to incorporate stacking into their app.\n    * Testnet: <https://api.testnet.hiro.so/v2/pox>\n    * Mainnet: <https://api.hiro.so/v2/pox>\n\n\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#pox-4-contract)\nPoX-4 Contract\n`pox-4.clar` is the stacking contract. If you are interested in experimenting with proof of transfer use cases including state changes, solo stacking, and pool stacking, all the functions you‚Äôll need can be found at the deployed contract: \n  * Testnet: <https://explorer.hiro.so/txid/0xfba7f786fae1953fa56f4e56aeac053575fd48bf72360523366d739e96613da3?chain=testnet>\n  * Mainnet: <https://explorer.hiro.so/txid/0xc6d6e6ec82cabb2d7a9f4b85fcc298778d01186cabaee01685537aca390cdb46?chain=mainnet>\n\n\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#signers-voting-contract)\nSigners Voting Contract\nAfter a DKG (Distributed Key Generation) round, signer votes are submitted to this contract. For more on DKG, you can read the [Stackers and Signing](https://docs.stacks.co/concepts/block-production/stackers-and-signing) section of Nakamoto In-Depth.\n<https://explorer.hiro.so/txid/0x69af1dbed501acdbc0d1c79e1ecbc17e1904edacc15cf4b39d6783e720e21c00?chain=testnet>\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#block-explorer)\nBlock Explorer\nThe explorer will allow you to view fast blocks as they come in. Be sure to turn on ‚ÄúLive updates‚Äù to see them coming in in real time. <https://explorer.hiro.so/?chain=testnet>\n![](https://docs.stacks.co/~gitbook/image?url=https%3A%2F%2F3192840851-files.gitbook.io%2F%7E%2Ffiles%2Fv0%2Fb%2Fgitbook-x-prod.appspot.com%2Fo%2Fspaces%252FkmQRCSAss8rGMUFc587c%252Fuploads%252FxbD1nHT7bpPf4mRnsztU%252Fimage.png%3Falt%3Dmedia%26token%3D6739db3a-b6cf-4f1a-8c06-a55c061ffd76&width=768&dpr=4&quality=100&sign=c5305cca&sv=2)\nTurn on Live Updates to view blocks coming in in real time\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#local-development-environment)\nLocal Development Environment\nClarinet has been updated to work with Nakamoto using as of [version 2.4](https://github.com/hirosystems/clarinet/releases/tag/v2.4.0). That means you can use Clarinet to build locally using Nakamoto rules in your local development environment and use Clarinet and deployment plans to deploy to Nakamoto Testnet.\nBe sure to [update Clarinet](https://docs.hiro.so/clarinet/getting-started) to the newest version.\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#running-a-signer)\nRunning a signer\nIf you are interested in running a signer, you can take a look at the [How to Run a Signer](https://docs.stacks.co/guides-and-tutorials/running-a-signer) doc which will get you up to speed on how to get the signer software set up using Nakamoto.\n#### \n[](https://docs.stacks.co/nakamoto-upgrade/nakamoto-rollout-plan/nakamoto#office-hours)\nOffice Hours\nIf you need support or just want to ask questions while experimenting with the Nakamoto Testnet, you can [join the weekly office hours](https://events.stacks.co/event/HD16484710) with the Stacks' Foundation's Developer Advocate, Kenny Rogers.\nLast updated 7 months ago\nWas this helpful?\n",
      "wordCount": 901,
      "title": "Nakamoto for App Developers | Stacks Documentation"
    }
  ]
}